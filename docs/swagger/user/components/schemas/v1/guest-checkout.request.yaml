guestCheckoutProductRequest:
  type: object
  properties:
    requestId:
      type: string
      description: 支払いキー(重複判定用)
    coordinatorId:
      type: string
      description: コーディネータID
    boxNumber:
      type: integer
      format: int64
      description: 箱の通番（箱単位で購入する場合のみ）
    promotionCode:
      type: string
      description: プロモーションコード（割引適用時のみ）
    paymentMethod:
      $ref: './../../../openapi.yaml#/components/schemas/paymentMethodType'
    callbackUrl:
      type: string
      description: 決済ページからの遷移先URL
    total:
      type: integer
      format: int64
      description: 支払い合計金額（誤り検出用）
    email:
      type: string
      description: 購入者メールアドレス
    isSameAddress:
      type: boolean
      description: 配送先住所を請求先住所と同一にする
    billingAddress:
      description: 請求先住所
      $ref: '#/guestCheckoutAddress'
    shippingAddress:
      description: 配送先住所（isSameAddressフラグがTRUEの場合は未使用）
      $ref: '#/guestCheckoutAddress'
    creditCard:
      $ref: '#/guestCheckoutCreditCard'
  required:
  - requestId
  - coordinatorId
  - boxNumber
  - promotionCode
  - paymentMethod
  - callbackUrl
  - total
  - email
  - isSameAddress
  - shippingAddress
  - creditCard
  example:
    requestId: 'kSByoE6FetnPs5Byk3a9Zx'
    coordinatorId: 'kSByoE6FetnPs5Byk3a9Zx'
    boxNumber: 1
    promotionCode: 'code1234'
    paymentMethod: 2
    callbackUrl: 'http://example.com/redirect-url'
    total: 1980
    email: 'test@example.com'
    isSameAddress: false
    billingAddress:
      lastname: '&.'
      firstname: '利用者'
      lastnameKana: 'あんどどっと'
      firstnameKana: 'りようしゃ'
      postalCode: '1000014'
      prefectureCode: 13
      city: '千代田区'
      addressLine1: '永田町1-7-1'
      addressLine2: ''
      phoneNumber: '090-1234-1234'
    shippingAddress:
      lastname: '&.'
      firstname: '利用者'
      lastnameKana: 'あんどどっと'
      firstnameKana: 'りようしゃ'
      postalCode: '1000014'
      prefectureCode: 13
      city: '千代田区'
      addressLine1: '永田町1-7-1'
      addressLine2: ''
      phoneNumber: '090-1234-1234'
guestCheckoutExperienceRequest:
  type: object
  properties:
    requestId:
      type: string
      description: 支払いキー(重複判定用)
    billingAddressId:
      type: string
      description: 請求先住所ID
    promotionCode:
      type: string
      description: プロモーションコード（割引適用時のみ）
    adultCount:
      type: integer
      format: int64
      description: 大人の人数（0以上）
    juniorHighSchoolCount:
      type: integer
      format: int64
      description: 中学生の人数（0以上）
    elementarySchoolCount:
      type: integer
      format: int64
      description: 小学生の人数（0以上）
    preschoolCount:
      type: integer
      format: int64
      description: 幼児の人数（0以上）
    seniorCount:
      type: integer
      format: int64
      description: 高齢者の人数（0以上）
    transportation:
      type: string
      description: 交通手段（256文字以内）
    requestedDate:
      type: string
      description: 体験希望日（形式:yyyymmdd）
    requestedTime:
      type: string
      description: 体験希望時間（形式:hhmm）
    paymentMethod:
      $ref: './../../../openapi.yaml#/components/schemas/paymentMethodType'
    callbackUrl:
      type: string
      description: 決済ページからの遷移先URL
    total:
      type: integer
      format: int64
      description: 支払い合計金額（誤り検出用）
    email:
      type: string
      description: 購入者メールアドレス
    billingAddress:
      description: 請求先住所
      $ref: '#/guestCheckoutAddress'
    creditCard:
      $ref: '#/guestCheckoutCreditCard'
  required:
  - requestId
  - billingAddressId
  - promotionCode
  - adultCount
  - juniorHighSchoolCount
  - elementarySchoolCount
  - preschoolCount
  - seniorCount
  - transportation
  - requestedDate
  - requestedTime
  - paymentMethod
  - callbackUrl
  - total
  - email
  - billingAddress
  - creditCard
  example:
    requestId: 'kSByoE6FetnPs5Byk3a9Zx'
    billingAddressId: 'kSByoE6FetnPs5Byk3a9Zx'
    promotionCode: 'code1234'
    adultCount: 1
    juniorHighSchoolCount: 2
    elementarySchoolCount: 3
    preschoolCount: 4
    seniorCount: 5
    transportation: '電車'
    requestedDate: '20221231'
    requestedTime: '1200'
    paymentMethod: 2
    callbackUrl: 'http://example.com/redirect-url'
    total: 1980
    email: 'test@example.com'
    billingAddress:
      lastname: '&.'
      firstname: '利用者'
      lastnameKana: 'あんどどっと'
      firstnameKana: 'りようしゃ'
      postalCode: '1000014'
      prefectureCode: 13
      city: '千代田区'
      addressLine1: '永田町1-7-1'
      addressLine2: ''
      phoneNumber: '090-1234-1234'
    creditCard:
      number: '4111111111111111'
      month: 12
      year: 2024
      verificationValue: '123'
guestCheckoutAddress:
  type: object
  properties:
    lastname:
      type: string
      description: 姓(16文字まで)
    firstname:
      type: string
      description: 名(16文字まで)
    lastnameKana:
      type: string
      description: 姓(かな)(ひらがな,32文字まで)
    firstnameKana:
      type: string
      description: 名(かな)(ひらがな,32文字まで)
    postalCode:
      type: string
      description: 郵便番号(ハイフンなし)
    prefectureCode:
      $ref: './../../../openapi.yaml#/components/schemas/prefecture'
    city:
      type: string
      description: 市区町村(32文字まで)
    addressLine1:
      type: string
      description: 町名・番地(64文字まで)
    addressLine2:
      type: string
      description: ビル名・号室など(64文字まで)
    phoneNumber:
      type: string
      description: 電話番号 (ハイフンあり)
  required:
  - lastname
  - firstname
  - lastnameKana
  - firstnameKana
  - postalCode
  - prefectureCode
  - city
  - addressLine1
  - addressLine2
  - phoneNumber
  example:
    lastname: '&.'
    firstname: '利用者'
    lastnameKana: 'あんどどっと'
    firstnameKana: 'りようしゃ'
    postalCode: '1000014'
    prefectureCode: 13
    city: '千代田区'
    addressLine1: '永田町1-7-1'
    addressLine2: ''
    phoneNumber: '090-1234-1234'
guestCheckoutCreditCard:
  type: object
  properties:
    name:
      type: string
      description: カード名義
    number:
      type: string
      description: カード番号
    month:
      type: integer
      format: int64
      description: 有効期限（月）
    year:
      type: integer
      format: int64
      description: 有効期限（年）
    verificationValue:
      type: string
      description: セキュリティコード
  required:
  - name
  - number
  - month
  - year
  - verificationValue
  example:
    name: 'AND TARO'
    number: '4111111111111111'
    month: 12
    year: 2024
    verificationValue: '123'

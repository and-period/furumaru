components:
  schemas:
    types.AddCartItemRequest:
      properties:
        productId:
          description: 商品ID
          type: string
        quantity:
          description: 数量
          minimum: 1
          type: integer
      required:
      - productId
      type: object
    types.AuthResponse:
      properties:
        accessToken:
          description: アクセストークン
          type: string
        expiresIn:
          description: 有効期限
          type: integer
        refreshToken:
          description: 更新トークン
          type: string
        tokenType:
          description: トークン種別
          type: string
        userId:
          description: ユーザーID
          type: string
      type: object
    types.AuthUserResponse:
      properties:
        email:
          description: メールアドレス
          type: string
        firstname:
          description: 名
          type: string
        firstnameKana:
          description: 名（かな）
          type: string
        id:
          description: ユーザーID
          type: string
        lastCheckInAt:
          description: 最新のチェックイン日時
          type: integer
        lastname:
          description: 姓
          type: string
        lastnameKana:
          description: 姓（かな）
          type: string
        phoneNumber:
          description: 電話番号
          type: string
      type: object
    types.CalcCartResponse:
      properties:
        carts:
          description: カート一覧
          items:
            $ref: '#/components/schemas/types.Cart'
          type: array
          uniqueItems: false
        coordinator:
          $ref: '#/components/schemas/types.Coordinator'
        discount:
          description: 割引金額(税込)
          type: integer
        items:
          description: カート内の商品一覧(集計結果)
          items:
            $ref: '#/components/schemas/types.CartItem'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/types.Product'
          type: array
          uniqueItems: false
        promotion:
          $ref: '#/components/schemas/types.Promotion'
        requestId:
          description: 支払い時にAPIへ送信するキー(重複判定用)
          type: string
        shippingFee:
          description: 配送手数料(税込)
          type: integer
        subtotal:
          description: 購入金額(税込)
          type: integer
        total:
          description: 合計金額(税込)
          type: integer
      type: object
    types.Cart:
      properties:
        coordinatorId:
          description: コーディネータID
          type: string
        items:
          description: 箱の商品一覧
          items:
            $ref: '#/components/schemas/types.CartItem'
          type: array
          uniqueItems: false
        number:
          description: 箱の通番
          type: integer
        rate:
          description: 箱の占有率
          type: integer
        size:
          $ref: '#/components/schemas/types.ShippingSize'
        type:
          $ref: '#/components/schemas/types.ShippingType'
      type: object
    types.CartItem:
      properties:
        productId:
          description: 商品ID
          type: string
        quantity:
          description: 数量
          type: integer
      type: object
    types.CartResponse:
      properties:
        carts:
          description: カート一覧
          items:
            $ref: '#/components/schemas/types.Cart'
          type: array
          uniqueItems: false
        coordinators:
          description: コーディネータ一覧
          items:
            $ref: '#/components/schemas/types.Coordinator'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/types.Product'
          type: array
          uniqueItems: false
      type: object
    types.Category:
      description: 商品種別情報
      properties:
        id:
          description: 商品種別ID
          type: string
        name:
          description: 商品種別名
          type: string
      type: object
    types.CheckoutCreditCard:
      description: クレジットカード決済情報
      properties:
        month:
          description: 有効期限（月）
          maximum: 12
          minimum: 1
          type: integer
        name:
          description: カード名義
          type: string
        number:
          description: カード番号
          type: string
        verificationValue:
          description: セキュリティコード
          maxLength: 4
          minLength: 3
          type: string
        year:
          description: 有効期限（年）
          maximum: 2100
          minimum: 2000
          type: integer
      required:
      - name
      - number
      type: object
    types.CheckoutRequest:
      properties:
        boxNumber:
          description: 箱の通番（箱単位で購入する場合）
          minimum: 0
          type: integer
        callbackUrl:
          description: 決済完了後のリダイレクト先URL
          type: string
        coordinatorId:
          description: コーディネータID
          type: string
        creditCard:
          $ref: '#/components/schemas/types.CheckoutCreditCard'
        paymentMethod:
          description: 支払い方法
          type: integer
        promotionCode:
          description: プロモーションコード
          type: string
        requestId:
          description: 支払いキー(重複判定用)
          type: string
        total:
          description: 支払い合計金額（誤り検出用）
          minimum: 0
          type: integer
      required:
      - callbackUrl
      - coordinatorId
      - paymentMethod
      - requestId
      type: object
    types.CheckoutResponse:
      properties:
        url:
          description: 遷移先URL
          type: string
      type: object
    types.CheckoutStateResponse:
      properties:
        orderId:
          description: 注文履歴ID
          type: string
        status:
          $ref: '#/components/schemas/types.PaymentStatus'
      type: object
    types.Coordinator:
      description: コーディネータ情報
      properties:
        businessDays:
          description: 営業曜日(発送可能日)
          items:
            type: integer
          type: array
          uniqueItems: false
        city:
          description: 市区町村
          type: string
        facebookId:
          description: Facebookアカウント
          type: string
        headerUrl:
          description: ヘッダー画像URL
          type: string
        id:
          description: コーディネータID
          type: string
        instagramId:
          description: Instagramアカウント
          type: string
        marcheName:
          description: マルシェ名
          type: string
        prefecture:
          description: 都道府県
          type: string
        productTypeIds:
          description: 取り扱い品目一覧
          items:
            type: string
          type: array
          uniqueItems: false
        profile:
          description: 紹介文
          type: string
        promotionVideoUrl:
          description: 紹介映像URL
          type: string
        thumbnailUrl:
          description: サムネイルURL
          type: string
        username:
          description: 表示名
          type: string
      type: object
    types.CreateAuthUserRequest:
      properties:
        authToken:
          description: LINEの認証トークン
          type: string
        firstname:
          description: 名
          maxLength: 16
          type: string
        firstnameKana:
          description: 名 かな
          maxLength: 32
          type: string
        lastCheckInAt:
          description: 最新のチェックイン日時
          minimum: 0
          type: integer
        lastname:
          description: 姓
          maxLength: 16
          type: string
        lastnameKana:
          description: 姓 かな
          maxLength: 32
          type: string
        phoneNumber:
          description: 電話番号
          type: string
      required:
      - authToken
      - firstname
      - firstnameKana
      - lastname
      - lastnameKana
      - phoneNumber
      type: object
    types.DeliveryType:
      description: 配送方法
      type: integer
      x-enum-comments:
        DeliveryTypeFrozen: 冷凍便
        DeliveryTypeNormal: 常温便
        DeliveryTypeRefrigerated: 冷蔵便
      x-enum-varnames:
      - DeliveryTypeUnknown
      - DeliveryTypeNormal
      - DeliveryTypeRefrigerated
      - DeliveryTypeFrozen
    types.DiscountType:
      description: 割引計算方法
      type: integer
      x-enum-comments:
        DiscountTypeAmount: 固定額(円)
        DiscountTypeFreeShipping: 送料無料
        DiscountTypeRate: 料率計算(%)
      x-enum-varnames:
      - DiscountTypeUnknown
      - DiscountTypeAmount
      - DiscountTypeRate
      - DiscountTypeFreeShipping
    types.GetAccessTokenRequest:
      properties:
        refreshToken:
          description: 更新トークン
          type: string
      required:
      - refreshToken
      type: object
    types.Order:
      description: 注文履歴情報
      properties:
        coordinatorId:
          description: コーディネータID
          type: string
        id:
          description: 注文履歴ID
          type: string
        items:
          description: 注文商品一覧
          items:
            $ref: '#/components/schemas/types.OrderItem'
          type: array
          uniqueItems: false
        payment:
          $ref: '#/components/schemas/types.OrderPayment'
        pickupAt:
          description: 受け取り日時
          type: integer
        pickupLocation:
          description: 受け取り場所
          type: string
        promotionId:
          description: プロモーションID
          type: string
        refund:
          $ref: '#/components/schemas/types.OrderRefund'
        status:
          $ref: '#/components/schemas/types.OrderStatus'
        type:
          $ref: '#/components/schemas/types.OrderType'
      type: object
    types.OrderItem:
      properties:
        fulfillmentId:
          description: 配送情報ID
          type: string
        price:
          description: 購入価格(税込)
          type: integer
        productId:
          description: 商品ID
          type: string
        quantity:
          description: 購入数量
          type: integer
      type: object
    types.OrderPayment:
      description: 支払い情報
      properties:
        discount:
          description: 割引金額(税込)
          type: integer
        methodType:
          $ref: '#/components/schemas/types.PaymentMethodType'
        orderedAt:
          description: 注文日時
          type: integer
        paidAt:
          description: 支払日時
          type: integer
        shippingFee:
          description: 配送手数料(税込)
          type: integer
        status:
          description: 注文ステータス
          type: integer
          x-enum-comments:
            PaymentStatusCanceled: キャンセル済み
            PaymentStatusFailed: 失敗
            PaymentStatusPaid: 支払い済み
            PaymentStatusUnpaid: 未支払い
          x-enum-varnames:
          - PaymentStatusUnknown
          - PaymentStatusUnpaid
          - PaymentStatusPaid
          - PaymentStatusCanceled
          - PaymentStatusFailed
        subtotal:
          description: 購入金額(税込)
          type: integer
        total:
          description: 合計金額(税込)
          type: integer
        transactionId:
          description: 取引ID
          type: string
      type: object
    types.OrderRefund:
      description: 注文キャンセル情報
      properties:
        canceled:
          description: 注文キャンセルフラグ
          type: boolean
        canceledAt:
          description: 注文キャンセル日時
          type: integer
        reason:
          description: 注文キャンセル理由
          type: string
        total:
          description: 返金金額
          type: integer
        type:
          $ref: '#/components/schemas/types.RefundType'
      type: object
    types.OrderResponse:
      properties:
        coordinator:
          $ref: '#/components/schemas/types.Coordinator'
        order:
          $ref: '#/components/schemas/types.Order'
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/types.Product'
          type: array
          uniqueItems: false
        promotion:
          $ref: '#/components/schemas/types.Promotion'
      type: object
    types.OrderStatus:
      description: 注文ステータス
      type: integer
      x-enum-comments:
        OrderStatusCanceled: キャンセル
        OrderStatusCompleted: 完了
        OrderStatusFailed: 失敗
        OrderStatusPreparing: 発送対応中
        OrderStatusRefunded: 返金
        OrderStatusUnpaid: 支払い待ち
      x-enum-varnames:
      - OrderStatusUnknown
      - OrderStatusUnpaid
      - OrderStatusPreparing
      - OrderStatusCompleted
      - OrderStatusCanceled
      - OrderStatusRefunded
      - OrderStatusFailed
    types.OrderType:
      description: 注文種別
      type: integer
      x-enum-comments:
        OrderTypeExperience: 体験
        OrderTypeProduct: 商品
      x-enum-varnames:
      - OrderTypeUnknown
      - OrderTypeProduct
      - OrderTypeExperience
    types.OrdersResponse:
      properties:
        coordinators:
          description: コーディネータ一覧
          items:
            $ref: '#/components/schemas/types.Coordinator'
          type: array
          uniqueItems: false
        orders:
          description: 注文履歴一覧
          items:
            $ref: '#/components/schemas/types.Order'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/types.Product'
          type: array
          uniqueItems: false
        promotions:
          description: プロモーション一覧
          items:
            $ref: '#/components/schemas/types.Promotion'
          type: array
          uniqueItems: false
        total:
          description: 合計数
          type: integer
      type: object
    types.PaymentMethodType:
      description: 決済手段種別
      type: integer
      x-enum-comments:
        PaymentMethodTypeAUPay: QR決済（au PAY）
        PaymentMethodTypeBankTransfer: 銀行振込決済
        PaymentMethodTypeCash: 代引支払い
        PaymentMethodTypeCreditCard: クレジットカード決済
        PaymentMethodTypeFree: 決済無し
        PaymentMethodTypeKonbini: コンビニ決済
        PaymentMethodTypeLinePay: QR決済（LINE Pay）
        PaymentMethodTypeMerpay: QR決済（メルペイ）
        PaymentMethodTypePaidy: ペイディ（Paidy）
        PaymentMethodTypePayEasy: ペイジー（Pay-easy）
        PaymentMethodTypePayPay: QR決済（PayPay）
        PaymentMethodTypeRakutenPay: QR決済（楽天ペイ）
      x-enum-varnames:
      - PaymentMethodTypeUnknown
      - PaymentMethodTypeCash
      - PaymentMethodTypeCreditCard
      - PaymentMethodTypeKonbini
      - PaymentMethodTypeBankTransfer
      - PaymentMethodTypePayPay
      - PaymentMethodTypeLinePay
      - PaymentMethodTypeMerpay
      - PaymentMethodTypeRakutenPay
      - PaymentMethodTypeAUPay
      - PaymentMethodTypeFree
      - PaymentMethodTypePaidy
      - PaymentMethodTypePayEasy
    types.PaymentStatus:
      description: 注文ステータス
      type: integer
      x-enum-comments:
        PaymentStatusCanceled: キャンセル済み
        PaymentStatusFailed: 失敗
        PaymentStatusPaid: 支払い済み
        PaymentStatusUnpaid: 未支払い
      x-enum-varnames:
      - PaymentStatusUnknown
      - PaymentStatusUnpaid
      - PaymentStatusPaid
      - PaymentStatusCanceled
      - PaymentStatusFailed
    types.Producer:
      description: 生産者情報
      properties:
        city:
          description: 市区町村
          type: string
        coordinatorId:
          description: 担当コーディネータID
          type: string
        facebookId:
          description: Facebookアカウント
          type: string
        headerUrl:
          description: ヘッダー画像URL
          type: string
        id:
          description: 生産者ID
          type: string
        instagramId:
          description: Instagramアカウント
          type: string
        prefecture:
          description: 都道府県
          type: string
        profile:
          description: 紹介文
          type: string
        promotionVideoUrl:
          description: 紹介映像URL
          type: string
        thumbnailUrl:
          description: サムネイルURL
          type: string
        username:
          description: 生産者名
          type: string
      type: object
    types.Product:
      description: 商品情報
      properties:
        box60Rate:
          description: 箱の占有率(サイズ:60)
          type: integer
        box80Rate:
          description: 箱の占有率(サイズ:80)
          type: integer
        box100Rate:
          description: 箱の占有率(サイズ:100)
          type: integer
        categoryId:
          description: 商品種別ID
          type: string
        coordinatorId:
          description: コーディネータID
          type: string
        deliveryType:
          $ref: '#/components/schemas/types.DeliveryType'
        description:
          description: 商品説明
          type: string
        endAt:
          description: 販売終了日時
          type: integer
        expirationDate:
          description: 賞味期限(単位:日)
          type: integer
        id:
          description: 商品ID
          type: string
        inventory:
          description: 在庫数
          type: integer
        itemDescription:
          description: 数量単位説明
          type: string
        itemUnit:
          description: 数量単位
          type: string
        media:
          description: メディア一覧
          items:
            $ref: '#/components/schemas/types.ProductMedia'
          type: array
          uniqueItems: false
        name:
          description: 商品名
          type: string
        originCity:
          description: 原産地(市区町村)
          type: string
        originPrefecture:
          description: 原産地(都道府県)
          type: string
        price:
          description: 販売価格(税込)
          type: integer
        producerId:
          description: 生産者ID
          type: string
        productTagIds:
          description: 商品タグID一覧
          items:
            type: string
          type: array
          uniqueItems: false
        productTypeId:
          description: 品目ID
          type: string
        rate:
          $ref: '#/components/schemas/types.ProductRate'
        recommendedPoint1:
          description: おすすめポイント1
          type: string
        recommendedPoint2:
          description: おすすめポイント2
          type: string
        recommendedPoint3:
          description: おすすめポイント3
          type: string
        startAt:
          description: 販売開始日時
          type: integer
        status:
          $ref: '#/components/schemas/types.ProductStatus'
        storageMethodType:
          $ref: '#/components/schemas/types.StorageMethodType'
        thumbnailUrl:
          description: サムネイルURL
          type: string
        weight:
          description: 重量(kg,少数第一位まで)
          type: number
      type: object
    types.ProductMedia:
      properties:
        isThumbnail:
          description: サムネイルとして使用
          type: boolean
        url:
          description: メディアURL
          type: string
      type: object
    types.ProductRate:
      description: 商品評価
      properties:
        average:
          description: 平均評価
          type: number
        count:
          description: 合計評価数
          type: integer
        detail:
          additionalProperties:
            type: integer
          description: 評価詳細
          type: object
      type: object
    types.ProductResponse:
      properties:
        category:
          $ref: '#/components/schemas/types.Category'
        coordinator:
          $ref: '#/components/schemas/types.Coordinator'
        producer:
          $ref: '#/components/schemas/types.Producer'
        product:
          $ref: '#/components/schemas/types.Product'
        productTags:
          description: 商品タグ一覧
          items:
            $ref: '#/components/schemas/types.ProductTag'
          type: array
          uniqueItems: false
        productType:
          $ref: '#/components/schemas/types.ProductType'
      type: object
    types.ProductStatus:
      description: 販売状況
      type: integer
      x-enum-comments:
        ProductStatusForSale: 販売中
        ProductStatusOutOfSale: 販売期間外
        ProductStatusPresale: 予約受付中
      x-enum-varnames:
      - ProductStatusUnknown
      - ProductStatusPresale
      - ProductStatusForSale
      - ProductStatusOutOfSale
    types.ProductTag:
      properties:
        id:
          description: 商品タグID
          type: string
        name:
          description: 商品タグ名
          type: string
      type: object
    types.ProductType:
      description: 品目情報
      properties:
        categoryId:
          description: 商品種別ID
          type: string
        iconUrl:
          description: アイコンURL
          type: string
        id:
          description: 品目ID
          type: string
        name:
          description: 品目名
          type: string
      type: object
    types.ProductsResponse:
      properties:
        categories:
          description: 商品種別一覧
          items:
            $ref: '#/components/schemas/types.Category'
          type: array
          uniqueItems: false
        coordinators:
          description: コーディネータ一覧
          items:
            $ref: '#/components/schemas/types.Coordinator'
          type: array
          uniqueItems: false
        producers:
          description: 生産者一覧
          items:
            $ref: '#/components/schemas/types.Producer'
          type: array
          uniqueItems: false
        productTags:
          description: 商品タグ一覧
          items:
            $ref: '#/components/schemas/types.ProductTag'
          type: array
          uniqueItems: false
        productTypes:
          description: 品目一覧
          items:
            $ref: '#/components/schemas/types.ProductType'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/types.Product'
          type: array
          uniqueItems: false
        total:
          description: 商品合計数
          type: integer
      type: object
    types.Promotion:
      description: プロモーション情報
      properties:
        code:
          description: クーポンコード
          type: string
        description:
          description: 詳細説明
          type: string
        discountRate:
          description: 割引額(%/円)
          type: integer
        discountType:
          $ref: '#/components/schemas/types.DiscountType'
        endAt:
          description: クーポン使用可能日時(終了)
          type: integer
        id:
          description: プロモーションID
          type: string
        startAt:
          description: クーポン使用可能日時(開始)
          type: integer
        status:
          $ref: '#/components/schemas/types.PromotionStatus'
        title:
          description: タイトル
          type: string
      type: object
    types.PromotionStatus:
      description: ステータス
      type: integer
      x-enum-comments:
        PromotionStatusEnabled: 利用可能
        PromotionStatusFinished: 利用終了
        PromotionStatusPrivate: 非公開
        PromotionStatusWaiting: 利用開始前
      x-enum-varnames:
      - PromotionStatusUnknown
      - PromotionStatusPrivate
      - PromotionStatusWaiting
      - PromotionStatusEnabled
      - PromotionStatusFinished
    types.RefundType:
      description: 注文キャンセル種別
      type: integer
      x-enum-comments:
        RefundTypeCanceled: キャンセル
        RefundTypeNone: キャンセルなし
        RefundTypeRefunded: 返金
      x-enum-varnames:
      - RefundTypeNone
      - RefundTypeCanceled
      - RefundTypeRefunded
    types.ShippingSize:
      description: 箱のサイズ
      type: integer
      x-enum-comments:
        ShippingSize60: 箱のサイズ:60
        ShippingSize80: 箱のサイズ:80
        ShippingSize100: 箱のサイズ:100
      x-enum-varnames:
      - ShippingSizeUnknown
      - ShippingSize60
      - ShippingSize80
      - ShippingSize100
    types.ShippingType:
      description: 箱の種別
      type: integer
      x-enum-comments:
        ShippingTypeFrozen: 冷凍便
        ShippingTypeNormal: 常温・冷蔵便
        ShippingTypePickup: 店舗受取
      x-enum-varnames:
      - ShippingTypeUnknown
      - ShippingTypeNormal
      - ShippingTypeFrozen
      - ShippingTypePickup
    types.SignInRequest:
      properties:
        authToken:
          description: LINEの認証トークン
          type: string
      required:
      - authToken
      type: object
    types.StorageMethodType:
      description: 保存方法
      type: integer
      x-enum-comments:
        StorageMethodTypeCoolDark: 冷暗所保存
        StorageMethodTypeFrozen: 冷凍保存
        StorageMethodTypeNormal: 常温保存
        StorageMethodTypeRefrigerated: 冷蔵保存
      x-enum-varnames:
      - StorageMethodTypeUnknown
      - StorageMethodTypeNormal
      - StorageMethodTypeCoolDark
      - StorageMethodTypeRefrigerated
      - StorageMethodTypeFrozen
    types.UpdateAuthUserRequest:
      properties:
        firstname:
          description: 名
          maxLength: 16
          type: string
        firstnameKana:
          description: 名 かな
          maxLength: 32
          type: string
        lastCheckInAt:
          description: 最新のチェックイン日時
          minimum: 0
          type: integer
        lastname:
          description: 姓
          maxLength: 16
          type: string
        lastnameKana:
          description: 姓 かな
          maxLength: 32
          type: string
        phoneNumber:
          description: 電話番号
          type: string
      required:
      - firstname
      - firstnameKana
      - lastname
      - lastnameKana
      - phoneNumber
      type: object
    util.ErrorResponse:
      properties:
        detail:
          description: エラー詳細
          type: string
        message:
          description: エラー概要
          type: string
        status:
          description: ステータスコード
          type: integer
      type: object
  securitySchemes:
    bearerauth:
      bearerFormat: JWT
      scheme: bearer
      type: http
externalDocs:
  description: ""
  url: ""
info:
  description: 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
  title: ふるマル API - 外部宿泊施設向け
  version: ""
openapi: 3.1.0
paths:
  /facilities/{facilityId}/auth:
    delete:
      description: ふるマルからサインアウトします。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: サインアウト
      tags:
      - Auth
    post:
      description: LINEの認証トークンを渡すことで、ふるマルへサインインします。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.SignInRequest'
        description: サインイン
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.AuthResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 退会済み
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: ユーザーが存在しない
      summary: サインイン
      tags:
      - Auth
  /facilities/{facilityId}/auth/refresh-token:
    post:
      description: 更新トークンを渡すことで、アクセストークンを再発行します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.GetAccessTokenRequest'
        description: アクセストークンの再発行
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.AuthResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: リフレッシュトークンが無効
      security:
      - bearerauth: []
      summary: アクセストークンの再発行
      tags:
      - Auth
  /facilities/{facilityId}/carts:
    get:
      description: カートの内容を取得します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.CartResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: カート取得
      tags:
      - Cart
  /facilities/{facilityId}/carts/-/items:
    post:
      description: カートに商品を追加します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.AddCartItemRequest'
        description: カートに追加リクエスト
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: カートに追加
      tags:
      - Cart
  /facilities/{facilityId}/carts/-/items/{productId}:
    delete:
      description: カートから商品を削除します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      - description: 商品ID
        in: path
        name: productId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: カートから削除
      tags:
      - Cart
  /facilities/{facilityId}/carts/{coordinatorId}:
    get:
      description: カートの内容を計算します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      - description: コーディネーターID
        in: path
        name: coordinatorId
        required: true
        schema:
          type: string
      - description: 箱数
        in: query
        name: number
        schema:
          type: integer
      - description: プロモーションコード
        in: query
        name: promotion
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.CalcCartResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: カート計算
      tags:
      - Cart
  /facilities/{facilityId}/checkouts:
    post:
      description: 商品を購入します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CheckoutRequest'
        description: チェックアウト情報
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.CheckoutResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: 購入する
      tags:
      - Checkout
  /facilities/{facilityId}/checkouts/{transactionId}:
    get:
      description: 支払い状態を取得します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      - description: 取引ID
        in: path
        name: transactionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.CheckoutStateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 取引が見つからない
      security:
      - bearerauth: []
      summary: 支払い状態取得
      tags:
      - Checkout
  /facilities/{facilityId}/orders:
    get:
      description: 注文の一覧を取得します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      - description: 取得件数
        in: query
        name: limit
        schema:
          default: 20
          type: integer
      - description: 取得開始位置
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: 注文ステータス
        in: query
        name: types
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.OrdersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: 注文一覧取得
      tags:
      - Order
  /facilities/{facilityId}/orders/{orderId}:
    get:
      description: 注文の詳細を取得します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      - description: 注文ID
        in: path
        name: orderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.OrderResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 注文が見つからない
      security:
      - bearerauth: []
      summary: 注文詳細取得
      tags:
      - Order
  /facilities/{facilityId}/products:
    get:
      description: 商品の一覧を取得します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      - description: 取得件数
        in: query
        name: limit
        schema:
          default: 20
          type: integer
      - description: 取得開始位置
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ProductsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
      summary: 商品一覧取得
      tags:
      - Product
  /facilities/{facilityId}/products/{productId}:
    get:
      description: 商品の詳細を取得します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      - description: 商品ID
        in: path
        name: productId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.ProductResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 商品が見つからない
      summary: 商品詳細取得
      tags:
      - Product
  /facilities/{facilityId}/users:
    post:
      description: ユーザーの詳細情報を登録します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateAuthUserRequest'
        description: ユーザー情報
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.AuthUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー。不正なトークン
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: ユーザーが既に存在する
      summary: ユーザー情報登録
      tags:
      - AuthUser
  /facilities/{facilityId}/users/me:
    get:
      description: ユーザーの詳細情報を取得します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/types.AuthUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: ユーザー情報取得
      tags:
      - AuthUser
    put:
      description: ユーザーの詳細情報を更新します。
      parameters:
      - description: 施設ID
        in: path
        name: facilityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.UpdateAuthUserRequest'
        description: ユーザー情報
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/util.ErrorResponse'
          description: 認証エラー
      security:
      - bearerauth: []
      summary: ユーザー情報更新
      tags:
      - AuthUser
servers:
- description: 検証環境
  url: https://api.furumaru-stg.and-period.work
- description: 本番環境
  url: https://api.furumaru.and-period.co.jp

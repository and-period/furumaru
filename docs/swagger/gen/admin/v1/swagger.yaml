components:
    schemas:
        request.ActivateBroadcastMP4Request:
            properties:
                inputUrl:
                    description: 配信動画URL
                    type: string
            required:
                - inputUrl
            type: object
        request.ApproveScheduleRequest:
            properties:
                approved:
                    description: 承認フラグ
                    type: boolean
            type: object
        request.ApproveSpotRequest:
            properties:
                approved:
                    description: 承認フラグ
                    type: boolean
            type: object
        request.AuthYoutubeBroadcastRequest:
            properties:
                youtubeHandle:
                    description: 連携先Youtubeアカウント
                    type: string
            required:
                - youtubeHandle
            type: object
        request.CallbackAuthYoutubeBroadcastRequest:
            properties:
                authCode:
                    description: Google認証時に取得したcode
                    type: string
                state:
                    description: Google認証時に取得したstate
                    type: string
            required:
                - authCode
                - state
            type: object
        request.CompleteOrderRequest:
            properties:
                shippingMessage:
                    description: 発送連絡時のメッセージ
                    maxLength: 2000
                    type: string
            type: object
        request.ConnectGoogleAccountRequest:
            properties:
                code:
                    description: 認証コード
                    type: string
                nonce:
                    description: セキュア文字列（リプレイアタック対策）
                    type: string
                redirectUri:
                    description: リダイレクトURI
                    type: string
            required:
                - code
                - nonce
                - redirectUri
            type: object
        request.ConnectLINEAccountRequest:
            properties:
                code:
                    description: 認証コード
                    type: string
                nonce:
                    description: セキュア文字列（リプレイアタック対策）
                    type: string
                redirectUri:
                    description: リダイレクトURI
                    type: string
            required:
                - code
                - nonce
                - redirectUri
            type: object
        request.ContactStatus:
            description: お問い合わせステータス
            maximum: 4
            minimum: 0
            type: integer
            x-enum-comments:
                ContactStatusDiscard: 対応不要
                ContactStatusDone: 完了
                ContactStatusInprogress: 進行中
                ContactStatusUnknown: 不明
                ContactStatusWaiting: 未着手
            x-enum-varnames:
                - ContactStatusUnknown
                - ContactStatusWaiting
                - ContactStatusInprogress
                - ContactStatusDone
                - ContactStatusDiscard
        request.CreateAdministratorRequest:
            properties:
                email:
                    description: メールアドレス
                    type: string
                firstname:
                    description: 名
                    maxLength: 16
                    type: string
                firstnameKana:
                    description: 名(かな)
                    maxLength: 32
                    type: string
                lastname:
                    description: 姓
                    maxLength: 16
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    maxLength: 32
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
            required:
                - email
                - firstname
                - firstnameKana
                - lastname
                - lastnameKana
                - phoneNumber
            type: object
        request.CreateCategoryRequest:
            properties:
                name:
                    description: 商品種別名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.CreateContactReadRequest:
            properties:
                contactId:
                    description: お問い合わせID
                    type: string
                userId:
                    description: 送信者ID
                    type: string
                userType:
                    description: 送信者種別(不明:0, admin:1, uer:2, guest:3)
                    maximum: 3
                    minimum: 0
                    type: integer
            required:
                - contactId
                - userId
            type: object
        request.CreateContactRequest:
            properties:
                categoryId:
                    description: お問い合わせ種別ID
                    type: string
                content:
                    description: お問い合わせ内容
                    maxLength: 2000
                    type: string
                email:
                    description: メールアドレス
                    type: string
                note:
                    description: 対応者メモ
                    maxLength: 500
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                responderId:
                    description: 対応者ID(null許容)
                    type: string
                title:
                    description: お問い合わせ件名
                    maxLength: 64
                    type: string
                userId:
                    description: 問い合わせ作成者ID(null許容)
                    type: string
                username:
                    description: 氏名
                    maxLength: 32
                    type: string
            required:
                - categoryId
                - content
                - email
                - phoneNumber
                - title
                - username
            type: object
        request.CreateExperienceMedia:
            properties:
                isThumbnail:
                    description: サムネイルとして使用
                    type: boolean
                url:
                    description: メディアURL
                    type: string
            required:
                - url
            type: object
        request.CreateExperienceRequest:
            properties:
                businessCloseTime:
                    description: 営業終了時間
                    type: string
                businessOpenTime:
                    description: 営業開始時間
                    type: string
                coordinatorId:
                    description: コーディネータID
                    type: string
                description:
                    description: 説明
                    maxLength: 20000
                    type: string
                direction:
                    description: アクセス方法
                    maxLength: 2000
                    type: string
                duration:
                    description: 体験時間(分)
                    minimum: 0
                    type: integer
                endAt:
                    description: 募集終了日時
                    type: integer
                experienceTypeId:
                    description: 体験種別ID
                    type: string
                hostAddressLine1:
                    description: 開催場所(住所1)
                    maxLength: 64
                    type: string
                hostAddressLine2:
                    description: 開催場所(住所2)
                    maxLength: 64
                    type: string
                hostCity:
                    description: 開催場所(市区町村)
                    maxLength: 32
                    type: string
                hostPostalCode:
                    description: 開催場所(郵便番号)
                    maxLength: 16
                    type: string
                hostPrefectureCode:
                    description: 開催場所(都道府県コード)
                    maximum: 47
                    minimum: 1
                    type: integer
                media:
                    description: メディア一覧
                    items:
                        $ref: '#/components/schemas/request.CreateExperienceMedia'
                    type: array
                    uniqueItems: false
                priceAdult:
                    description: 大人料金
                    maximum: 99
                    minimum: 0
                    type: integer
                priceElementarySchool:
                    description: 小学生料金
                    maximum: 99
                    minimum: 0
                    type: integer
                priceJuniorHighSchool:
                    description: 中学生料金
                    maximum: 99
                    minimum: 0
                    type: integer
                pricePreschool:
                    description: 幼児料金
                    maximum: 99
                    minimum: 0
                    type: integer
                priceSenior:
                    description: シニア料金
                    maximum: 99
                    minimum: 0
                    type: integer
                producerId:
                    description: 生産者ID
                    type: string
                promotionVideoUrl:
                    description: 紹介動画URL
                    type: string
                public:
                    description: 公開設定
                    type: boolean
                recommendedPoint1:
                    description: おすすめポイント1
                    maxLength: 128
                    type: string
                recommendedPoint2:
                    description: おすすめポイント2
                    maxLength: 128
                    type: string
                recommendedPoint3:
                    description: おすすめポイント3
                    maxLength: 128
                    type: string
                soldOut:
                    description: 定員オーバーフラグ
                    type: boolean
                startAt:
                    description: 募集開始日時
                    type: integer
                title:
                    description: 体験名
                    maxLength: 128
                    type: string
            required:
                - coordinatorId
                - description
                - endAt
                - experienceTypeId
                - hostAddressLine1
                - hostCity
                - hostPostalCode
                - hostPrefectureCode
                - media
                - priceAdult
                - priceElementarySchool
                - priceJuniorHighSchool
                - pricePreschool
                - priceSenior
                - producerId
                - startAt
                - title
            type: object
        request.CreateExperienceTypeRequest:
            properties:
                name:
                    description: 体験種別名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.CreateLiveRequest:
            properties:
                comment:
                    description: コメント
                    maxLength: 2000
                    type: string
                endAt:
                    description: 配信終了日時
                    type: integer
                producerId:
                    description: 生産者ID
                    type: string
                productIds:
                    description: 商品ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                startAt:
                    description: 配信開始日時
                    type: integer
            required:
                - comment
                - endAt
                - producerId
                - productIds
                - startAt
            type: object
        request.CreateNotificationRequest:
            properties:
                body:
                    description: 本文
                    maxLength: 2000
                    type: string
                note:
                    description: 備考
                    maxLength: 2000
                    type: string
                promotionId:
                    description: プロモーションID
                    type: string
                publishedAt:
                    description: 掲載開始日
                    type: integer
                targets:
                    description: 掲載対象一覧
                    items:
                        type: integer
                    maxItems: 4
                    minItems: 1
                    type: array
                    uniqueItems: false
                title:
                    description: タイトル
                    maxLength: 128
                    type: string
                type:
                    description: お知らせ種別
                    type: integer
            required:
                - body
                - publishedAt
                - targets
                - title
                - type
            type: object
        request.CreateProducerRequest:
            properties:
                addressLine1:
                    description: 町名・番地
                    maxLength: 64
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    maxLength: 64
                    type: string
                bonusVideoUrl:
                    description: 購入特典映像URL
                    type: string
                city:
                    description: 市区町村
                    maxLength: 32
                    type: string
                coordinatorId:
                    description: 担当コーディネータ名
                    type: string
                email:
                    description: メールアドレス
                    type: string
                facebookId:
                    description: Facebookアカウント
                    maxLength: 50
                    type: string
                firstname:
                    description: 名
                    maxLength: 16
                    type: string
                firstnameKana:
                    description: 名(かな)
                    maxLength: 32
                    type: string
                headerUrl:
                    description: ヘッダー画像URL
                    type: string
                instagramId:
                    description: Instagramアカウント
                    maxLength: 30
                    type: string
                lastname:
                    description: 姓
                    maxLength: 16
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    maxLength: 32
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    maxLength: 16
                    type: string
                prefectureCode:
                    description: 都道府県
                    maximum: 47
                    minimum: 0
                    type: integer
                profile:
                    description: 紹介文
                    maxLength: 2000
                    type: string
                promotionVideoUrl:
                    description: 紹介映像URL
                    type: string
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                username:
                    description: 表示名
                    maxLength: 64
                    type: string
            required:
                - coordinatorId
                - firstname
                - firstnameKana
                - lastname
                - lastnameKana
                - username
            type: object
        request.CreateProductMedia:
            properties:
                isThumbnail:
                    description: サムネイルとして使用
                    type: boolean
                url:
                    description: メディアURL
                    type: string
            required:
                - url
            type: object
        request.CreateProductRequest:
            properties:
                box60Rate:
                    description: 箱の占有率(サイズ:60)
                    maximum: 600
                    minimum: 0
                    type: integer
                box80Rate:
                    description: 箱の占有率(サイズ:80)
                    maximum: 250
                    minimum: 0
                    type: integer
                box100Rate:
                    description: 箱の占有率(サイズ:100)
                    maximum: 100
                    minimum: 0
                    type: integer
                coordinatorId:
                    description: コーディネータID
                    type: string
                cost:
                    description: 原価(税込)
                    minimum: 0
                    type: integer
                deliveryType:
                    description: 配送方法
                    type: integer
                description:
                    description: 商品説明
                    maxLength: 2000
                    type: string
                endAt:
                    description: 販売終了日時
                    type: integer
                expirationDate:
                    description: 賞味期限(単位:日)
                    minimum: 0
                    type: integer
                inventory:
                    description: 在庫数
                    minimum: 0
                    type: integer
                itemDescription:
                    description: 数量単位説明
                    maxLength: 64
                    type: string
                itemUnit:
                    description: 数量単位
                    maxLength: 16
                    type: string
                media:
                    description: メディア一覧
                    items:
                        $ref: '#/components/schemas/request.CreateProductMedia'
                    maxItems: 8
                    type: array
                    uniqueItems: false
                name:
                    description: 商品名
                    maxLength: 64
                    type: string
                originCity:
                    description: 原産地(市区町村)
                    maxLength: 32
                    type: string
                originPrefectureCode:
                    description: 原産地(都道府県)
                    maximum: 47
                    minimum: 1
                    type: integer
                price:
                    description: 販売価格(税込)
                    minimum: 0
                    type: integer
                producerId:
                    description: 生産者ID
                    type: string
                productTagIds:
                    description: 商品タグID一覧
                    items:
                        type: string
                    maxItems: 8
                    type: array
                    uniqueItems: false
                productTypeId:
                    description: 品目ID
                    type: string
                public:
                    description: 公開フラグ
                    type: boolean
                recommendedPoint1:
                    description: おすすめポイント1
                    maxLength: 128
                    type: string
                recommendedPoint2:
                    description: おすすめポイント2
                    maxLength: 128
                    type: string
                recommendedPoint3:
                    description: おすすめポイント3
                    maxLength: 128
                    type: string
                startAt:
                    description: 販売開始日時
                    type: integer
                storageMethodType:
                    description: 保存方法
                    type: integer
                weight:
                    description: 重量(kg,少数第一位まで)
                    minimum: 0
                    type: number
            required:
                - coordinatorId
                - deliveryType
                - description
                - endAt
                - itemDescription
                - itemUnit
                - name
                - originPrefectureCode
                - producerId
                - productTagIds
                - productTypeId
                - startAt
                - storageMethodType
            type: object
        request.CreateProductTagRequest:
            properties:
                name:
                    description: 商品タグ名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.CreateProductTypeRequest:
            properties:
                iconUrl:
                    description: アイコンURL
                    type: string
                name:
                    description: 品目名
                    maxLength: 32
                    type: string
            required:
                - iconUrl
                - name
            type: object
        request.CreatePromotionRequest:
            properties:
                code:
                    type: string
                description:
                    maxLength: 2000
                    type: string
                discountRate:
                    minimum: 0
                    type: integer
                discountType:
                    type: integer
                endAt:
                    type: integer
                public:
                    type: boolean
                startAt:
                    type: integer
                title:
                    maxLength: 64
                    type: string
            required:
                - description
                - discountType
                - endAt
                - startAt
                - title
            type: object
        request.CreateScheduleRequest:
            properties:
                coordinatorId:
                    description: コーディネータID
                    type: string
                description:
                    description: 説明
                    maxLength: 2000
                    type: string
                endAt:
                    description: 配信終了日時
                    type: integer
                imageUrl:
                    description: 蓋絵URL
                    type: string
                openingVideoUrl:
                    description: オープニング動画URL
                    type: string
                public:
                    description: 公開フラグ
                    type: boolean
                startAt:
                    description: 配信開始日時
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                title:
                    description: タイトル
                    maxLength: 64
                    type: string
            required:
                - coordinatorId
                - description
                - endAt
                - startAt
                - title
            type: object
        request.CreateShippingRate:
            properties:
                name:
                    description: 配送料金設定名
                    maxLength: 64
                    type: string
                prefectureCodes:
                    description: 対象都道府県一覧
                    items:
                        type: integer
                    type: array
                    uniqueItems: false
                price:
                    description: 配送料金(税込)
                    minimum: 0
                    type: integer
            required:
                - name
                - prefectureCodes
                - price
            type: object
        request.CreateShippingRequest:
            properties:
                box60Frozen:
                    description: 箱サイズ60の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box60Rates:
                    description: 箱サイズ60の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.CreateShippingRate'
                    type: array
                    uniqueItems: false
                box80Frozen:
                    description: 箱サイズ80の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box80Rates:
                    description: 箱サイズ80の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.CreateShippingRate'
                    type: array
                    uniqueItems: false
                box100Frozen:
                    description: 箱サイズ100の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box100Rates:
                    description: 箱サイズ100の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.CreateShippingRate'
                    type: array
                    uniqueItems: false
                freeShippingRates:
                    description: 送料無料になる金額(税込)
                    minimum: 0
                    type: integer
                hasFreeShipping:
                    description: 送料無料オプションの有無
                    type: boolean
                name:
                    description: 配送設定名
                    maxLength: 64
                    type: string
            required:
                - box100Frozen
                - box100Rates
                - box60Frozen
                - box60Rates
                - box80Frozen
                - box80Rates
                - name
            type: object
        request.CreateSpotRequest:
            properties:
                description:
                    description: 説明
                    maxLength: 2000
                    type: string
                latitude:
                    description: 緯度
                    maximum: 90
                    minimum: -90
                    type: number
                longitude:
                    description: 経度
                    maximum: 180
                    minimum: -180
                    type: number
                name:
                    description: スポット名
                    maxLength: 64
                    type: string
                spotTypeId:
                    description: スポット種別ID
                    type: string
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
            required:
                - latitude
                - longitude
                - name
                - spotTypeId
            type: object
        request.CreateSpotTypeRequest:
            properties:
                name:
                    description: スポット種別名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.CreateThreadRequest:
            properties:
                contactId:
                    description: お問い合わせID
                    type: string
                content:
                    description: 内容
                    maxLength: 1000
                    type: string
                userId:
                    description: 送信者ID
                    type: string
                userType:
                    description: 送信者種別(不明:0, admin:1, uer:2, guest:3)
                    maximum: 3
                    minimum: 0
                    type: integer
            required:
                - contactId
                - content
                - userId
            type: object
        request.CreateVideoRequest:
            properties:
                coordinatorId:
                    description: コーディネータID
                    type: string
                description:
                    description: 説明
                    maxLength: 2000
                    type: string
                displayExperience:
                    description: 体験への表示設定
                    type: boolean
                displayProduct:
                    description: 商品への表示設定
                    type: boolean
                experienceIds:
                    description: 体験ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                limited:
                    description: 限定公開設定
                    type: boolean
                productIds:
                    description: 商品ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                public:
                    description: 公開設定
                    type: boolean
                publishedAt:
                    description: 公開日時
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                title:
                    description: タイトル
                    maxLength: 128
                    type: string
                videoUrl:
                    description: 動画URL
                    type: string
            required:
                - coordinatorId
                - description
                - experienceIds
                - productIds
                - publishedAt
                - thumbnailUrl
                - title
                - videoUrl
            type: object
        request.CreateYoutubeBroadcastRequest:
            properties:
                description:
                    description: ライブ配信説明
                    maxLength: 1000
                    type: string
                public:
                    description: 公開設定
                    type: boolean
                title:
                    description: ライブ配信タイトル
                    maxLength: 100
                    type: string
            required:
                - title
            type: object
        request.DraftOrderRequest:
            properties:
                shippingMessage:
                    description: 発送連絡時のメッセージ
                    maxLength: 2000
                    type: string
            type: object
        request.ExportOrdersRequest:
            properties:
                characterEncodingType:
                    description: 文字コード種別
                    type: integer
                shippingCarrier:
                    description: 配送会社
                    type: integer
            required:
                - shippingCarrier
            type: object
        request.ForgotAuthPasswordRequest:
            properties:
                email:
                    description: メールアドレス
                    type: string
            required:
                - email
            type: object
        request.GetUploadURLRequest:
            properties:
                fileType:
                    description: ファイル種別
                    type: string
            required:
                - fileType
            type: object
        request.PublishScheduleRequest:
            properties:
                public:
                    description: 公開フラグ
                    type: boolean
            type: object
        request.RefreshAuthTokenRequest:
            properties:
                refreshToken:
                    description: 更新トークン
                    type: string
            required:
                - refreshToken
            type: object
        request.RefundOrderRequest:
            properties:
                description:
                    description: 返金理由
                    maxLength: 2000
                    type: string
            required:
                - description
            type: object
        request.RegisterAuthDeviceRequest:
            properties:
                device:
                    description: デバイスID
                    type: string
            required:
                - device
            type: object
        request.ResetAuthPasswordRequest:
            properties:
                email:
                    description: メールアドレス
                    type: string
                password:
                    description: パスワード
                    maxLength: 32
                    minLength: 8
                    type: string
                passwordConfirmation:
                    description: パスワード (確認用)
                    type: string
                verifyCode:
                    description: 検証コード
                    type: string
            required:
                - email
                - passwordConfirmation
                - verifyCode
            type: object
        request.SignInRequest:
            properties:
                password:
                    description: パスワード
                    type: string
                username:
                    description: ユーザー名 (メールアドレス)
                    type: string
            required:
                - password
                - username
            type: object
        request.UpdateAdministratorEmailRequest:
            properties:
                email:
                    description: メールアドレス
                    type: string
            required:
                - email
            type: object
        request.UpdateAdministratorRequest:
            properties:
                firstname:
                    description: 名
                    maxLength: 16
                    type: string
                firstnameKana:
                    description: 名(かな)
                    maxLength: 32
                    type: string
                lastname:
                    description: 姓
                    maxLength: 16
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    maxLength: 32
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
            required:
                - firstname
                - firstnameKana
                - lastname
                - lastnameKana
                - phoneNumber
            type: object
        request.UpdateAuthEmailRequest:
            properties:
                email:
                    description: メールアドレス
                    type: string
            required:
                - email
            type: object
        request.UpdateAuthPasswordRequest:
            properties:
                newPassword:
                    description: 新しいパスワード
                    maxLength: 32
                    minLength: 8
                    type: string
                oldPassword:
                    description: 現在のパスワード
                    type: string
                passwordConfirmation:
                    description: パスワード (確認用)
                    type: string
            required:
                - oldPassword
                - passwordConfirmation
            type: object
        request.UpdateBroadcastArchiveRequest:
            properties:
                archiveUrl:
                    description: アーカイブ動画URL
                    type: string
            required:
                - archiveUrl
            type: object
        request.UpdateCategoryRequest:
            properties:
                name:
                    description: 商品種別名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.UpdateContactRequest:
            properties:
                categoryId:
                    description: お問い合わせ種別ID
                    type: string
                content:
                    description: お問い合わせ内容
                    maxLength: 2000
                    type: string
                email:
                    description: メールアドレス
                    type: string
                note:
                    description: 対応者メモ
                    maxLength: 500
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                responderId:
                    description: 対応者ID(null許容)
                    type: string
                status:
                    $ref: '#/components/schemas/request.ContactStatus'
                title:
                    description: お問い合わせ件名
                    maxLength: 64
                    type: string
                userId:
                    description: 問い合わせ作成者ID(null許容)
                    type: string
                username:
                    description: 氏名
                    maxLength: 32
                    type: string
            required:
                - categoryId
                - content
                - email
                - phoneNumber
                - title
                - username
            type: object
        request.UpdateCoordinatorRequest:
            properties:
                addressLine1:
                    description: 町名・番地
                    maxLength: 64
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    maxLength: 64
                    type: string
                bonusVideoUrl:
                    description: 購入特典映像URL
                    type: string
                city:
                    description: 市区町村
                    maxLength: 32
                    type: string
                facebookId:
                    description: Facebookアカウント
                    maxLength: 50
                    type: string
                firstname:
                    description: 名
                    maxLength: 16
                    type: string
                firstnameKana:
                    description: 名(かな)
                    maxLength: 32
                    type: string
                headerUrl:
                    description: ヘッダー画像URL
                    type: string
                instagramId:
                    description: Instagramアカウント
                    maxLength: 32
                    type: string
                lastname:
                    description: 姓
                    maxLength: 16
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    maxLength: 32
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    maxLength: 16
                    type: string
                prefectureCode:
                    description: 都道府県
                    maximum: 47
                    minimum: 1
                    type: integer
                profile:
                    description: 紹介文
                    maxLength: 2000
                    type: string
                promotionVideoUrl:
                    description: 紹介映像URL
                    type: string
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                username:
                    description: 表示名
                    maxLength: 32
                    type: string
            required:
                - addressLine1
                - city
                - firstname
                - firstnameKana
                - lastname
                - lastnameKana
                - phoneNumber
                - prefectureCode
                - profile
                - username
            type: object
        request.UpdateDefaultShippingRate:
            properties:
                name:
                    description: 配送料金設定名
                    maxLength: 64
                    type: string
                prefectureCodes:
                    description: 対象都道府県一覧
                    items:
                        type: integer
                    type: array
                    uniqueItems: false
                price:
                    description: 配送料金(税込)
                    minimum: 0
                    type: integer
            required:
                - name
                - prefectureCodes
                - price
            type: object
        request.UpdateDefaultShippingRequest:
            properties:
                box60Frozen:
                    description: 箱サイズ60の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box60Rates:
                    description: 箱サイズ60の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpdateDefaultShippingRate'
                    type: array
                    uniqueItems: false
                box80Frozen:
                    description: 箱サイズ80の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box80Rates:
                    description: 箱サイズ80の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpdateDefaultShippingRate'
                    type: array
                    uniqueItems: false
                box100Frozen:
                    description: 箱サイズ100の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box100Rates:
                    description: 箱サイズ100の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpdateDefaultShippingRate'
                    type: array
                    uniqueItems: false
                freeShippingRates:
                    description: 送料無料になる金額(税込)
                    minimum: 0
                    type: integer
                hasFreeShipping:
                    description: 送料無料オプションの有無
                    type: boolean
            required:
                - box100Frozen
                - box100Rates
                - box60Frozen
                - box60Rates
                - box80Frozen
                - box80Rates
            type: object
        request.UpdateExperienceMedia:
            properties:
                isThumbnail:
                    description: サムネイルとして使用
                    type: boolean
                url:
                    description: メディアURL
                    type: string
            required:
                - url
            type: object
        request.UpdateExperienceRequest:
            properties:
                businessCloseTime:
                    description: 営業終了時間
                    type: string
                businessOpenTime:
                    description: 営業開始時間
                    type: string
                description:
                    description: 説明
                    maxLength: 20000
                    type: string
                direction:
                    description: アクセス方法
                    maxLength: 2000
                    type: string
                duration:
                    description: 体験時間(分)
                    minimum: 0
                    type: integer
                endAt:
                    description: 募集終了日時
                    type: integer
                experienceTypeId:
                    description: 体験種別ID
                    type: string
                hostAddressLine1:
                    description: 開催場所(住所1)
                    maxLength: 64
                    type: string
                hostAddressLine2:
                    description: 開催場所(住所2)
                    maxLength: 64
                    type: string
                hostCity:
                    description: 開催場所(市区町村)
                    maxLength: 32
                    type: string
                hostPostalCode:
                    description: 開催場所(郵便番号)
                    maxLength: 16
                    type: string
                hostPrefectureCode:
                    description: 開催場所(都道府県コード)
                    maximum: 47
                    minimum: 1
                    type: integer
                media:
                    description: メディア一覧
                    items:
                        $ref: '#/components/schemas/request.UpdateExperienceMedia'
                    type: array
                    uniqueItems: false
                priceAdult:
                    description: 大人料金
                    maximum: 99
                    minimum: 0
                    type: integer
                priceElementarySchool:
                    description: 小学生料金
                    maximum: 99
                    minimum: 0
                    type: integer
                priceJuniorHighSchool:
                    description: 中学生料金
                    maximum: 99
                    minimum: 0
                    type: integer
                pricePreschool:
                    description: 幼児料金
                    maximum: 99
                    minimum: 0
                    type: integer
                priceSenior:
                    description: シニア料金
                    maximum: 99
                    minimum: 0
                    type: integer
                promotionVideoUrl:
                    description: 紹介動画URL
                    type: string
                public:
                    description: 公開設定
                    type: boolean
                recommendedPoint1:
                    description: おすすめポイント1
                    maxLength: 128
                    type: string
                recommendedPoint2:
                    description: おすすめポイント2
                    maxLength: 128
                    type: string
                recommendedPoint3:
                    description: おすすめポイント3
                    maxLength: 128
                    type: string
                soldOut:
                    description: 定員オーバーフラグ
                    type: boolean
                startAt:
                    description: 募集開始日時
                    type: integer
                title:
                    description: 体験名
                    maxLength: 128
                    type: string
            required:
                - description
                - endAt
                - experienceTypeId
                - hostAddressLine1
                - hostCity
                - hostPostalCode
                - hostPrefectureCode
                - media
                - priceAdult
                - priceElementarySchool
                - priceJuniorHighSchool
                - pricePreschool
                - priceSenior
                - startAt
                - title
            type: object
        request.UpdateExperienceTypeRequest:
            properties:
                name:
                    description: 体験種別名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.UpdateLiveCommentRequest:
            properties:
                disabled:
                    description: コメント無効フラグ
                    type: boolean
            type: object
        request.UpdateLiveRequest:
            properties:
                comment:
                    description: コメント
                    maxLength: 2000
                    type: string
                endAt:
                    description: 配信終了日時
                    type: integer
                productIds:
                    description: 商品ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                startAt:
                    description: 配信開始日時
                    type: integer
            required:
                - comment
                - endAt
                - productIds
                - startAt
            type: object
        request.UpdateNotificationRequest:
            properties:
                body:
                    description: 本文
                    maxLength: 2000
                    type: string
                note:
                    description: 備考
                    maxLength: 2000
                    type: string
                publishedAt:
                    description: 掲載開始日
                    type: integer
                targets:
                    description: 掲載対象一覧
                    items:
                        type: integer
                    maxItems: 4
                    minItems: 1
                    type: array
                    uniqueItems: false
                title:
                    description: タイトル
                    maxLength: 128
                    type: string
            required:
                - body
                - publishedAt
                - targets
                - title
            type: object
        request.UpdatePaymentSystemRequest:
            properties:
                status:
                    description: 決済システム状態
                    type: integer
            required:
                - status
            type: object
        request.UpdateProducerRequest:
            properties:
                addressLine1:
                    description: 町名・番地
                    maxLength: 64
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    maxLength: 64
                    type: string
                bonusVideoUrl:
                    description: 購入特典映像URL
                    type: string
                city:
                    description: 市区町村
                    maxLength: 32
                    type: string
                email:
                    description: メールアドレス
                    type: string
                facebookId:
                    description: Facebookアカウント
                    maxLength: 50
                    type: string
                firstname:
                    description: 名
                    maxLength: 16
                    type: string
                firstnameKana:
                    description: 名(かな)
                    maxLength: 32
                    type: string
                headerUrl:
                    description: ヘッダー画像URL
                    type: string
                instagramId:
                    description: Instagramアカウント
                    maxLength: 30
                    type: string
                lastname:
                    description: 姓
                    maxLength: 16
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    maxLength: 32
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    maxLength: 16
                    type: string
                prefectureCode:
                    description: 都道府県
                    maximum: 47
                    minimum: 0
                    type: integer
                profile:
                    description: 紹介文
                    maxLength: 2000
                    type: string
                promotionVideoUrl:
                    description: 紹介映像URL
                    type: string
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                username:
                    description: 表示名
                    maxLength: 64
                    type: string
            required:
                - firstname
                - firstnameKana
                - lastname
                - lastnameKana
                - username
            type: object
        request.UpdateProductTagRequest:
            properties:
                name:
                    description: 商品タグ名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.UpdateProductTypeRequest:
            properties:
                iconUrl:
                    description: アイコンURL
                    type: string
                name:
                    description: 品目名
                    maxLength: 32
                    type: string
            required:
                - iconUrl
                - name
            type: object
        request.UpdatePromotionRequest:
            properties:
                code:
                    type: string
                description:
                    maxLength: 2000
                    type: string
                discountRate:
                    minimum: 0
                    type: integer
                discountType:
                    type: integer
                endAt:
                    type: integer
                public:
                    type: boolean
                startAt:
                    type: integer
                title:
                    maxLength: 64
                    type: string
            required:
                - description
                - discountType
                - endAt
                - startAt
                - title
            type: object
        request.UpdateScheduleRequest:
            properties:
                description:
                    description: 説明
                    maxLength: 2000
                    type: string
                endAt:
                    description: 配信終了日時
                    type: integer
                imageUrl:
                    description: 蓋絵URL
                    type: string
                openingVideoUrl:
                    description: オープニング動画URL
                    type: string
                startAt:
                    description: 配信開始日時
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                title:
                    description: タイトル
                    maxLength: 64
                    type: string
            required:
                - description
                - endAt
                - startAt
                - title
            type: object
        request.UpdateShippingRate:
            properties:
                name:
                    description: 配送料金設定名
                    maxLength: 64
                    type: string
                prefectureCodes:
                    description: 対象都道府県一覧
                    items:
                        type: integer
                    type: array
                    uniqueItems: false
                price:
                    description: 配送料金(税込)
                    minimum: 0
                    type: integer
            required:
                - name
                - prefectureCodes
                - price
            type: object
        request.UpdateShippingRequest:
            properties:
                box60Frozen:
                    description: 箱サイズ60の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box60Rates:
                    description: 箱サイズ60の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpdateShippingRate'
                    type: array
                    uniqueItems: false
                box80Frozen:
                    description: 箱サイズ80の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box80Rates:
                    description: 箱サイズ80の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpdateShippingRate'
                    type: array
                    uniqueItems: false
                box100Frozen:
                    description: 箱サイズ100の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box100Rates:
                    description: 箱サイズ100の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpdateShippingRate'
                    type: array
                    uniqueItems: false
                freeShippingRates:
                    description: 送料無料になる金額(税込)
                    minimum: 0
                    type: integer
                hasFreeShipping:
                    description: 送料無料オプションの有無
                    type: boolean
                name:
                    description: 配送設定名
                    maxLength: 64
                    type: string
            required:
                - box100Frozen
                - box100Rates
                - box60Frozen
                - box60Rates
                - box80Frozen
                - box80Rates
                - name
            type: object
        request.UpdateShopRequest:
            properties:
                businessDays:
                    description: 営業曜日(発送可能日)
                    items:
                        type: integer
                        x-enum-varnames:
                            - Sunday
                            - Monday
                            - Tuesday
                            - Wednesday
                            - Thursday
                            - Friday
                            - Saturday
                            - Sunday
                            - Monday
                            - Tuesday
                            - Wednesday
                            - Thursday
                            - Friday
                            - Saturday
                            - Sunday
                            - Monday
                            - Tuesday
                            - Wednesday
                            - Thursday
                            - Friday
                            - Saturday
                    maxItems: 7
                    type: array
                    uniqueItems: true
                name:
                    description: 店舗名
                    maxLength: 64
                    type: string
                productTypeIds:
                    description: 取り扱い品目一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
            required:
                - name
                - productTypeIds
            type: object
        request.UpdateSpotRequest:
            properties:
                description:
                    description: 説明
                    maxLength: 2000
                    type: string
                latitude:
                    description: 緯度
                    maximum: 90
                    minimum: -90
                    type: number
                longitude:
                    description: 経度
                    maximum: 180
                    minimum: -180
                    type: number
                name:
                    description: スポット名
                    maxLength: 64
                    type: string
                spotTypeId:
                    description: スポット種別ID
                    type: string
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
            required:
                - latitude
                - longitude
                - name
                - spotTypeId
            type: object
        request.UpdateSpotTypeRequest:
            properties:
                name:
                    description: スポット種別名
                    maxLength: 32
                    type: string
            required:
                - name
            type: object
        request.UpdateThreadRequest:
            properties:
                content:
                    description: 内容
                    maxLength: 1000
                    type: string
                threadId:
                    description: お問い合わせID
                    type: string
                userId:
                    description: 送信者ID
                    type: string
                userType:
                    description: 送信者種別(不明:0, admin:1, uer:2, guest:3)
                    maximum: 3
                    minimum: 0
                    type: integer
            required:
                - content
                - threadId
                - userId
            type: object
        request.UpdateVideoCommentRequest:
            properties:
                disabled:
                    description: コメント無効フラグ
                    type: boolean
            type: object
        request.UpdateVideoRequest:
            properties:
                coordinatorId:
                    description: コーディネータID
                    type: string
                description:
                    description: 説明
                    maxLength: 2000
                    type: string
                displayExperience:
                    description: 体験への表示設定
                    type: boolean
                displayProduct:
                    description: 商品への表示設定
                    type: boolean
                experienceIds:
                    description: 体験ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                limited:
                    description: 限定公開設定
                    type: boolean
                productIds:
                    description: 商品ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                public:
                    description: 公開設定
                    type: boolean
                publishedAt:
                    description: 公開日時
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                title:
                    description: タイトル
                    maxLength: 128
                    type: string
                videoUrl:
                    description: 動画URL
                    type: string
            required:
                - coordinatorId
                - description
                - experienceIds
                - productIds
                - publishedAt
                - thumbnailUrl
                - title
                - videoUrl
            type: object
        request.UpsertShippingRate:
            properties:
                name:
                    description: 配送料金設定名
                    maxLength: 64
                    type: string
                prefectureCodes:
                    description: 対象都道府県一覧
                    items:
                        type: integer
                    type: array
                    uniqueItems: false
                price:
                    description: 配送料金(税込)
                    minimum: 0
                    type: integer
            required:
                - name
                - prefectureCodes
                - price
            type: object
        request.UpsertShippingRequest:
            properties:
                box60Frozen:
                    description: 箱サイズ60の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box60Rates:
                    description: 箱サイズ60の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpsertShippingRate'
                    type: array
                    uniqueItems: false
                box80Frozen:
                    description: 箱サイズ80の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box80Rates:
                    description: 箱サイズ80の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpsertShippingRate'
                    type: array
                    uniqueItems: false
                box100Frozen:
                    description: 箱サイズ100の冷凍便追加配送料(税込)
                    minimum: 0
                    type: integer
                box100Rates:
                    description: 箱サイズ100の通常便配送料一覧
                    items:
                        $ref: '#/components/schemas/request.UpsertShippingRate'
                    type: array
                    uniqueItems: false
                freeShippingRates:
                    description: 送料無料になる金額(税込)
                    minimum: 0
                    type: integer
                hasFreeShipping:
                    description: 送料無料オプションの有無
                    type: boolean
            required:
                - box100Frozen
                - box100Rates
                - box60Frozen
                - box60Rates
                - box80Frozen
                - box80Rates
            type: object
        request.VerifyAuthEmailRequest:
            properties:
                verifyCode:
                    description: 検証コード
                    type: string
            required:
                - verifyCode
            type: object
        response.Address:
            description: デフォルト設定の住所情報
            properties:
                addressId:
                    description: 住所ID
                    type: string
                addressLine1:
                    description: 町名・番地
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    type: string
                city:
                    description: 市区町村
                    type: string
                firstname:
                    description: 氏名（名）
                    type: string
                firstnameKana:
                    description: 氏名(名:かな)
                    type: string
                lastname:
                    description: 氏名（姓）
                    type: string
                lastnameKana:
                    description: 氏名(姓:かな)
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    type: string
                prefecture:
                    description: 都道府県
                    type: string
                prefectureCode:
                    description: 都道府県コード
                    type: integer
            type: object
        response.Admin:
            description: 対応者情報
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                email:
                    description: メールアドレス
                    type: string
                firstname:
                    description: 名
                    type: string
                firstnameKana:
                    description: 名(かな)
                    type: string
                id:
                    description: 管理者ID
                    type: string
                lastname:
                    description: 姓
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    type: string
                role:
                    description: 管理者種別
                    type: integer
                updateAt:
                    description: 更新日時
                    type: integer
            type: object
        response.Administrator:
            description: システム管理者情報
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                email:
                    description: メールアドレス
                    type: string
                firstname:
                    description: 名
                    type: string
                firstnameKana:
                    description: 名(かな)
                    type: string
                id:
                    description: 管理者ID
                    type: string
                lastname:
                    description: 姓
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                status:
                    description: 管理者の状態
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.AdministratorResponse:
            properties:
                administrator:
                    $ref: '#/components/schemas/response.Administrator'
            type: object
        response.AdministratorsResponse:
            properties:
                administrators:
                    description: システム管理者一覧
                    items:
                        $ref: '#/components/schemas/response.Administrator'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
            type: object
        response.AnalyzeScheduleResponse:
            properties:
                totalViewers:
                    description: 合計視聴者数
                    type: integer
                viewerLogs:
                    description: 視聴者数ログ
                    items:
                        $ref: '#/components/schemas/response.BroadcastViewerLog'
                    type: array
                    uniqueItems: false
            type: object
        response.AnalyzeVideoResponse:
            properties:
                totalViewers:
                    description: 合計視聴者数
                    type: integer
                viewerLogs:
                    description: 視聴者数ログ
                    items:
                        $ref: '#/components/schemas/response.VideoViewerLog'
                    type: array
                    uniqueItems: false
            type: object
        response.AuthGoogleAccountResponse:
            properties:
                url:
                    description: Googleアカウント連携URL
                    type: string
            type: object
        response.AuthLINEAccountResponse:
            properties:
                url:
                    description: LINEアカウント連携URL
                    type: string
            type: object
        response.AuthProvider:
            properties:
                connectedAt:
                    description: 連携日時
                    type: integer
                type:
                    description: プロバイダ種別
                    type: integer
            type: object
        response.AuthProvidersResponse:
            properties:
                providers:
                    description: プロバイダ一覧
                    items:
                        $ref: '#/components/schemas/response.AuthProvider'
                    type: array
                    uniqueItems: false
            type: object
        response.AuthResponse:
            properties:
                accessToken:
                    description: アクセストークン
                    type: string
                adminId:
                    description: 管理者ID
                    type: string
                expiresIn:
                    description: 有効期限
                    type: integer
                refreshToken:
                    description: 更新トークン
                    type: string
                tokenType:
                    description: トークン種別
                    type: string
                type:
                    description: 管理者種別
                    type: integer
            type: object
        response.AuthUserResponse:
            properties:
                email:
                    description: メールアドレス
                    type: string
                id:
                    description: 管理者ID
                    type: string
                shopIds:
                    description: 店舗ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                type:
                    description: 管理者種別
                    type: integer
                username:
                    description: 表示名
                    type: string
            type: object
        response.AuthYoutubeBroadcastResponse:
            properties:
                url:
                    description: 認証URL
                    type: string
            type: object
        response.Broadcast:
            description: ライブ配信情報
            properties:
                archiveUrl:
                    description: オンデマンド配信URL
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: ライブ配信ID
                    type: string
                inputUrl:
                    description: ライブ配信URL(入力)
                    type: string
                outputUrl:
                    description: ライブ配信URL(出力)
                    type: string
                scheduleId:
                    description: 開催スケジュールID
                    type: string
                status:
                    description: ライブ配信状況
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
                youtubeAccount:
                    description: Youtubeアカウント
                    type: string
                youtubeAdminUrl:
                    description: Youtube管理画面URL
                    type: string
                youtubeViewerUrl:
                    description: Youtube視聴画面URL
                    type: string
            type: object
        response.BroadcastResponse:
            properties:
                broadcast:
                    $ref: '#/components/schemas/response.Broadcast'
            type: object
        response.BroadcastViewerLog:
            properties:
                broadcastId:
                    description: ライブ配信ID
                    type: string
                endAt:
                    description: 集計終了日時
                    type: integer
                startAt:
                    description: 集計開始日時
                    type: integer
                total:
                    description: 合計視聴者数
                    type: integer
            type: object
        response.CategoriesResponse:
            properties:
                categories:
                    description: 商品種別一覧
                    items:
                        $ref: '#/components/schemas/response.Category'
                    type: array
                    uniqueItems: false
                total:
                    description: 商品種別合計数
                    type: integer
            type: object
        response.Category:
            description: 商品種別情報
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: 商品種別ID
                    type: string
                name:
                    description: 商品種別名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.CategoryResponse:
            properties:
                category:
                    $ref: '#/components/schemas/response.Category'
            type: object
        response.Contact:
            description: お問い合わせ情報
            properties:
                categoryId:
                    description: お問い合わせ種別ID
                    type: string
                content:
                    description: 内容
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                email:
                    description: メールアドレス
                    type: string
                id:
                    description: お問い合わせID
                    type: string
                note:
                    description: 対応者メモ
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                responderId:
                    description: 対応者ID
                    type: string
                status:
                    $ref: '#/components/schemas/response.ContactStatus'
                title:
                    description: 件名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
                userId:
                    description: ユーザーID
                    type: string
                username:
                    description: 氏名
                    type: string
            type: object
        response.ContactCategoriesResponse:
            properties:
                contactCategories:
                    description: お問い合わせ種別一覧
                    items:
                        $ref: '#/components/schemas/response.ContactCategory'
                    type: array
                    uniqueItems: false
            type: object
        response.ContactCategory:
            description: お問い合わせ種別情報
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: お問い合わせ種別ID
                    type: string
                title:
                    description: お問い合わせ種別名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ContactCategoryResponse:
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: お問い合わせ種別ID
                    type: string
                title:
                    description: お問い合わせ種別名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ContactReadResponse:
            properties:
                contactId:
                    description: お問い合わせID
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: お問い合わせ既読管理ID
                    type: string
                read:
                    description: 既読フラグ
                    type: boolean
                updatedAt:
                    description: 更新日時
                    type: integer
                userId:
                    description: 既読ユーザーID
                    type: string
                userType:
                    description: 既読ユーザータイプ
                    type: integer
            type: object
        response.ContactResponse:
            properties:
                category:
                    $ref: '#/components/schemas/response.ContactCategory'
                contact:
                    $ref: '#/components/schemas/response.Contact'
                responder:
                    $ref: '#/components/schemas/response.Admin'
                threads:
                    description: お問い合わせ会話履歴一覧
                    items:
                        $ref: '#/components/schemas/response.Thread'
                    type: array
                    uniqueItems: false
                user:
                    $ref: '#/components/schemas/response.User'
            type: object
        response.ContactStatus:
            description: お問い合わせステータス
            type: integer
            x-enum-comments:
                ContactStatusDiscard: 対応不要
                ContactStatusDone: 完了
                ContactStatusInprogress: 進行中
                ContactStatusUnknown: 不明
                ContactStatusWaiting: 未着手
            x-enum-varnames:
                - ContactStatusUnknown
                - ContactStatusWaiting
                - ContactStatusInprogress
                - ContactStatusDone
                - ContactStatusDiscard
        response.ContactsResponse:
            properties:
                admins:
                    description: 管理者一覧
                    items:
                        $ref: '#/components/schemas/response.Admin'
                    type: array
                    uniqueItems: false
                categories:
                    description: お問い合わせ種別一覧
                    items:
                        $ref: '#/components/schemas/response.ContactCategory'
                    type: array
                    uniqueItems: false
                contacts:
                    description: お問い合わせ一覧
                    items:
                        $ref: '#/components/schemas/response.Contact'
                    type: array
                    uniqueItems: false
                threads:
                    description: お問い合わせ会話履歴一覧
                    items:
                        $ref: '#/components/schemas/response.Thread'
                    type: array
                    uniqueItems: false
                total:
                    description: お問い合わせ合計
                    type: integer
                users:
                    description: ユーザー一覧
                    items:
                        $ref: '#/components/schemas/response.User'
                    type: array
                    uniqueItems: false
            type: object
        response.Coordinator:
            description: コーディネータ情報
            properties:
                addressLine1:
                    description: 町名・番地
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    type: string
                bonusVideoUrl:
                    description: 購入特典映像URL
                    type: string
                city:
                    description: 市区町村
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                email:
                    description: メールアドレス
                    type: string
                facebookId:
                    description: Facebookアカウント
                    type: string
                firstname:
                    description: 名
                    type: string
                firstnameKana:
                    description: 名(かな)
                    type: string
                headerUrl:
                    description: ヘッダー画像URL
                    type: string
                id:
                    description: コーディネータID
                    type: string
                instagramId:
                    description: Instagramアカウント
                    type: string
                lastname:
                    description: 姓
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    type: string
                prefectureCode:
                    description: 都道府県
                    type: integer
                producerTotal:
                    description: 担当する生産者数
                    type: integer
                profile:
                    description: 紹介文
                    type: string
                promotionVideoUrl:
                    description: 紹介映像URL
                    type: string
                shopId:
                    description: 店舗ID
                    type: string
                status:
                    description: コーディネータの状態
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
                username:
                    description: 表示名
                    type: string
            type: object
        response.CoordinatorResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                password:
                    description: パスワード（登録時のみ）
                    type: string
                productTypes:
                    description: 品目一覧
                    items:
                        $ref: '#/components/schemas/response.ProductType'
                    type: array
                    uniqueItems: false
                shop:
                    $ref: '#/components/schemas/response.Shop'
            type: object
        response.CoordinatorsResponse:
            properties:
                coordinators:
                    description: 生産者一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                productTypes:
                    description: 品目一覧
                    items:
                        $ref: '#/components/schemas/response.ProductType'
                    type: array
                    uniqueItems: false
                shops:
                    description: 店舗一覧
                    items:
                        $ref: '#/components/schemas/response.Shop'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
            type: object
        response.Experience:
            description: 体験情報
            properties:
                businessCloseTime:
                    description: 営業終了時間
                    type: string
                businessOpenTime:
                    description: 営業開始時間
                    type: string
                coordinatorId:
                    description: コーディネータID
                    type: string
                createdAt:
                    description: 作成日時
                    type: integer
                description:
                    description: 説明
                    type: string
                direction:
                    description: アクセス方法
                    type: string
                duration:
                    description: 体験時間(分)
                    type: integer
                endAt:
                    description: 募集終了日時
                    type: integer
                experienceTypeId:
                    description: 体験種別ID
                    type: string
                hostAddressLine1:
                    description: 開催場所(住所1)
                    type: string
                hostAddressLine2:
                    description: 開催場所(住所2)
                    type: string
                hostCity:
                    description: 開催場所(市区町村)
                    type: string
                hostPostalCode:
                    description: 開催場所(郵便番号)
                    type: string
                hostPrefectureCode:
                    description: 開催場所(都道府県コード)
                    type: integer
                id:
                    description: 体験ID
                    type: string
                media:
                    description: メディア一覧
                    items:
                        $ref: '#/components/schemas/response.ExperienceMedia'
                    type: array
                    uniqueItems: false
                priceAdult:
                    description: 大人料金
                    type: integer
                priceElementarySchool:
                    description: 小学生料金
                    type: integer
                priceJuniorHighSchool:
                    description: 中学生料金
                    type: integer
                pricePreschool:
                    description: 幼児料金
                    type: integer
                priceSenior:
                    description: シニア料金
                    type: integer
                producerId:
                    description: プロデューサーID
                    type: string
                promotionVideoUrl:
                    description: 紹介動画URL
                    type: string
                public:
                    description: 公開設定
                    type: boolean
                recommendedPoint1:
                    description: おすすめポイント1
                    type: string
                recommendedPoint2:
                    description: おすすめポイント2
                    type: string
                recommendedPoint3:
                    description: おすすめポイント3
                    type: string
                soldOut:
                    description: 定員オーバー設定
                    type: boolean
                startAt:
                    description: 募集開始日時
                    type: integer
                status:
                    description: 販売状況
                    type: integer
                title:
                    description: タイトル
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ExperienceMedia:
            properties:
                isThumbnail:
                    description: サムネイルとして使用
                    type: boolean
                url:
                    description: メディアURL
                    type: string
            type: object
        response.ExperienceResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                experience:
                    $ref: '#/components/schemas/response.Experience'
                experienceType:
                    $ref: '#/components/schemas/response.ExperienceType'
                producer:
                    $ref: '#/components/schemas/response.Producer'
            type: object
        response.ExperienceType:
            description: 体験種別情報
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: 体験種別ID
                    type: string
                name:
                    description: 体験種別名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ExperienceTypeResponse:
            properties:
                experienceType:
                    $ref: '#/components/schemas/response.ExperienceType'
            type: object
        response.ExperienceTypesResponse:
            properties:
                experienceTypes:
                    description: 体験種別一覧
                    items:
                        $ref: '#/components/schemas/response.ExperienceType'
                    type: array
                    uniqueItems: false
                total:
                    description: 体験種別合計数
                    type: integer
            type: object
        response.ExperiencesResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                experienceTypes:
                    description: 体験種別一覧
                    items:
                        $ref: '#/components/schemas/response.ExperienceType'
                    type: array
                    uniqueItems: false
                experiences:
                    description: 体験一覧
                    items:
                        $ref: '#/components/schemas/response.Experience'
                    type: array
                    uniqueItems: false
                producers:
                    description: 生産者一覧
                    items:
                        $ref: '#/components/schemas/response.Producer'
                    type: array
                    uniqueItems: false
                total:
                    description: 体験合計数
                    type: integer
            type: object
        response.GuestBroadcast:
            description: ゲスト用ライブ配信情報
            properties:
                coordinatorMarche:
                    description: ライブ配信担当者(マルシェ)
                    type: string
                coordinatorName:
                    description: ライブ配信担当者(名前)
                    type: string
                description:
                    description: ライブ配信説明
                    type: string
                endAt:
                    description: ライブ配信終了日時
                    type: integer
                startAt:
                    description: ライブ配信開始日時
                    type: integer
                title:
                    description: ライブ配信タイトル
                    type: string
            type: object
        response.GuestBroadcastResponse:
            properties:
                broadcast:
                    $ref: '#/components/schemas/response.GuestBroadcast'
            type: object
        response.Live:
            description: ライブ配信情報
            properties:
                comment:
                    description: コメント
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                endAt:
                    description: ライブ配信終了日時
                    type: integer
                id:
                    description: ライブ配信ID
                    type: string
                producerId:
                    description: 生産者ID
                    type: string
                productIds:
                    description: 商品ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                scheduleId:
                    description: マルシェ開催スケジュールID
                    type: string
                startAt:
                    description: ライブ配信開始日時
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.LiveComment:
            properties:
                accountId:
                    description: アカウントID
                    type: string
                comment:
                    description: コメント
                    type: string
                disabled:
                    description: コメント無効フラグ
                    type: boolean
                id:
                    description: コメントID
                    type: string
                publishedAt:
                    description: 投稿日時
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                userId:
                    description: ユーザーID
                    type: string
                username:
                    description: ユーザー名
                    type: string
            type: object
        response.LiveCommentsResponse:
            properties:
                comments:
                    description: コメント一覧
                    items:
                        $ref: '#/components/schemas/response.LiveComment'
                    type: array
                    uniqueItems: false
                nextToken:
                    description: 次の取得開始位置
                    type: string
            type: object
        response.LiveResponse:
            properties:
                live:
                    $ref: '#/components/schemas/response.Live'
                producer:
                    $ref: '#/components/schemas/response.Producer'
                products:
                    description: 商品一覧
                    items:
                        $ref: '#/components/schemas/response.Product'
                    type: array
                    uniqueItems: false
            type: object
        response.LivesResponse:
            properties:
                lives:
                    description: ライブ配信一覧
                    items:
                        $ref: '#/components/schemas/response.Live'
                    type: array
                    uniqueItems: false
                producers:
                    description: 生産者一覧
                    items:
                        $ref: '#/components/schemas/response.Producer'
                    type: array
                    uniqueItems: false
                products:
                    description: 商品一覧
                    items:
                        $ref: '#/components/schemas/response.Product'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
            type: object
        response.Message:
            description: メッセージ情報
            properties:
                body:
                    description: メッセージ内容
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: メッセージID
                    type: string
                link:
                    description: 遷移先リンク
                    type: string
                read:
                    description: 既読フラグ
                    type: boolean
                receivedAt:
                    description: 受信日時
                    type: integer
                title:
                    description: メッセージ件名
                    type: string
                type:
                    description: メッセージ種別
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.MessageResponse:
            properties:
                message:
                    $ref: '#/components/schemas/response.Message'
            type: object
        response.MessagesResponse:
            properties:
                messages:
                    description: メッセージ一覧
                    items:
                        $ref: '#/components/schemas/response.Message'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
            type: object
        response.Notification:
            description: お知らせ情報
            properties:
                body:
                    description: 本文
                    type: string
                createdAt:
                    description: 作成日時
                    type: integer
                createdBy:
                    description: 登録者ID
                    type: string
                id:
                    description: お知らせID
                    type: string
                note:
                    description: 備考
                    type: string
                promotionId:
                    description: プロモーションID
                    type: string
                publishedAt:
                    description: 掲載開始日時
                    type: integer
                status:
                    description: お知らせ状態
                    type: integer
                targets:
                    description: 掲載対象一覧
                    items:
                        type: integer
                    type: array
                    uniqueItems: false
                title:
                    description: タイトル
                    type: string
                type:
                    description: お知らせ種別
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
                updatedBy:
                    description: 更新者ID
                    type: string
            type: object
        response.NotificationResponse:
            properties:
                admin:
                    $ref: '#/components/schemas/response.Admin'
                notification:
                    $ref: '#/components/schemas/response.Notification'
            type: object
        response.NotificationsResponse:
            properties:
                admins:
                    description: 登録者情報一覧
                    items:
                        $ref: '#/components/schemas/response.Admin'
                    type: array
                    uniqueItems: false
                notifications:
                    description: お知らせ一覧
                    items:
                        $ref: '#/components/schemas/response.Notification'
                    type: array
                    uniqueItems: false
                total:
                    description: お知らせ合計数
                    type: integer
            type: object
        response.Order:
            description: 注文履歴情報
            properties:
                completedAt:
                    description: 対応完了日時
                    type: integer
                coordinatorId:
                    description: コーディネータID
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                experience:
                    $ref: '#/components/schemas/response.OrderExperience'
                fulfillments:
                    description: 配送情報一覧
                    items:
                        $ref: '#/components/schemas/response.OrderFulfillment'
                    type: array
                    uniqueItems: false
                id:
                    description: 注文履歴ID
                    type: string
                items:
                    description: 注文商品一覧
                    items:
                        $ref: '#/components/schemas/response.OrderItem'
                    type: array
                    uniqueItems: false
                managementId:
                    description: 注文管理用ID
                    type: integer
                metadata:
                    $ref: '#/components/schemas/response.OrderMetadata'
                payment:
                    $ref: '#/components/schemas/response.OrderPayment'
                promotionId:
                    description: プロモーションID
                    type: string
                refund:
                    $ref: '#/components/schemas/response.OrderRefund'
                shippingMessage:
                    description: 発送連絡時のメッセージ
                    type: string
                status:
                    description: 注文ステータス
                    type: integer
                type:
                    description: 注文種別
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
                userId:
                    description: ユーザーID
                    type: string
            type: object
        response.OrderExperience:
            description: 注文体験情報
            properties:
                adultCount:
                    description: 大人人数
                    type: integer
                adultPrice:
                    description: 大人価格
                    type: integer
                elementarySchoolCount:
                    description: 小学生人数
                    type: integer
                elementarySchoolPrice:
                    description: 小学生価格
                    type: integer
                experienceId:
                    description: 体験ID
                    type: string
                juniorHighSchoolCount:
                    description: 中学生人数
                    type: integer
                juniorHighSchoolPrice:
                    description: 中学生価格
                    type: integer
                preschoolCount:
                    description: 幼児人数
                    type: integer
                preschoolPrice:
                    description: 幼児価格
                    type: integer
                remarks:
                    $ref: '#/components/schemas/response.OrderExperienceRemarks'
                seniorCount:
                    description: シニア人数
                    type: integer
                seniorPrice:
                    description: シニア価格
                    type: integer
            type: object
        response.OrderExperienceRemarks:
            description: 備考
            properties:
                requestedDate:
                    description: 体験希望日
                    type: string
                requestedTime:
                    description: 体験希望時間
                    type: string
                transportation:
                    description: 交通手段
                    type: string
            type: object
        response.OrderFulfillment:
            properties:
                addressId:
                    description: 住所ID
                    type: string
                addressLine1:
                    description: 町名・番地
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    type: string
                boxNumber:
                    description: 箱の通番
                    type: integer
                boxRate:
                    description: 箱の占有率
                    type: integer
                boxSize:
                    description: 箱の大きさ
                    type: integer
                city:
                    description: 市区町村
                    type: string
                firstname:
                    description: 氏名（名）
                    type: string
                firstnameKana:
                    description: 氏名(名:かな)
                    type: string
                fulfillmentId:
                    description: 配送情報ID
                    type: string
                lastname:
                    description: 氏名（姓）
                    type: string
                lastnameKana:
                    description: 氏名(姓:かな)
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    type: string
                prefecture:
                    description: 都道府県
                    type: string
                prefectureCode:
                    description: 都道府県コード
                    type: integer
                shippedAt:
                    description: 配送日時
                    type: integer
                shippingCarrier:
                    description: 配送会社
                    type: integer
                shippingType:
                    description: 配送方法
                    type: integer
                status:
                    description: 配送状況
                    type: integer
                trackingNumber:
                    description: 伝票番号
                    type: string
            type: object
        response.OrderItem:
            properties:
                fulfillmentId:
                    description: 配送情報ID
                    type: string
                price:
                    description: 購入価格(税込)
                    type: integer
                productId:
                    description: 商品ID
                    type: string
                quantity:
                    description: 購入数量
                    type: integer
            type: object
        response.OrderMetadata:
            description: 注文付加情報
            properties:
                pickupAt:
                    description: 受け取り日時
                    type: integer
                pickupLocation:
                    description: 受け取り場所
                    type: string
            type: object
        response.OrderPayment:
            description: 支払い情報
            properties:
                addressId:
                    description: 住所ID
                    type: string
                addressLine1:
                    description: 町名・番地
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    type: string
                city:
                    description: 市区町村
                    type: string
                discount:
                    description: 割引金額(税込)
                    type: integer
                firstname:
                    description: 氏名（名）
                    type: string
                firstnameKana:
                    description: 氏名(名:かな)
                    type: string
                lastname:
                    description: 氏名（姓）
                    type: string
                lastnameKana:
                    description: 氏名(姓:かな)
                    type: string
                methodType:
                    description: 決済手段種別
                    type: integer
                orderedAt:
                    description: 注文日時
                    type: integer
                paidAt:
                    description: 支払日時
                    type: integer
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    type: string
                prefecture:
                    description: 都道府県
                    type: string
                prefectureCode:
                    description: 都道府県コード
                    type: integer
                shippingFee:
                    description: 配送手数料(税込)
                    type: integer
                status:
                    description: 支払い状況
                    type: integer
                subtotal:
                    description: 購入金額(税込)
                    type: integer
                total:
                    description: 合計金額(税込)
                    type: integer
                transactionId:
                    description: 取引ID
                    type: string
            type: object
        response.OrderRefund:
            description: 注文キャンセル情報
            properties:
                canceled:
                    description: 注文キャンセルフラグ
                    type: boolean
                canceledAt:
                    description: 注文キャンセル日時
                    type: integer
                reason:
                    description: 注文キャンセル理由
                    type: string
                total:
                    description: 返金金額
                    type: integer
                type:
                    description: 注文キャンセル種別
                    type: integer
            type: object
        response.OrderResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                experience:
                    $ref: '#/components/schemas/response.Experience'
                order:
                    $ref: '#/components/schemas/response.Order'
                products:
                    description: 商品一覧
                    items:
                        $ref: '#/components/schemas/response.Product'
                    type: array
                    uniqueItems: false
                promotion:
                    $ref: '#/components/schemas/response.Promotion'
                user:
                    $ref: '#/components/schemas/response.User'
            type: object
        response.OrdersResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                orders:
                    description: 注文履歴一覧
                    items:
                        $ref: '#/components/schemas/response.Order'
                    type: array
                    uniqueItems: false
                promotions:
                    description: プロモーション一覧
                    items:
                        $ref: '#/components/schemas/response.Promotion'
                    type: array
                    uniqueItems: false
                total:
                    description: 注文履歴合計数
                    type: integer
                users:
                    description: 購入者一覧
                    items:
                        $ref: '#/components/schemas/response.User'
                    type: array
                    uniqueItems: false
            type: object
        response.PaymentSystem:
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                methodType:
                    description: 決済システム種別
                    type: integer
                status:
                    description: 決済システム状態
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.PaymentSystemsResponse:
            properties:
                systems:
                    description: 決済システム一覧
                    items:
                        $ref: '#/components/schemas/response.PaymentSystem'
                    type: array
                    uniqueItems: false
            type: object
        response.PostalCodeResponse:
            properties:
                city:
                    description: 市区町村名
                    type: string
                postalCode:
                    description: 郵便番号
                    type: string
                prefecture:
                    description: 都道府県名
                    type: string
                prefectureCode:
                    description: 都道府県コード
                    type: integer
                town:
                    description: 町域名
                    type: string
            type: object
        response.Producer:
            description: 生産者情報
            properties:
                addressLine1:
                    description: 町名・番地
                    type: string
                addressLine2:
                    description: ビル名・号室など
                    type: string
                bonusVideoUrl:
                    description: 購入特典映像URL
                    type: string
                city:
                    description: 市区町村
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                email:
                    description: メールアドレス
                    type: string
                facebookId:
                    description: Facebookアカウント
                    type: string
                firstname:
                    description: 名
                    type: string
                firstnameKana:
                    description: 名(かな)
                    type: string
                headerUrl:
                    description: ヘッダー画像URL
                    type: string
                id:
                    description: 生産者ID
                    type: string
                instagramId:
                    description: Instagramアカウント
                    type: string
                lastname:
                    description: 姓
                    type: string
                lastnameKana:
                    description: 姓(かな)
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                postalCode:
                    description: 郵便番号
                    type: string
                prefectureCode:
                    description: 都道府県
                    type: integer
                profile:
                    description: 紹介文
                    type: string
                promotionVideoUrl:
                    description: 紹介映像URL
                    type: string
                status:
                    description: 生産者の状態
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
                username:
                    description: 生産者名
                    type: string
            type: object
        response.ProducerResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                producer:
                    $ref: '#/components/schemas/response.Producer'
                shops:
                    description: 店舗情報
                    items:
                        $ref: '#/components/schemas/response.Shop'
                    type: array
                    uniqueItems: false
            type: object
        response.ProducersResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                producers:
                    description: 生産者一覧
                    items:
                        $ref: '#/components/schemas/response.Producer'
                    type: array
                    uniqueItems: false
                shops:
                    description: 店舗一覧
                    items:
                        $ref: '#/components/schemas/response.Shop'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
            type: object
        response.Product:
            description: 商品情報
            properties:
                box60Rate:
                    description: 箱の占有率(サイズ:60)
                    type: integer
                box80Rate:
                    description: 箱の占有率(サイズ:80)
                    type: integer
                box100Rate:
                    description: 箱の占有率(サイズ:100)
                    type: integer
                categoryId:
                    description: 商品種別ID
                    type: string
                coordinatorId:
                    description: コーディネータID
                    type: string
                cost:
                    description: 原価
                    type: integer
                createdAt:
                    description: 登録日時
                    type: integer
                deliveryType:
                    description: 配送方法
                    type: integer
                description:
                    description: 商品説明
                    type: string
                endAt:
                    description: 販売終了日時
                    type: integer
                expirationDate:
                    description: 賞味期限(単位:日)
                    type: integer
                id:
                    description: 商品ID
                    type: string
                inventory:
                    description: 在庫数
                    type: integer
                itemDescription:
                    description: 数量単位説明
                    type: string
                itemUnit:
                    description: 数量単位
                    type: string
                media:
                    description: メディア一覧
                    items:
                        $ref: '#/components/schemas/response.ProductMedia'
                    type: array
                    uniqueItems: false
                name:
                    description: 商品名
                    type: string
                originCity:
                    description: 原産地(市区町村)
                    type: string
                originPrefectureCode:
                    description: 原産地(都道府県)
                    type: integer
                price:
                    description: 販売価格(税込)
                    type: integer
                producerId:
                    description: 生産者ID
                    type: string
                productTagIds:
                    description: 商品タグID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                productTypeId:
                    description: 品目ID
                    type: string
                public:
                    description: 公開フラグ
                    type: boolean
                recommendedPoint1:
                    description: おすすめポイント1
                    type: string
                recommendedPoint2:
                    description: おすすめポイント2
                    type: string
                recommendedPoint3:
                    description: おすすめポイント3
                    type: string
                startAt:
                    description: 販売開始日時
                    type: integer
                status:
                    description: 販売状況
                    type: integer
                storageMethodType:
                    description: 保存方法
                    type: integer
                updatedAt:
                    description: 更新日時
                    type: integer
                weight:
                    description: 重量(kg,少数第一位まで)
                    type: number
            type: object
        response.ProductMedia:
            properties:
                isThumbnail:
                    description: サムネイルとして使用
                    type: boolean
                url:
                    description: メディアURL
                    type: string
            type: object
        response.ProductResponse:
            properties:
                category:
                    $ref: '#/components/schemas/response.Category'
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                producer:
                    $ref: '#/components/schemas/response.Producer'
                product:
                    $ref: '#/components/schemas/response.Product'
                productTags:
                    description: 商品タグ一覧
                    items:
                        $ref: '#/components/schemas/response.ProductTag'
                    type: array
                    uniqueItems: false
                productType:
                    $ref: '#/components/schemas/response.ProductType'
            type: object
        response.ProductTag:
            description: 商品タグ情報
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: 商品タグID
                    type: string
                name:
                    description: 商品タグ名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ProductTagResponse:
            properties:
                productTag:
                    $ref: '#/components/schemas/response.ProductTag'
            type: object
        response.ProductTagsResponse:
            properties:
                productTags:
                    description: 商品タグ一覧
                    items:
                        $ref: '#/components/schemas/response.ProductTag'
                    type: array
                    uniqueItems: false
                total:
                    description: 商品タグ合計数
                    type: integer
            type: object
        response.ProductType:
            description: 品目情報
            properties:
                categoryId:
                    description: 商品種別ID
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                iconUrl:
                    description: アイコンURL
                    type: string
                id:
                    description: 品目ID
                    type: string
                name:
                    description: 品目名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ProductTypeResponse:
            properties:
                category:
                    $ref: '#/components/schemas/response.Category'
                productType:
                    $ref: '#/components/schemas/response.ProductType'
            type: object
        response.ProductTypesResponse:
            properties:
                categories:
                    description: 商品種別一覧
                    items:
                        $ref: '#/components/schemas/response.Category'
                    type: array
                    uniqueItems: false
                productTypes:
                    description: 品目一覧
                    items:
                        $ref: '#/components/schemas/response.ProductType'
                    type: array
                    uniqueItems: false
                total:
                    description: 品目合計数
                    type: integer
            type: object
        response.ProductsResponse:
            properties:
                categories:
                    description: 商品種別一覧
                    items:
                        $ref: '#/components/schemas/response.Category'
                    type: array
                    uniqueItems: false
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                producers:
                    description: 生産者一覧
                    items:
                        $ref: '#/components/schemas/response.Producer'
                    type: array
                    uniqueItems: false
                productTags:
                    description: 商品タグ一覧
                    items:
                        $ref: '#/components/schemas/response.ProductTag'
                    type: array
                    uniqueItems: false
                productTypes:
                    description: 品目一覧
                    items:
                        $ref: '#/components/schemas/response.ProductType'
                    type: array
                    uniqueItems: false
                products:
                    description: 商品一覧
                    items:
                        $ref: '#/components/schemas/response.Product'
                    type: array
                    uniqueItems: false
                total:
                    description: 商品合計数
                    type: integer
            type: object
        response.Promotion:
            description: プロモーション情報
            properties:
                code:
                    description: クーポンコード
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                description:
                    description: 詳細説明
                    type: string
                discountRate:
                    description: 割引額(%/円)
                    type: integer
                discountType:
                    description: 割引計算方法
                    type: integer
                endAt:
                    description: クーポン使用可能日時(終了)
                    type: integer
                id:
                    description: プロモーションID
                    type: string
                public:
                    description: 公開フラグ
                    type: boolean
                shopId:
                    description: 店舗ID
                    type: string
                startAt:
                    description: クーポン使用可能日時(開始)
                    type: integer
                status:
                    description: ステータス
                    type: integer
                targetType:
                    description: 対象商品
                    type: integer
                title:
                    description: タイトル
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
                usedAmount:
                    description: 使用による割引合計額
                    type: integer
                usedCount:
                    description: 使用回数
                    type: integer
            type: object
        response.PromotionResponse:
            properties:
                promotion:
                    $ref: '#/components/schemas/response.Promotion'
                shop:
                    $ref: '#/components/schemas/response.Shop'
            type: object
        response.PromotionsResponse:
            properties:
                promotions:
                    description: プロモーション情報一覧
                    items:
                        $ref: '#/components/schemas/response.Promotion'
                    type: array
                    uniqueItems: false
                shops:
                    description: 店舗情報一覧
                    items:
                        $ref: '#/components/schemas/response.Shop'
                    type: array
                    uniqueItems: false
                total:
                    description: プロモーション合計数
                    type: integer
            type: object
        response.Schedule:
            description: マルシェ開催情報
            properties:
                approved:
                    description: 承認フラグ
                    type: boolean
                coordinatorId:
                    description: コーディネータID
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                description:
                    description: 説明
                    type: string
                endAt:
                    description: 配信終了日時
                    type: integer
                id:
                    description: スケジュールID
                    type: string
                imageUrl:
                    description: 蓋絵URL
                    type: string
                openingVideoUrl:
                    description: オープニング動画URL
                    type: string
                public:
                    description: 公開フラグ
                    type: boolean
                shopId:
                    description: 店舗ID
                    type: string
                startAt:
                    description: 配信開始日時
                    type: integer
                status:
                    description: 開催状況
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                title:
                    description: タイトル
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ScheduleResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                schedule:
                    $ref: '#/components/schemas/response.Schedule'
            type: object
        response.SchedulesResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                schedules:
                    description: マルシェ開催一覧
                    items:
                        $ref: '#/components/schemas/response.Schedule'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
            type: object
        response.Shipping:
            description: 配送設定情報
            properties:
                box60Frozen:
                    description: 箱サイズ60の追加（冷凍便）追加配送料(税込)
                    type: integer
                box60Rates:
                    description: 箱サイズ60の通常（常温・冷蔵便）配送料一覧
                    items:
                        $ref: '#/components/schemas/response.ShippingRate'
                    type: array
                    uniqueItems: false
                box80Frozen:
                    description: 箱サイズ80の追加（冷凍便）追加配送料(税込)
                    type: integer
                box80Rates:
                    description: 箱サイズ80の通常（常温・冷蔵便）配送料一覧
                    items:
                        $ref: '#/components/schemas/response.ShippingRate'
                    type: array
                    uniqueItems: false
                box100Frozen:
                    description: 箱サイズ100の追加（冷凍便）追加配送料(税込)
                    type: integer
                box100Rates:
                    description: 箱サイズ100の通常（常温・冷蔵便）配送料一覧
                    items:
                        $ref: '#/components/schemas/response.ShippingRate'
                    type: array
                    uniqueItems: false
                createdAt:
                    description: 登録日時
                    type: integer
                freeShippingRates:
                    description: 送料無料になる金額(税込)
                    type: integer
                hasFreeShipping:
                    description: 送料無料オプションの有無
                    type: boolean
                id:
                    description: 配送設定ID
                    type: string
                isDefault:
                    description: デフォルト設定フラグ
                    type: boolean
                name:
                    description: 配送設定名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ShippingRate:
            properties:
                name:
                    description: 配送料金設定名
                    type: string
                number:
                    description: No.
                    type: integer
                prefectureCodes:
                    description: 対象都道府県一覧
                    items:
                        type: integer
                    type: array
                    uniqueItems: false
                price:
                    description: 配送料金(税込)
                    type: integer
            type: object
        response.ShippingResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                shipping:
                    $ref: '#/components/schemas/response.Shipping'
            type: object
        response.ShippingsResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                shippings:
                    description: 配送設定一覧
                    items:
                        $ref: '#/components/schemas/response.Shipping'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
            type: object
        response.Shop:
            description: 店舗情報
            properties:
                businessDays:
                    description: 営業曜日(発送可能日)
                    items:
                        $ref: '#/components/schemas/time.Weekday'
                    type: array
                    uniqueItems: false
                coordinatorId:
                    description: コーディネータID
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: 店舗ID
                    type: string
                name:
                    description: 店舗名
                    type: string
                producerIds:
                    description: 生産者ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                productTypeIds:
                    description: 取り扱い品目一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.ShopResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                producers:
                    description: 生産者一覧
                    items:
                        $ref: '#/components/schemas/response.Producer'
                    type: array
                    uniqueItems: false
                productTypes:
                    description: 品目一覧
                    items:
                        $ref: '#/components/schemas/response.ProductType'
                    type: array
                    uniqueItems: false
                shop:
                    $ref: '#/components/schemas/response.Shop'
            type: object
        response.Spot:
            description: スポット情報
            properties:
                approved:
                    description: 承認フラグ
                    type: boolean
                createdAt:
                    description: 登録日時
                    type: integer
                description:
                    description: 説明
                    type: string
                id:
                    description: スポットID
                    type: string
                latitude:
                    description: 座標情報:緯度
                    type: number
                longitude:
                    description: 座標情報:経度
                    type: number
                name:
                    description: スポット名
                    type: string
                spotTypeId:
                    description: スポット種別ID
                    type: string
                thumbnailUrl:
                    description: サムネイル画像URL
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
                userId:
                    description: ユーザーID
                    type: string
                userType:
                    description: 投稿者の種別
                    type: integer
            type: object
        response.SpotResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                producer:
                    $ref: '#/components/schemas/response.Producer'
                spot:
                    $ref: '#/components/schemas/response.Spot'
                spotType:
                    $ref: '#/components/schemas/response.SpotType'
                user:
                    $ref: '#/components/schemas/response.User'
            type: object
        response.SpotType:
            description: スポット種別情報
            properties:
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: スポット種別ID
                    type: string
                name:
                    description: スポット種別名
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
            type: object
        response.SpotTypeResponse:
            properties:
                spotType:
                    $ref: '#/components/schemas/response.SpotType'
            type: object
        response.SpotTypesResponse:
            properties:
                spotTypes:
                    description: 体験種別一覧
                    items:
                        $ref: '#/components/schemas/response.SpotType'
                    type: array
                    uniqueItems: false
                total:
                    description: 体験種別合計数
                    type: integer
            type: object
        response.SpotsResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                producers:
                    description: 生産者一覧
                    items:
                        $ref: '#/components/schemas/response.Producer'
                    type: array
                    uniqueItems: false
                spotTypes:
                    description: スポット種別一覧
                    items:
                        $ref: '#/components/schemas/response.SpotType'
                    type: array
                    uniqueItems: false
                spots:
                    description: スポット一覧
                    items:
                        $ref: '#/components/schemas/response.Spot'
                    type: array
                    uniqueItems: false
                total:
                    description: 合計数
                    type: integer
                users:
                    description: ユーザ一覧
                    items:
                        $ref: '#/components/schemas/response.User'
                    type: array
                    uniqueItems: false
            type: object
        response.Thread:
            description: お問い合わせ会話履歴
            properties:
                contactId:
                    description: お問い合わせID
                    type: string
                content:
                    description: 会話内容
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                id:
                    description: お問い合わせ会話履歴ID
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
                userId:
                    description: 送信者ID
                    type: string
                userType:
                    description: 送信者タイプ
                    type: integer
            type: object
        response.ThreadResponse:
            properties:
                admin:
                    $ref: '#/components/schemas/response.Admin'
                thread:
                    $ref: '#/components/schemas/response.Thread'
                user:
                    $ref: '#/components/schemas/response.User'
            type: object
        response.ThreadsResponse:
            properties:
                admins:
                    description: 送信者一覧
                    items:
                        $ref: '#/components/schemas/response.Admin'
                    type: array
                    uniqueItems: false
                threads:
                    description: お問い合わせ会話履歴一覧
                    items:
                        $ref: '#/components/schemas/response.Thread'
                    type: array
                    uniqueItems: false
                total:
                    description: 会話履歴合計
                    type: integer
                users:
                    description: 送信者一覧
                    items:
                        $ref: '#/components/schemas/response.User'
                    type: array
                    uniqueItems: false
            type: object
        response.TopOrderPayment:
            properties:
                orderCount:
                    description: 注文数
                    type: integer
                paymentMethodType:
                    description: 支払い方法
                    type: integer
                rate:
                    description: 割合（支払い方法別注文数 / 注文数）
                    type: number
                salesTotal:
                    description: 売上合計
                    type: integer
                userCount:
                    description: ユーザー数
                    type: integer
            type: object
        response.TopOrderSalesTrend:
            properties:
                period:
                    description: 期間
                    type: string
                salesTotal:
                    description: 売上合計
                    type: integer
            type: object
        response.TopOrderValue:
            description: 注文数
            properties:
                comparison:
                    description: 比較値（％：前日比など）
                    type: number
                value:
                    description: 値
                    type: integer
            type: object
        response.TopOrdersResponse:
            properties:
                endAt:
                    description: 終了日時
                    type: integer
                orders:
                    $ref: '#/components/schemas/response.TopOrderValue'
                payments:
                    description: 支払い方法別情報
                    items:
                        $ref: '#/components/schemas/response.TopOrderPayment'
                    type: array
                    uniqueItems: false
                periodType:
                    description: 期間種別
                    type: string
                sales:
                    $ref: '#/components/schemas/response.TopOrderValue'
                salesTrends:
                    description: 売上推移（グラフ描画用）
                    items:
                        $ref: '#/components/schemas/response.TopOrderSalesTrend'
                    type: array
                    uniqueItems: false
                startAt:
                    description: 開始日時
                    type: integer
                users:
                    $ref: '#/components/schemas/response.TopOrderValue'
            type: object
        response.UploadStateResponse:
            properties:
                status:
                    description: アップロード結果
                    type: integer
                url:
                    description: 参照先URL
                    type: string
            type: object
        response.UploadURLResponse:
            properties:
                key:
                    description: アップロード後の状態参照用キー
                    type: string
                url:
                    description: アップロード用の署名付きURL
                    type: string
            type: object
        response.User:
            description: ユーザー情報
            properties:
                accountId:
                    description: ユーザー名（検索用）
                    type: string
                createdAt:
                    description: 登録日時
                    type: integer
                email:
                    description: メールアドレス
                    type: string
                firstname:
                    description: 氏名（名）
                    type: string
                firstnameKana:
                    description: 氏名(名:かな)
                    type: string
                id:
                    description: 購入者ID
                    type: string
                lastname:
                    description: 氏名（姓）
                    type: string
                lastnameKana:
                    description: 氏名(姓:かな)
                    type: string
                phoneNumber:
                    description: 電話番号
                    type: string
                registered:
                    description: 会員登録フラグ
                    type: boolean
                status:
                    description: 購入者ステータス
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                updateAt:
                    description: 更新日時
                    type: integer
                username:
                    description: ユーザー名（表示名）
                    type: string
            type: object
        response.UserOrder:
            properties:
                orderId:
                    description: 注文情報ID
                    type: string
                orderedAt:
                    description: 注文日時
                    type: integer
                paidAt:
                    description: 支払日時
                    type: integer
                status:
                    description: 支払い状況
                    type: integer
                subtotal:
                    description: 商品合計金額
                    type: integer
                total:
                    description: 支払い合計金額
                    type: integer
            type: object
        response.UserOrdersResponse:
            properties:
                orderTotalCount:
                    description: 注文合計回数
                    type: integer
                orders:
                    description: 注文履歴一覧
                    items:
                        $ref: '#/components/schemas/response.UserOrder'
                    type: array
                    uniqueItems: false
                paymentTotalAmount:
                    description: 支払い合計金額
                    type: integer
                paymentTotalCount:
                    description: 支払い合計回数
                    type: integer
                productTotalAmount:
                    description: 購入商品合計金額
                    type: integer
            type: object
        response.UserResponse:
            properties:
                address:
                    $ref: '#/components/schemas/response.Address'
                user:
                    $ref: '#/components/schemas/response.User'
            type: object
        response.UserToList:
            properties:
                city:
                    description: 市区町村
                    type: string
                email:
                    description: メールアドレス
                    type: string
                firstname:
                    description: 名
                    type: string
                id:
                    description: 購入者ID
                    type: string
                lastname:
                    description: 姓
                    type: string
                paymentTotalCount:
                    description: 支払い回数
                    type: integer
                prefectureCode:
                    description: 都道府県
                    type: integer
                registered:
                    description: 会員登録フラグ
                    type: boolean
                status:
                    description: 購入者ステータス
                    type: integer
            type: object
        response.UsersResponse:
            properties:
                total:
                    description: 購入者合計数
                    type: integer
                users:
                    description: 購入者一覧
                    items:
                        $ref: '#/components/schemas/response.UserToList'
                    type: array
                    uniqueItems: false
            type: object
        response.Video:
            description: オンデマンド動画情報
            properties:
                coordinatorId:
                    description: コーディネータID
                    type: string
                createdAt:
                    description: 作成日時
                    type: integer
                description:
                    description: 説明
                    type: string
                displayExperience:
                    description: 体験への表示設定
                    type: boolean
                displayProduct:
                    description: 商品への表示設定
                    type: boolean
                experienceIds:
                    description: 体験ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                id:
                    description: オンデマンド動画ID
                    type: string
                limited:
                    description: 限定公開設定
                    type: boolean
                productIds:
                    description: 商品ID一覧
                    items:
                        type: string
                    type: array
                    uniqueItems: false
                public:
                    description: 公開設定
                    type: boolean
                publishedAt:
                    description: 公開日時
                    type: integer
                status:
                    description: 配信状況
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                title:
                    description: タイトル
                    type: string
                updatedAt:
                    description: 更新日時
                    type: integer
                videoUrl:
                    description: 動画URL
                    type: string
            type: object
        response.VideoComment:
            properties:
                accountId:
                    description: アカウントID
                    type: string
                comment:
                    description: コメント
                    type: string
                disabled:
                    description: コメント無効フラグ
                    type: boolean
                id:
                    description: コメントID
                    type: string
                publishedAt:
                    description: 投稿日時
                    type: integer
                thumbnailUrl:
                    description: サムネイルURL
                    type: string
                userId:
                    description: ユーザーID
                    type: string
                username:
                    description: ユーザー名
                    type: string
            type: object
        response.VideoCommentsResponse:
            properties:
                comments:
                    description: コメント一覧
                    items:
                        $ref: '#/components/schemas/response.VideoComment'
                    type: array
                    uniqueItems: false
                nextToken:
                    description: 次の取得開始位置
                    type: string
            type: object
        response.VideoResponse:
            properties:
                coordinator:
                    $ref: '#/components/schemas/response.Coordinator'
                experiences:
                    description: 体験一覧
                    items:
                        $ref: '#/components/schemas/response.Experience'
                    type: array
                    uniqueItems: false
                products:
                    description: 商品一覧
                    items:
                        $ref: '#/components/schemas/response.Product'
                    type: array
                    uniqueItems: false
                video:
                    $ref: '#/components/schemas/response.Video'
            type: object
        response.VideoViewerLog:
            properties:
                endAt:
                    description: 集計終了日時
                    type: integer
                startAt:
                    description: 集計開始日時
                    type: integer
                total:
                    description: 合計視聴者数
                    type: integer
                videoId:
                    description: オンデマンド動画ID
                    type: string
            type: object
        response.VideosResponse:
            properties:
                coordinators:
                    description: コーディネータ一覧
                    items:
                        $ref: '#/components/schemas/response.Coordinator'
                    type: array
                    uniqueItems: false
                experiences:
                    description: 体験一覧
                    items:
                        $ref: '#/components/schemas/response.Experience'
                    type: array
                    uniqueItems: false
                products:
                    description: 商品一覧
                    items:
                        $ref: '#/components/schemas/response.Product'
                    type: array
                    uniqueItems: false
                total:
                    description: オンデマンド動画合計数
                    type: integer
                videos:
                    description: オンデマンド動画一覧
                    items:
                        $ref: '#/components/schemas/response.Video'
                    type: array
                    uniqueItems: false
            type: object
        time.Weekday:
            type: integer
            x-enum-varnames:
                - Sunday
                - Monday
                - Tuesday
                - Wednesday
                - Thursday
                - Friday
                - Saturday
                - Sunday
                - Monday
                - Tuesday
                - Wednesday
                - Thursday
                - Friday
                - Saturday
                - Sunday
                - Monday
                - Tuesday
                - Wednesday
                - Thursday
                - Friday
                - Saturday
        util.ErrorResponse:
            properties:
                detail:
                    description: エラー詳細
                    type: string
                message:
                    description: エラー概要
                    type: string
                status:
                    description: ステータスコード
                    type: integer
            type: object
    securitySchemes:
        bearerauth:
            bearerFormat: JWT
            scheme: bearer
            type: http
        cookieauth:
            in: cookie
            name: session_id
            type: apiKey
externalDocs:
    description: ""
    url: ""
info:
    description: 管理者向けのふるマルAPIです。
    title: ふるマル API - 管理者向け
    version: ""
openapi: 3.1.0
paths:
    /v1/administrators:
        get:
            description: システム管理者の一覧を取得します。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AdministratorsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: システム管理者一覧取得
            tags:
                - Administrator
        post:
            description: 新しいシステム管理者を登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateAdministratorRequest'
                description: システム管理者情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AdministratorResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在するメールアドレス
            security:
                - bearerauth: []
            summary: システム管理者登録
            tags:
                - Administrator
    /v1/administrators/{adminId}:
        delete:
            description: システム管理者を削除します。
            parameters:
                - description: システム管理者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: adminId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: システム管理者が存在しない
            security:
                - bearerauth: []
            summary: システム管理者退会
            tags:
                - Administrator
        get:
            description: システム管理者の詳細情報を取得します。
            parameters:
                - description: 管理者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: adminId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AdministratorResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: システム管理者が存在しない
            security:
                - bearerauth: []
            summary: システム管理者取得
            tags:
                - Administrator
        patch:
            description: システム管理者の情報を更新します。
            parameters:
                - description: システム管理者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: adminId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateAdministratorRequest'
                description: システム管理者情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: システム管理者が存在しない
            security:
                - bearerauth: []
            summary: システム管理者更新
            tags:
                - Administrator
    /v1/administrators/{adminId}/email:
        patch:
            description: システム管理者のメールアドレスを更新します。
            parameters:
                - description: システム管理者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: adminId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateAdministratorEmailRequest'
                description: メールアドレス
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 存在しないシステム管理者
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在するメールアドレス
            security:
                - bearerauth: []
            summary: システム管理者メールアドレス更新
            tags:
                - Administrator
    /v1/administrators/{adminId}/password:
        patch:
            description: システム管理者のパスワードをランダムに生成して更新します。
            parameters:
                - description: システム管理者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: adminId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: システム管理者が存在しない
            security:
                - bearerauth: []
            summary: システム管理者パスワード更新(ランダム生成)
            tags:
                - Administrator
    /v1/auth:
        delete:
            description: サインアウトします。
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: サインアウト
            tags:
                - Auth
        get:
            description: 認証トークンを検証し、認証情報を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: トークン検証
            tags:
                - Auth
        post:
            description: メールアドレスとパスワードでサインインします。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.SignInRequest'
                description: サインイン
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            summary: サインイン
            tags:
                - Auth
    /v1/auth/coordinator:
        get:
            description: ログイン中のコーディネータの詳細情報を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.CoordinatorResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: コーディネータが存在しない
            security:
                - bearerauth: []
            summary: 自身のコーディネータ情報取得
            tags:
                - Auth
        patch:
            description: ログイン中のコーディネータの情報を更新します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateCoordinatorRequest'
                description: コーディネータ情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 自身のコーディネータ情報更新
            tags:
                - Auth
    /v1/auth/coordinator/shippings:
        get:
            description: ログイン中のコーディネータの配送設定を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ShippingResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 自身の配送設定取得
            tags:
                - Auth
        patch:
            description: ログイン中のコーディネータの配送設定を更新します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpsertShippingRequest'
                description: 配送設定
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 自身の配送設定更新
            tags:
                - Auth
    /v1/auth/device:
        post:
            description: プッシュ通知用のデバイストークンを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.RegisterAuthDeviceRequest'
                description: デバイストークン
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: デバイストークン登録
            tags:
                - Auth
    /v1/auth/email:
        patch:
            description: ログイン中のユーザーのメールアドレスを更新します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateAuthEmailRequest'
                description: メールアドレス
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 現在すでに存在するメールアドレス
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 変更後のメールアドレスが変更前と同じ
            security:
                - bearerauth: []
            summary: メールアドレス更新
            tags:
                - Auth
    /v1/auth/email/verified:
        post:
            description: メールアドレス更新用の検証コードを確認します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.VerifyAuthEmailRequest'
                description: 検証コード
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            summary: メールアドレス更新 - コード検証
            tags:
                - Auth
    /v1/auth/forgot-password:
        post:
            description: パスワードリセット用のメールを送信します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ForgotAuthPasswordRequest'
                description: メールアドレス
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            summary: パスワードリセット
            tags:
                - Auth
    /v1/auth/forgot-password/verified:
        post:
            description: パスワードリセット用の検証コードを確認し、新しいパスワードを設定します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ResetAuthPasswordRequest'
                description: パスワードリセット
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            summary: パスワードリセット - コード検証
            tags:
                - Auth
    /v1/auth/google:
        get:
            description: Googleアカウント連携用の認証URLを発行します。
            parameters:
                - description: CSRF対策用のstate
                  example: '"xxxxxxxxxx"'
                  in: query
                  name: state
                  required: true
                  schema:
                    type: string
                - description: 認証後のリダイレクト先（変更したいときのみ指定）
                  example: '"https://example.com"'
                  in: query
                  name: redirectUri
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthGoogleAccountResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに連携済み
            security:
                - bearerauth: []
            summary: Google認証用URLの発行
            tags:
                - Auth
        post:
            description: Googleアカウントを連携します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ConnectGoogleAccountRequest'
                description: 連携リクエスト
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: Googleアカウントの連携
            tags:
                - Auth
    /v1/auth/line:
        get:
            description: LINEアカウント連携用の認証URLを発行します。
            parameters:
                - description: CSRF対策用のstate
                  example: '"xxxxxxxxxx"'
                  in: query
                  name: state
                  required: true
                  schema:
                    type: string
                - description: 認証後のリダイレクト先（変更したいときのみ指定）
                  example: '"https://example.com"'
                  in: query
                  name: redirectUri
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthLINEAccountResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに連携済み
            security:
                - bearerauth: []
            summary: LINE認証用URLの発行
            tags:
                - Auth
        post:
            description: LINEアカウントを連携します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ConnectLINEAccountRequest'
                description: 連携リクエスト
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: LINEアカウントの連携
            tags:
                - Auth
    /v1/auth/password:
        patch:
            description: ログイン中のユーザーのパスワードを更新します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateAuthPasswordRequest'
                description: パスワード
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: パスワード更新
            tags:
                - Auth
    /v1/auth/providers:
        get:
            description: 連携済みの外部認証プロバイダ一覧を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthProvidersResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: 認証済みプロバイダ一覧の取得
            tags:
                - Auth
    /v1/auth/refresh-token:
        post:
            description: リフレッシュトークンを使用してアクセストークンを更新します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.RefreshAuthTokenRequest'
                description: トークン更新
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            summary: トークン更新
            tags:
                - Auth
    /v1/auth/user:
        get:
            description: ログイン中の管理者情報を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthUserResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 認証エラー
            security:
                - bearerauth: []
            summary: 管理者情報取得
            tags:
                - Auth
    /v1/categories:
        get:
            description: 商品種別の一覧を取得します。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 商品種別名(あいまい検索)(32文字以内)
                  example: '"野菜"'
                  in: query
                  name: name
                  schema:
                    type: string
                - description: ソート(name,-name)
                  example: '"-name"'
                  in: query
                  name: orders
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.CategoriesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 商品種別一覧取得
            tags:
                - Category
        post:
            description: 新しい商品種別を登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateCategoryRequest'
                description: 商品種別情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.CategoryResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する商品種別名
            security:
                - bearerauth: []
            summary: 商品種別登録
            tags:
                - Category
    /v1/categories/{categoryId}:
        delete:
            description: 商品種別を削除します。
            parameters:
                - description: 商品種別ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: categoryId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 商品種別が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 品目側で紐づいているため削除不可
            security:
                - bearerauth: []
            summary: 商品種別削除
            tags:
                - Category
        patch:
            description: 商品種別の情報を更新します。
            parameters:
                - description: 商品種別ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: categoryId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateCategoryRequest'
                description: 商品種別情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 商品種別が存在しない
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する商品種別名
            security:
                - bearerauth: []
            summary: 商品種別更新
            tags:
                - Category
    /v1/categories/{categoryId}/product-types:
        get:
            description: 品目の一覧を取得します。商品種別ID指定時はその種別の品目のみ取得します。
            parameters:
                - description: 商品種別ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: categoryId
                  required: true
                  schema:
                    type: string
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 品目名(あいまい検索)
                  example: '"いも"'
                  in: query
                  name: name
                  schema:
                    type: string
                - description: ソート(name,-name)
                  example: '"-name"'
                  in: query
                  name: orders
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProductTypesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 品目一覧取得
            tags:
                - ProductType
        post:
            description: 新しい品目を登録します。
            parameters:
                - description: 商品種別ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: categoryId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateProductTypeRequest'
                description: 品目情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProductTypeResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する品目名
            security:
                - bearerauth: []
            summary: 品目登録
            tags:
                - ProductType
    /v1/categories/{categoryId}/product-types/{productTypeId}:
        delete:
            description: 品目を削除します。
            parameters:
                - description: 商品種別ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: categoryId
                  required: true
                  schema:
                    type: string
                - description: 品目ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: productTypeId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 品目が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 商品側で紐づいているため削除不可
            security:
                - bearerauth: []
            summary: 品目削除
            tags:
                - ProductType
        patch:
            description: 品目の情報を更新します。
            parameters:
                - description: 商品種別ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: categoryId
                  required: true
                  schema:
                    type: string
                - description: 品目ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: productTypeId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateProductTypeRequest'
                description: 品目情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 品目が存在しない
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する品目名
            security:
                - bearerauth: []
            summary: 品目更新
            tags:
                - ProductType
    /v1/contact-categories:
        get:
            description: お問い合わせカテゴリの一覧を取得します。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ContactCategoriesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: お問い合わせカテゴリ一覧取得
            tags:
                - ContactCategory
    /v1/contact-categories/{contactCategoryId}:
        get:
            description: 指定されたお問い合わせカテゴリの詳細情報を取得します。
            parameters:
                - description: お問い合わせカテゴリID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactCategoryId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ContactCategoryResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: お問い合わせカテゴリが存在しない
            security:
                - bearerauth: []
            summary: お問い合わせカテゴリ取得
            tags:
                - ContactCategory
    /v1/contact-reads:
        post:
            description: お問い合わせの既読状態を登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateContactReadRequest'
                description: 既読情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ContactReadResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: お問い合わせ既読登録
            tags:
                - ContactRead
    /v1/contacts:
        get:
            description: お問い合わせの一覧を取得します。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ContactsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: お問い合わせ一覧取得
            tags:
                - Contact
        post:
            description: 新しいお問い合わせを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateContactRequest'
                description: お問い合わせ情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ContactResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: お問い合わせの登録権限がない
            security:
                - bearerauth: []
            summary: お問い合わせ登録
            tags:
                - Contact
    /v1/contacts/{contactId}:
        delete:
            description: お問い合わせを削除します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: お問い合わせが存在しない
            security:
                - bearerauth: []
            summary: お問い合わせ削除
            tags:
                - Contact
        get:
            description: 指定されたお問い合わせの詳細情報を取得します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ContactResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: お問い合わせが存在しない
            security:
                - bearerauth: []
            summary: お問い合わせ取得
            tags:
                - Contact
        patch:
            description: お問い合わせの情報を更新します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateContactRequest'
                description: お問い合わせ情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: お問い合わせが存在しない
            security:
                - bearerauth: []
            summary: お問い合わせ更新
            tags:
                - Contact
    /v1/contacts/{contactId}/threads:
        get:
            description: 指定されたお問い合わせのスレッド一覧を取得します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ThreadsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: お問い合わせスレッド一覧取得
            tags:
                - Thread
        post:
            description: 新しいスレッドを登録します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateThreadRequest'
                description: スレッド情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ThreadResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: スレッド登録
            tags:
                - Thread
    /v1/contacts/{contactId}/threads/{threadId}:
        delete:
            description: スレッドを削除します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
                - description: スレッドID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: threadId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スレッドが存在しない
            security:
                - bearerauth: []
            summary: スレッド削除
            tags:
                - Thread
        get:
            description: 指定されたスレッドの詳細情報を取得します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
                - description: スレッドID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: threadId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ThreadResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スレッドが存在しない
            security:
                - bearerauth: []
            summary: スレッド取得
            tags:
                - Thread
        patch:
            description: スレッドの情報を更新します。
            parameters:
                - description: お問い合わせID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: contactId
                  required: true
                  schema:
                    type: string
                - description: スレッドID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: threadId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateThreadRequest'
                description: スレッド情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スレッドが存在しない
            security:
                - bearerauth: []
            summary: スレッド更新
            tags:
                - Thread
    /v1/coordinators:
        get:
            description: コーディネータの一覧を取得します。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: コーディネータ名(あいまい検索)(64文字以内)
                  example: '"&.コーディネータ"'
                  in: query
                  name: username
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.CoordinatorsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: コーディネータ一覧取得
            tags:
                - Coordinator
    /v1/coordinators/{coordinatorId}/producers:
        get:
            description: 指定されたコーディネーターに関連する生産者の一覧を取得します。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProducersResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
            security:
                - bearerauth: []
            summary: 関連生産者一覧取得
            tags:
                - RelatedProducer
    /v1/coordinators/{coordinatorId}/shippings:
        get:
            description: 指定されたコーディネーターの配送設定一覧を取得します。ページネーションに対応しています。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ShippingsResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
            security:
                - bearerauth: []
            summary: 配送設定一覧取得
            tags:
                - Shipping
        patch:
            description: Deprecated.コーディネータの配送設定を更新します。
            parameters:
                - description: コーディネータID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpsertShippingRequest'
                description: 配送設定情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
            security:
                - bearerauth: []
            summary: 配送設定更新
            tags:
                - Shipping
        post:
            description: 新しい配送設定を登録します。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateShippingRequest'
                description: 配送設定情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ShippingResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
            security:
                - bearerauth: []
            summary: 配送設定登録
            tags:
                - Shipping
    /v1/coordinators/{coordinatorId}/shippings/-/activation:
        get:
            description: Deprecated.指定されたコーディネーターのアクティブ配送設定を取得します。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ShippingResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
            security:
                - bearerauth: []
            summary: アクティブ配送設定取得
            tags:
                - Shipping
    /v1/coordinators/{coordinatorId}/shippings/{shippingId}:
        delete:
            description: 配送設定を削除します。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
                - description: 配送設定ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: shippingId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 配送設定が存在しない
            security:
                - bearerauth: []
            summary: 配送設定削除
            tags:
                - Shipping
        get:
            description: 指定された配送設定の詳細情報を取得します。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
                - description: 配送設定ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: shippingId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ShippingResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 配送設定が存在しない
            security:
                - bearerauth: []
            summary: 配送設定取得
            tags:
                - Shipping
        patch:
            description: 配送設定の情報を更新します。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
                - description: 配送設定ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: shippingId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateShippingRequest'
                description: 配送設定情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 配送設定が存在しない
            security:
                - bearerauth: []
            summary: 配送設定更新
            tags:
                - Shipping
    /v1/coordinators/{coordinatorId}/shippings/{shippingId}/activation:
        patch:
            description: 指定した配送設定をアクティブに設定します。
            parameters:
                - description: コーディネーターID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: coordinatorId
                  required: true
                  schema:
                    type: string
                - description: 配送設定ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: shippingId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アクセス権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 配送設定が存在しない
            security:
                - bearerauth: []
            summary: アクティブ配送設定更新
            tags:
                - Shipping
    /v1/experience-types:
        get:
            description: 体験タイプの一覧を取得します。名前でのフィルタリングが可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 体験タイプ名(あいまい検索)
                  example: '"農業"'
                  in: query
                  name: name
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ExperienceTypesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 体験タイプ一覧取得
            tags:
                - ExperienceType
        post:
            description: 新しい体験タイプを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateExperienceTypeRequest'
                description: 体験タイプ情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ExperienceTypeResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する体験タイプ名
            security:
                - bearerauth: []
            summary: 体験タイプ登録
            tags:
                - ExperienceType
    /v1/experience-types/{experienceTypeId}:
        delete:
            description: 体験タイプを削除します。
            parameters:
                - description: 体験タイプID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: experienceTypeId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験タイプが存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験側で紐づいているため削除不可
            security:
                - bearerauth: []
            summary: 体験タイプ削除
            tags:
                - ExperienceType
        patch:
            description: 体験タイプの情報を更新します。
            parameters:
                - description: 体験タイプID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: experienceTypeId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateExperienceTypeRequest'
                description: 体験タイプ情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験タイプが存在しない
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する体験タイプ名
            security:
                - bearerauth: []
            summary: 体験タイプ更新
            tags:
                - ExperienceType
    /v1/experiences:
        get:
            description: 体験の一覧を取得します。店舗、生産者、名前でのフィルタリングが可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 体験名(あいまい検索)
                  example: '"農業体験"'
                  in: query
                  name: name
                  schema:
                    type: string
                - description: 生産者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: query
                  name: producerId
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ExperiencesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 体験一覧取得
            tags:
                - Experience
        post:
            description: 新しい体験を登録します。コーディネーターは管理店舗の生産者の体験のみ登録可能です。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateExperienceRequest'
                description: 体験情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ExperienceResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験の登録権限がない
            security:
                - bearerauth: []
            summary: 体験登録
            tags:
                - Experience
    /v1/experiences/{experienceId}:
        delete:
            description: 体験を削除します。
            parameters:
                - description: 体験ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: experienceId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験の削除権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験が存在しない
            security:
                - bearerauth: []
            summary: 体験削除
            tags:
                - Experience
        get:
            description: 指定された体験の詳細情報を取得します。
            parameters:
                - description: 体験ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: experienceId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ExperienceResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験の参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験が存在しない
            security:
                - bearerauth: []
            summary: 体験取得
            tags:
                - Experience
        patch:
            description: 体験の情報を更新します。
            parameters:
                - description: 体験ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: experienceId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateExperienceRequest'
                description: 体験情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験の更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 体験が存在しない
            security:
                - bearerauth: []
            summary: 体験更新
            tags:
                - Experience
    /v1/guests/schedules/-/broadcasts:
        get:
            description: セッションIDを使用してゲスト向けのライブ配信情報を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.GuestBroadcastResponse'
                    description: OK
            security:
                - cookieauth: []
            summary: ゲスト用ライブ配信情報取得
            tags:
                - Guest
                - Broadcast
    /v1/guests/schedules/-/broadcasts/youtube:
        post:
            description: Youtube側でライブ配信を作成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateYoutubeBroadcastRequest'
                description: Youtube配信設定
                required: true
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: Youtube APIの認証エラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: Youtube APIの権限エラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信前でない
            security:
                - cookieauth: []
            summary: マルシェライブ配信のYoutube連携
            tags:
                - Guest
                - Broadcast
    /v1/guests/schedules/-/broadcasts/youtube/auth/complete:
        post:
            description: Youtube認証完了後のコールバック処理を行います。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CallbackAuthYoutubeBroadcastRequest'
                description: 認証コールバック
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.GuestBroadcastResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: Youtube APIの認証エラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: Youtube APIの権限エラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
            summary: マルシェライブ配信のYoutube認証後処理
            tags:
                - Guest
                - Broadcast
    /v1/messages:
        get:
            description: 管理者あてのメッセージ一覧を取得します。ソート順指定が可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: ソート(type,-type,read,-read,receivedAt,-receivedAt)
                  example: '"-receivedAt"'
                  in: query
                  name: orders
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.MessagesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: メッセージ一覧取得
            tags:
                - Message
    /v1/messages/{messageId}:
        get:
            description: 指定されたメッセージの詳細情報を取得します。
            parameters:
                - description: メッセージID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: messageId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.MessageResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: メッセージが存在しない
            security:
                - bearerauth: []
            summary: メッセージ取得
            tags:
                - Message
    /v1/notifications:
        get:
            description: 通知の一覧を取得します。期間や配信日時でのフィルタリング、ソート順指定が可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 検索開始日時（unixtime）
                  in: query
                  name: since
                  schema:
                    type: integer
                - description: 検索終了日時（unixtime）
                  in: query
                  name: until
                  schema:
                    type: integer
                - description: ソート(title,-title,publishedAt,-publishedAt)
                  example: '"-publishedAt"'
                  in: query
                  name: orders
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.NotificationsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 通知一覧取得
            tags:
                - Notification
        post:
            description: 新しい通知を登録します。配信対象、配信日時などを指定できます。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateNotificationRequest'
                description: 通知情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.NotificationResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 通知登録
            tags:
                - Notification
    /v1/notifications/{notificationId}:
        delete:
            description: 通知を削除します。
            parameters:
                - description: 通知ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: notificationId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 通知が存在しない
            security:
                - bearerauth: []
            summary: 通知削除
            tags:
                - Notification
        get:
            description: 指定された通知の詳細情報を取得します。
            parameters:
                - description: 通知ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: notificationId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.NotificationResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 通知が存在しない
            security:
                - bearerauth: []
            summary: 通知取得
            tags:
                - Notification
        patch:
            description: 通知の情報を更新します。
            parameters:
                - description: 通知ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: notificationId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateNotificationRequest'
                description: 通知情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 通知が存在しない
            security:
                - bearerauth: []
            summary: 通知更新
            tags:
                - Notification
    /v1/orders:
        get:
            description: 注文の一覧を取得します。コーディネータは自分の店舗の注文のみ取得できます。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 注文ステータスフィルタ
                  in: query
                  name: statuses
                  schema:
                    items:
                        type: integer
                    type: array
                  style: form
                - description: 注文タイプフィルタ
                  in: query
                  name: types
                  schema:
                    items:
                        type: integer
                    type: array
                  style: form
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.OrdersResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 注文一覧取得
            tags:
                - Order
    /v1/orders/-/export:
        post:
            description: 注文履歴をCSV形式で出力します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ExportOrdersRequest'
                description: 注文履歴のCSV出力
                required: true
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 操作の権限がない
            security:
                - bearerauth: []
            summary: 注文履歴のCSV出力
            tags:
                - Order
    /v1/orders/{orderId}:
        get:
            description: 指定された注文の詳細情報を取得します。
            parameters:
                - description: 注文ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: orderId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.OrderResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文が存在しない
            security:
                - bearerauth: []
            summary: 注文取得
            tags:
                - Order
    /v1/orders/{orderId}/cancel:
        post:
            description: 注文をキャンセルします。
            parameters:
                - description: 注文ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: orderId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文のキャンセル権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文が存在しない
            security:
                - bearerauth: []
            summary: 注文キャンセル
            tags:
                - Order
    /v1/orders/{orderId}/capture:
        post:
            description: 注文を確定します。
            parameters:
                - description: 注文ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: orderId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文の確定権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文が存在しない
            security:
                - bearerauth: []
            summary: 注文確定
            tags:
                - Order
    /v1/orders/{orderId}/complete:
        post:
            description: 注文対応を完了します。
            parameters:
                - description: 注文ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: orderId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CompleteOrderRequest'
                description: 注文対応完了
                required: true
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 操作の権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文が存在しない
            security:
                - bearerauth: []
            summary: 注文対応完了
            tags:
                - Order
    /v1/orders/{orderId}/draft:
        post:
            description: 注文の下書きを保存します。
            parameters:
                - description: 注文ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: orderId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.DraftOrderRequest'
                description: 注文下書き保存
                required: true
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 操作の権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文が存在しない
            security:
                - bearerauth: []
            summary: 注文下書き保存
            tags:
                - Order
    /v1/orders/{orderId}/refund:
        post:
            description: 注文の返金を依頼します。
            parameters:
                - description: 注文ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: orderId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.RefundOrderRequest'
                description: 注文の返金依頼
                required: true
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 操作の権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 注文が存在しない
            security:
                - bearerauth: []
            summary: 注文の返金依頼
            tags:
                - Order
    /v1/payment-systems:
        get:
            description: 決済手段毎のシステム状態一覧を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.PaymentSystemsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 決済システム一覧取得
            tags:
                - PaymentSystem
    /v1/payment-systems/{methodType}:
        patch:
            description: 指定された決済手段のシステム状態を更新します。
            parameters:
                - description: 決済手段タイプ
                  example: 1
                  in: path
                  name: methodType
                  required: true
                  schema:
                    type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdatePaymentSystemRequest'
                description: 決済システム情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 決済システム更新
            tags:
                - PaymentSystem
    /v1/postal-codes/{postalCode}:
        get:
            description: 指定された郵便番号から住所情報を検索します。
            parameters:
                - description: 郵便番号
                  example: '"1000001"'
                  in: path
                  name: postalCode
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.PostalCodeResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 郵便番号が存在しない
            security:
                - bearerauth: []
            summary: 郵便番号検索
            tags:
                - PostalCode
    /v1/producers:
        get:
            description: 生産者の一覧を取得します。コーディネーターは管理店舗の生産者のみ取得可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 生産者名(あいまい検索)
                  example: '"田中"'
                  in: query
                  name: username
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProducersResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 生産者一覧取得
            tags:
                - Producer
        post:
            description: 新しい生産者を登録します。コーディネーターは自身が管理する店舗の生産者のみ登録可能です。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateProducerRequest'
                description: 生産者情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProducerResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 生産者の登録権限がない
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在するメールアドレス
            security:
                - bearerauth: []
            summary: 生産者登録
            tags:
                - Producer
    /v1/producers/{producerId}:
        delete:
            description: 生産者を削除します。
            parameters:
                - description: 生産者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: producerId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 生産者の削除権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 生産者が存在しない
            security:
                - bearerauth: []
            summary: 生産者削除
            tags:
                - Producer
        get:
            description: 指定された生産者の詳細情報を取得します。
            parameters:
                - description: 生産者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: producerId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProducerResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 生産者が存在しない
            security:
                - bearerauth: []
            summary: 生産者取得
            tags:
                - Producer
        patch:
            description: 生産者の情報を更新します。
            parameters:
                - description: 生産者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: producerId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateProducerRequest'
                description: 生産者情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 生産者の更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 生産者が存在しない
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在するメールアドレス
            security:
                - bearerauth: []
            summary: 生産者更新
            tags:
                - Producer
    /v1/product-tags:
        get:
            description: 商品タグの一覧を取得します。名前でのフィルタリング、ソート順指定が可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 商品タグ名(あいまい検索)
                  example: '"有機"'
                  in: query
                  name: name
                  schema:
                    type: string
                - description: ソート(name,-name)
                  example: '"-name"'
                  in: query
                  name: orders
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProductTagsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 商品タグ一覧取得
            tags:
                - ProductTag
        post:
            description: 新しい商品タグを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateProductTagRequest'
                description: 商品タグ情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProductTagResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する商品タグ名
            security:
                - bearerauth: []
            summary: 商品タグ登録
            tags:
                - ProductTag
    /v1/product-tags/{productTagId}:
        delete:
            description: 商品タグを削除します。
            parameters:
                - description: 商品タグID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: productTagId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 商品タグが存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 商品側で紐づいているため削除不可
            security:
                - bearerauth: []
            summary: 商品タグ削除
            tags:
                - ProductTag
        patch:
            description: 商品タグの情報を更新します。
            parameters:
                - description: 商品タグID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: productTagId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateProductTagRequest'
                description: 商品タグ情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 商品タグが存在しない
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在する商品タグ名
            security:
                - bearerauth: []
            summary: 商品タグ更新
            tags:
                - ProductTag
    /v1/products:
        get:
            description: 商品の一覧を取得します。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 商品名(あいまい検索)
                  example: '"新じゃがいも"'
                  in: query
                  name: name
                  schema:
                    type: string
                - description: 生産者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: query
                  name: producerId
                  schema:
                    type: string
                - description: ソート
                  example: '"-updatedAt"'
                  in: query
                  name: orders
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProductsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 商品一覧取得
            tags:
                - Product
        post:
            description: 新しい商品を登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateProductRequest'
                description: 商品情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProductResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 商品登録
            tags:
                - Product
    /v1/products/{productId}:
        get:
            description: 指定された商品の詳細情報を取得します。
            parameters:
                - description: 商品ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: productId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ProductResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 商品が存在しない
            security:
                - bearerauth: []
            summary: 商品取得
            tags:
                - Product
    /v1/promotions:
        get:
            description: プロモーションの一覧を取得します。ページネーション、ショップ・タイトルでのフィルタリング、ソート機能に対応しています。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: ショップID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: query
                  name: shopId
                  schema:
                    type: string
                - description: プロモーションタイトル
                  example: '"春のセール"'
                  in: query
                  name: title
                  schema:
                    type: string
                - description: 全ショップ対象のプロモーションも含める
                  example: true
                  in: query
                  name: withAllTarget
                  schema:
                    default: true
                    type: boolean
                - description: ソート順序
                  example: '"title:asc,createdAt:desc"'
                  in: query
                  name: orders
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.PromotionsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: プロモーション一覧取得
            tags:
                - Promotion
        post:
            description: 新しいプロモーションを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreatePromotionRequest'
                description: プロモーション情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.PromotionResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: プロモーション登録
            tags:
                - Promotion
    /v1/promotions/{promotionId}:
        delete:
            description: プロモーションを削除します。
            parameters:
                - description: プロモーションID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: promotionId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: プロモーションの削除権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: プロモーションが存在しない
            security:
                - bearerauth: []
            summary: プロモーション削除
            tags:
                - Promotion
        get:
            description: 指定されたプロモーションの詳細情報を取得します。
            parameters:
                - description: プロモーションID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: promotionId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.PromotionResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: プロモーションの参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: プロモーションが存在しない
            security:
                - bearerauth: []
            summary: プロモーション取得
            tags:
                - Promotion
        patch:
            description: プロモーションの情報を更新します。
            parameters:
                - description: プロモーションID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: promotionId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdatePromotionRequest'
                description: プロモーション情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: プロモーションの更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: プロモーションが存在しない
            security:
                - bearerauth: []
            summary: プロモーション更新
            tags:
                - Promotion
    /v1/schedules:
        get:
            description: マルシェ開催スケジュールの一覧を取得します。ページネーションに対応しています。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.SchedulesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: マルシェ開催スケジュール一覧取得
            tags:
                - Schedule
        post:
            description: 新しいマルシェ開催スケジュールを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateScheduleRequest'
                description: スケジュール情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ScheduleResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: マルシェ開催スケジュール登録
            tags:
                - Schedule
    /v1/schedules/{scheduleId}:
        delete:
            description: マルシェ開催スケジュールを削除します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールの削除権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールが存在しない
            security:
                - bearerauth: []
            summary: マルシェ開催スケジュール削除
            tags:
                - Schedule
        get:
            description: 指定されたマルシェ開催スケジュールの詳細情報を取得します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ScheduleResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールの参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールが存在しない
            security:
                - bearerauth: []
            summary: マルシェ開催スケジュール取得
            tags:
                - Schedule
        patch:
            description: マルシェ開催スケジュールの情報を更新します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateScheduleRequest'
                description: スケジュール情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールの更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールが存在しない
            security:
                - bearerauth: []
            summary: マルシェ開催スケジュール更新
            tags:
                - Schedule
    /v1/schedules/{scheduleId}/analytics:
        get:
            description: 指定されたマルシェ開催スケジュールの視聴者分析データを取得します。集計期間と集計間隔を指定できます。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
                - description: 集計開始日時 (unixtime,未指定の場合はスケジュール開始時間)
                  in: query
                  name: startAt
                  schema:
                    type: integer
                - description: 集計終了日時 (unixtime,未指定の場合はスケジュール終了時間)
                  in: query
                  name: endAt
                  schema:
                    type: integer
                - description: 集計間隔 (未指定の場合は1分間隔)
                  example: '"minute"'
                  in: query
                  name: viewerLogInterval
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AnalyzeScheduleResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールの参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールが存在しない
            security:
                - bearerauth: []
            summary: マルシェ分析情報取得
            tags:
                - Schedule
    /v1/schedules/{scheduleId}/approval:
        patch:
            description: マルシェ開催スケジュールの承認状態を更新します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ApproveScheduleRequest'
                description: 承認情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールの承認権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールが存在しない
            security:
                - bearerauth: []
            summary: マルシェ開催スケジュール承認
            tags:
                - Schedule
    /v1/schedules/{scheduleId}/broadcasts:
        delete:
            description: ライブ配信を一時停止します。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
            security:
                - bearerauth: []
            summary: マルシェライブ配信一時停止
            tags:
                - Broadcast
        get:
            description: 指定されたスケジュールのライブ配信情報を取得します。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.BroadcastResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
            security:
                - bearerauth: []
            summary: マルシェライブ配信取得
            tags:
                - Broadcast
        post:
            description: ライブ配信の一時停止を解除します。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
            security:
                - bearerauth: []
            summary: マルシェライブ配信一時停止解除
            tags:
                - Broadcast
    /v1/schedules/{scheduleId}/broadcasts/archive-video:
        post:
            description: ライブ配信終了後にオンデマンド配信用の映像をアップロードします。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateBroadcastArchiveRequest'
                description: アーカイブURL
                required: true
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が終了していない
            security:
                - bearerauth: []
            summary: オンデマンド配信用の映像をアップロード
            tags:
                - Broadcast
    /v1/schedules/{scheduleId}/broadcasts/mp4:
        post:
            description: ライブ配信の入力ソースをMP4ファイルに切り替えます。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ActivateBroadcastMP4Request'
                description: MP4ファイルURL
                required: true
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信中でない
            security:
                - bearerauth: []
            summary: ライブ配信中の入力をMP4へ切り替え
            tags:
                - Broadcast
    /v1/schedules/{scheduleId}/broadcasts/rtmp:
        post:
            description: ライブ配信の入力ソースをRTMPに切り替えます。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信中でない
            security:
                - bearerauth: []
            summary: ライブ配信中の入力をRTMPへ切り替え
            tags:
                - Broadcast
    /v1/schedules/{scheduleId}/broadcasts/static-image:
        delete:
            description: ライブ配信中のふた絵（静止画）を無効化して通常配信に戻します。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信中でない
            security:
                - bearerauth: []
            summary: ライブ配信のふた絵を無効化
            tags:
                - Broadcast
        post:
            description: ライブ配信中にふた絵（静止画）を表示します。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信中でない
            security:
                - bearerauth: []
            summary: ライブ配信のふた絵を有効化
            tags:
                - Broadcast
    /v1/schedules/{scheduleId}/broadcasts/youtube/auth:
        post:
            description: Youtube配信用の認証URLを取得します。
            parameters:
                - description: マルシェ開催スケジュールID
                  example: '"schedule-id"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.AuthYoutubeBroadcastRequest'
                description: Youtubeハンドル
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AuthYoutubeBroadcastResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信が存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: マルシェライブ配信前でない
            security:
                - bearerauth: []
            summary: マルシェライブ配信のYoutube連携を認証
            tags:
                - Broadcast
    /v1/schedules/{scheduleId}/comments:
        get:
            description: 指定されたスケジュールのライブコメント一覧を取得します。ページネーションと期間フィルタリングに対応しています。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 検索開始日時（unixtime）
                  in: query
                  name: start
                  schema:
                    type: integer
                - description: 検索終了日時（unixtime）
                  in: query
                  name: end
                  schema:
                    type: integer
                - description: 次ページトークン
                  example: '"token123"'
                  in: query
                  name: next
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.LiveCommentsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: ライブコメント一覧取得
            tags:
                - LiveComment
    /v1/schedules/{scheduleId}/comments/{commentId}:
        patch:
            description: ライブコメントの状態（無効/有効）を更新します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
                - description: コメントID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: commentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateLiveCommentRequest'
                description: コメント情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: コメントの更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: コメントが存在しない
            security:
                - bearerauth: []
            summary: ライブコメント更新
            tags:
                - LiveComment
    /v1/schedules/{scheduleId}/lives:
        get:
            description: 指定されたスケジュールのライブ配信一覧を取得します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.LivesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: ライブ配信一覧取得
            tags:
                - Live
        post:
            description: 新しいライブ配信を登録します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateLiveRequest'
                description: ライブ配信情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.LiveResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: ライブ配信登録
            tags:
                - Live
    /v1/schedules/{scheduleId}/lives/{liveId}:
        delete:
            description: ライブ配信を削除します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
                - description: ライブ配信ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: liveId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ライブ配信の削除権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ライブ配信が存在しない
            security:
                - bearerauth: []
            summary: ライブ配信削除
            tags:
                - Live
        get:
            description: 指定されたライブ配信の詳細情報を取得します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
                - description: ライブ配信ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: liveId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.LiveResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ライブ配信の参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ライブ配信が存在しない
            security:
                - bearerauth: []
            summary: ライブ配信取得
            tags:
                - Live
        patch:
            description: ライブ配信の情報を更新します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
                - description: ライブ配信ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: liveId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateLiveRequest'
                description: ライブ配信情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ライブ配信の更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ライブ配信が存在しない
            security:
                - bearerauth: []
            summary: ライブ配信更新
            tags:
                - Live
    /v1/schedules/{scheduleId}/publish:
        patch:
            description: マルシェ開催スケジュールの公開状態を更新します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.PublishScheduleRequest'
                description: 公開設定情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールの公開権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スケジュールが存在しない
            security:
                - bearerauth: []
            summary: マルシェ開催スケジュール公開
            tags:
                - Schedule
    /v1/shippings/default:
        get:
            description: デフォルトの配送設定を取得します。
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ShippingResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: デフォルト配送設定取得
            tags:
                - Shipping
        patch:
            description: デフォルトの配送設定を更新します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateDefaultShippingRequest'
                description: デフォルト配送設定情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: デフォルト配送設定更新
            tags:
                - Shipping
    /v1/shops/{shopId}:
        get:
            description: 指定されたショップの詳細情報を取得します。コーディネーター、生産者、商品種別情報も含まれます。
            parameters:
                - description: ショップID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: shopId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.ShopResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ショップの参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ショップが存在しない
            security:
                - bearerauth: []
            summary: ショップ取得
            tags:
                - Shop
        patch:
            description: ショップの情報を更新します。ショップ名、商品種別、営業日を変更できます。
            parameters:
                - description: ショップID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: shopId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateShopRequest'
                description: ショップ情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ショップの更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: ショップが存在しない
            security:
                - bearerauth: []
            summary: ショップ更新
            tags:
                - Shop
    /v1/spot-types:
        get:
            description: スポットタイプの一覧を取得します。名前でのフィルタリングが可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: スポットタイプ名(あいまい検索)
                  example: '"観光地"'
                  in: query
                  name: name
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.SpotTypesResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: スポットタイプ一覧取得
            tags:
                - SpotType
        post:
            description: 新しいスポットタイプを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateSpotTypeRequest'
                description: スポットタイプ情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.SpotTypeResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在するスポットタイプ名
            security:
                - bearerauth: []
            summary: スポットタイプ登録
            tags:
                - SpotType
    /v1/spot-types/{spotTypeId}:
        delete:
            description: スポットタイプを削除します。
            parameters:
                - description: スポットタイプID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: spotTypeId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットタイプが存在しない
                "412":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポット側で紐づいているため削除不可
            security:
                - bearerauth: []
            summary: スポットタイプ削除
            tags:
                - SpotType
        patch:
            description: スポットタイプの情報を更新します。
            parameters:
                - description: スポットタイプID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: spotTypeId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateSpotTypeRequest'
                description: スポットタイプ情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットタイプが存在しない
                "409":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: すでに存在するスポットタイプ名
            security:
                - bearerauth: []
            summary: スポットタイプ更新
            tags:
                - SpotType
    /v1/spots:
        get:
            description: スポットの一覧を取得します。ページネーションと名前でのフィルタリングに対応しています。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: スポット名
                  example: '"春の公園"'
                  in: query
                  name: name
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.SpotsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: スポット一覧取得
            tags:
                - Spot
        post:
            description: 新しいスポットを登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateSpotRequest'
                description: スポット情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.SpotResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: スポット登録
            tags:
                - Spot
    /v1/spots/{spotId}:
        delete:
            description: スポットを削除します。
            parameters:
                - description: スポットID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: spotId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットの削除権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットが存在しない
            security:
                - bearerauth: []
            summary: スポット削除
            tags:
                - Spot
        get:
            description: 指定されたスポットの詳細情報を取得します。
            parameters:
                - description: スポットID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: spotId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.SpotResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットが存在しない
            security:
                - bearerauth: []
            summary: スポット取得
            tags:
                - Spot
        patch:
            description: スポットの情報を更新します。
            parameters:
                - description: スポットID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: spotId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateSpotRequest'
                description: スポット情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットの更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットが存在しない
            security:
                - bearerauth: []
            summary: スポット更新
            tags:
                - Spot
    /v1/spots/{spotId}/approval:
        patch:
            description: スポットの承認状態を更新します。
            parameters:
                - description: スポットID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: spotId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.ApproveSpotRequest'
                description: 承認情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットの承認権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: スポットが存在しない
            security:
                - bearerauth: []
            summary: スポット承認
            tags:
                - Spot
    /v1/top/orders:
        get:
            description: 指定期間の注文統計情報（注文数、売上、決済手段別集計、推移）を取得します。
            parameters:
                - description: 集計開始日時（unixtime,未指定の場合は１週間前の時刻）
                  in: query
                  name: startAt
                  schema:
                    type: integer
                - description: 集計終了日時（unixtime,未指定の場合は現在時刻）
                  in: query
                  name: endAt
                  schema:
                    type: integer
                - description: 集計期間（未指定の場合は日次）
                  example: '"day"'
                  in: query
                  name: periodType
                  schema:
                    type: string
                - description: 店舗ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: query
                  name: shopId
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.TopOrdersResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 注文集計取得
            tags:
                - Top
    /v1/upload/coordinators/bonus-video:
        post:
            description: コーディネーターの特典動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: コーディネーター特典動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/coordinators/header:
        post:
            description: コーディネーターのヘッダー画像アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: コーディネーターヘッダーアップロードURL生成
            tags:
                - Upload
    /v1/upload/coordinators/promotion-video:
        post:
            description: コーディネーターのプロモーション動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: コーディネータープロモ動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/coordinators/thumbnail:
        post:
            description: コーディネーターのサムネイル画像アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: コーディネーターサムネイルアップロードURL生成
            tags:
                - Upload
    /v1/upload/experiences/image:
        post:
            description: 体験の画像アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 体験画像アップロードURL生成
            tags:
                - Upload
    /v1/upload/experiences/promotion-video:
        post:
            description: 体験のプロモーション動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 体験プロモ動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/experiences/video:
        post:
            description: 体験の動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 体験動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/producers/bonus-video:
        post:
            description: 生産者の特典動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 生産者特典動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/producers/header:
        post:
            description: 生産者のヘッダー画像アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 生産者ヘッダーアップロードURL生成
            tags:
                - Upload
    /v1/upload/producers/promotion-video:
        post:
            description: 生産者のプロモーション動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 生産者プロモ動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/producers/thumbnail:
        post:
            description: 生産者のサムネイル画像アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 生産者サムネイルアップロードURL生成
            tags:
                - Upload
    /v1/upload/product-types/icon:
        post:
            description: 商品種別のアイコンアップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 商品種別アイコンアップロードURL生成
            tags:
                - Upload
    /v1/upload/products/image:
        post:
            description: 商品の画像アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 商品画像アップロードURL生成
            tags:
                - Upload
    /v1/upload/products/video:
        post:
            description: 商品の動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 商品動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/schedules/-/broadcasts/live:
        post:
            description: ライブ配信動画のアップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: ライブ動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/schedules/{scheduleId}/broadcasts/archive:
        post:
            description: 指定されたスケジュールのアーカイブ動画アップロードURLを生成します。
            parameters:
                - description: スケジュールID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: scheduleId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: アーカイブ動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/schedules/image:
        post:
            description: スケジュールの画像アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: スケジュール画像アップロードURL生成
            tags:
                - Upload
    /v1/upload/schedules/opening-video:
        post:
            description: スケジュールのオープニング動画アップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: スケジュールオープニング動画アップロードURL生成
            tags:
                - Upload
    /v1/upload/schedules/thumbnail:
        post:
            description: スケジュールのサムネイルアップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: スケジュールサムネイルアップロードURL生成
            tags:
                - Upload
    /v1/upload/spots/thumbnail:
        post:
            description: スポットのサムネイルアップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: スポットサムネイルアップロードURL生成
            tags:
                - Upload
    /v1/upload/state:
        get:
            description: 指定されたキーのアップロード状態を取得します。
            parameters:
                - description: アップロードキー
                  example: '"upload-key-123"'
                  in: query
                  name: key
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadStateResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: アップロード情報が存在しない
            security:
                - bearerauth: []
            summary: アップロード状態取得
            tags:
                - Upload
    /v1/upload/videos/file:
        post:
            description: 動画ファイルのアップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 動画ファイルアップロードURL生成
            tags:
                - Upload
    /v1/upload/videos/thumbnail:
        post:
            description: 動画のサムネイルアップロードURLを生成します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.GetUploadURLRequest'
                description: アップロードファイル情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UploadURLResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 動画サムネイルアップロードURL生成
            tags:
                - Upload
    /v1/users:
        get:
            description: 購入者の一覧を取得します。管理者は全購入者、コーディネーターは注文実績のある購入者のみ取得可能です。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UsersResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 購入者一覧取得
            tags:
                - User
    /v1/users/{userId}:
        delete:
            description: 購入者を削除します。管理者のみ実行可能です。
            parameters:
                - description: 購入者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 購入者が存在しない
            security:
                - bearerauth: []
            summary: 購入者削除
            tags:
                - User
        get:
            description: 指定された購入者の詳細情報を取得します。
            parameters:
                - description: 購入者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UserResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 購入者が存在しない
            security:
                - bearerauth: []
            summary: 購入者取得
            tags:
                - User
    /v1/users/{userId}/orders:
        get:
            description: 指定された購入者の注文履歴と注文統計情報を取得します。
            parameters:
                - description: 購入者ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: userId
                  required: true
                  schema:
                    type: string
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.UserOrdersResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 購入者が存在しない
            security:
                - bearerauth: []
            summary: 購入者注文履歴取得
            tags:
                - User
    /v1/videos:
        get:
            description: 動画の一覧を取得します。ページネーションと名前でのフィルタリングに対応しています。
            parameters:
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 取得開始位置(min:0)
                  example: 0
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 動画名
                  example: '"春の特産品紹介"'
                  in: query
                  name: name
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.VideosResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 動画一覧取得
            tags:
                - Video
        post:
            description: 新しい動画を登録します。
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.CreateVideoRequest'
                description: 動画情報
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.VideoResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
            security:
                - bearerauth: []
            summary: 動画登録
            tags:
                - Video
    /v1/videos/{videoId}:
        delete:
            description: 動画を削除します。
            parameters:
                - description: 動画ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: videoId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画の削除権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画が存在しない
            security:
                - bearerauth: []
            summary: 動画削除
            tags:
                - Video
        get:
            description: 指定された動画の詳細情報を取得します。
            parameters:
                - description: 動画ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: videoId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.VideoResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画の参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画が存在しない
            security:
                - bearerauth: []
            summary: 動画取得
            tags:
                - Video
        patch:
            description: 動画の情報を更新します。
            parameters:
                - description: 動画ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: videoId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateVideoRequest'
                description: 動画情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画の更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画が存在しない
            security:
                - bearerauth: []
            summary: 動画更新
            tags:
                - Video
    /v1/videos/{videoId}/analytics:
        get:
            description: 指定された動画の視聴者分析データを取得します。集計期間と集計間隔を指定できます。
            parameters:
                - description: 動画ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: videoId
                  required: true
                  schema:
                    type: string
                - description: 集計開始日時 (unixtime,未指定の場合は動画公開時間)
                  in: query
                  name: start
                  schema:
                    type: integer
                - description: 集計終了日時 (unixtime,未指定の場合は現在時刻)
                  in: query
                  name: end
                  schema:
                    type: integer
                - description: 集計間隔 (未指定の場合は1分間隔)
                  example: '"minute"'
                  in: query
                  name: viewerLogInterval
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.AnalyzeVideoResponse'
                    description: OK
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画の参照権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: 動画が存在しない
            security:
                - bearerauth: []
            summary: 動画分析情報取得
            tags:
                - Video
    /v1/videos/{videoId}/comments:
        get:
            description: 指定された動画のコメント一覧を取得します。ページネーションと期間フィルタリングに対応しています。
            parameters:
                - description: 動画ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: videoId
                  required: true
                  schema:
                    type: string
                - description: 取得上限数(max:200)
                  example: 20
                  in: query
                  name: limit
                  schema:
                    default: 20
                    type: integer
                - description: 検索開始日時（unixtime）
                  in: query
                  name: start
                  schema:
                    type: integer
                - description: 検索終了日時（unixtime）
                  in: query
                  name: end
                  schema:
                    type: integer
                - description: 次ページトークン
                  example: '"token123"'
                  in: query
                  name: next
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/response.VideoCommentsResponse'
                    description: OK
            security:
                - bearerauth: []
            summary: 動画コメント一覧取得
            tags:
                - VideoComment
    /v1/videos/{videoId}/comments/{commentId}:
        patch:
            description: 動画コメントの状態（無効/有効）を更新します。
            parameters:
                - description: 動画ID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: videoId
                  required: true
                  schema:
                    type: string
                - description: コメントID
                  example: '"kSByoE6FetnPs5Byk3a9Zx"'
                  in: path
                  name: commentId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/request.UpdateVideoCommentRequest'
                description: コメント情報
                required: true
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: バリデーションエラー
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: コメントの更新権限がない
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/util.ErrorResponse'
                    description: コメントが存在しない
            security:
                - bearerauth: []
            summary: 動画コメント更新
            tags:
                - VideoComment
servers:
    - description: 検証環境
      url: https://admin-api.furumaru-stg.and-period.work
    - description: 本番環境
      url: https://admin-api.furumaru.and-period.co.jp

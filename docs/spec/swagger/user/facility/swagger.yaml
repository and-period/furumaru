components:
  schemas:
    time.Weekday:
      type: integer
      x-enum-varnames:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 不明
        - 不明
        - 不明
        - 不明
        - 不明
        - 不明
    AddCartItemRequest:
      properties:
        productId:
          description: 商品ID
          type: string
        quantity:
          description: 数量
          minimum: 1
          type: integer
      required:
        - productId
        - quantity
      type: object
    AuthResponse:
      properties:
        accessToken:
          description: アクセストークン
          type: string
        expiresIn:
          description: 有効期限
          type: integer
        refreshToken:
          description: 更新トークン
          type: string
        tokenType:
          description: トークン種別
          type: string
        userId:
          description: ユーザーID
          type: string
      type: object
      required:
        - accessToken
        - expiresIn
        - refreshToken
        - tokenType
        - userId
    AuthUserResponse:
      properties:
        email:
          description: メールアドレス
          type: string
        firstname:
          description: 名
          type: string
        firstnameKana:
          description: 名（かな）
          type: string
        id:
          description: ユーザーID
          type: string
        lastCheckInAt:
          description: 最新のチェックイン日時
          type: integer
        lastname:
          description: 姓
          type: string
        lastnameKana:
          description: 姓（かな）
          type: string
        phoneNumber:
          description: 電話番号
          type: string
      type: object
      required:
        - email
        - firstname
        - firstnameKana
        - id
        - lastCheckInAt
        - lastname
        - lastnameKana
        - phoneNumber
    CalcCartResponse:
      properties:
        carts:
          description: カート一覧
          items:
            $ref: '#/components/schemas/Cart'
          type: array
          uniqueItems: false
        coordinator:
          $ref: '#/components/schemas/Coordinator'
        discount:
          description: 割引金額(税込)
          type: integer
        items:
          description: カート内の商品一覧(集計結果)
          items:
            $ref: '#/components/schemas/CartItem'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/Product'
          type: array
          uniqueItems: false
        promotion:
          $ref: '#/components/schemas/Promotion'
        requestId:
          description: 支払い時にAPIへ送信するキー(重複判定用)
          type: string
        shippingFee:
          description: 配送手数料(税込)
          type: integer
        subtotal:
          description: 購入金額(税込)
          type: integer
        total:
          description: 合計金額(税込)
          type: integer
      type: object
      required:
        - carts
        - coordinator
        - discount
        - items
        - products
        - promotion
        - requestId
        - shippingFee
        - subtotal
        - total
    Cart:
      properties:
        coordinatorId:
          description: コーディネータID
          type: string
        items:
          description: 箱の商品一覧
          items:
            $ref: '#/components/schemas/CartItem'
          type: array
          uniqueItems: false
        number:
          description: 箱の通番
          type: integer
        rate:
          description: 箱の占有率
          type: integer
        size:
          $ref: '#/components/schemas/ShippingSize'
        type:
          $ref: '#/components/schemas/ShippingType'
      type: object
      required:
        - coordinatorId
        - items
        - number
        - rate
        - size
        - type
    CartItem:
      properties:
        productId:
          description: 商品ID
          type: string
        quantity:
          description: 数量
          type: integer
      type: object
      required:
        - productId
        - quantity
    CartResponse:
      properties:
        carts:
          description: カート一覧
          items:
            $ref: '#/components/schemas/Cart'
          type: array
          uniqueItems: false
        coordinators:
          description: コーディネータ一覧
          items:
            $ref: '#/components/schemas/Coordinator'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/Product'
          type: array
          uniqueItems: false
      type: object
      required:
        - carts
        - coordinators
        - products
    Category:
      description: 商品種別情報
      properties:
        id:
          description: 商品種別ID
          type: string
        name:
          description: 商品種別名
          type: string
      type: object
      required:
        - id
        - name
    CheckoutCreditCard:
      description: クレジットカード決済情報
      properties:
        month:
          description: 有効期限（月）
          maximum: 12
          minimum: 1
          type: integer
        name:
          description: カード名義
          type: string
        number:
          description: カード番号
          type: string
        verificationValue:
          description: セキュリティコード
          maxLength: 4
          minLength: 3
          type: string
        year:
          description: 有効期限（年）
          maximum: 2100
          minimum: 2000
          type: integer
      required:
        - name
        - number
        - month
        - verificationValue
        - year
      type: object
    CheckoutRequest:
      properties:
        boxNumber:
          description: 箱の通番（箱単位で購入する場合）
          minimum: 0
          type: integer
        callbackUrl:
          description: 決済完了後のリダイレクト先URL
          type: string
        coordinatorId:
          description: コーディネータID
          type: string
        creditCard:
          $ref: '#/components/schemas/CheckoutCreditCard'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethodType'
        promotionCode:
          description: プロモーションコード
          type: string
        requestId:
          description: 支払いキー(重複判定用)
          type: string
        total:
          description: 支払い合計金額（誤り検出用）
          minimum: 0
          type: integer
      required:
        - callbackUrl
        - coordinatorId
        - paymentMethod
        - requestId
        - boxNumber
        - creditCard
        - promotionCode
        - total
      type: object
    CheckoutResponse:
      properties:
        url:
          description: 遷移先URL
          type: string
      type: object
      required:
        - url
    CheckoutStateResponse:
      properties:
        orderId:
          description: 注文履歴ID
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
      type: object
      required:
        - orderId
        - status
    Coordinator:
      description: コーディネータ情報
      properties:
        businessDays:
          description: 営業曜日(発送可能日)
          items:
            $ref: '#/components/schemas/time.Weekday'
          type: array
          uniqueItems: false
        city:
          description: 市区町村
          type: string
        facebookId:
          description: Facebookアカウント
          type: string
        headerUrl:
          description: ヘッダー画像URL
          type: string
        id:
          description: コーディネータID
          type: string
        instagramId:
          description: Instagramアカウント
          type: string
        marcheName:
          description: マルシェ名
          type: string
        prefecture:
          description: 都道府県
          type: string
        productTypeIds:
          description: 取り扱い品目一覧
          items:
            type: string
          type: array
          uniqueItems: false
        profile:
          description: 紹介文
          type: string
        promotionVideoUrl:
          description: 紹介映像URL
          type: string
        thumbnailUrl:
          description: サムネイルURL
          type: string
        username:
          description: 表示名
          type: string
      type: object
      required:
        - businessDays
        - city
        - facebookId
        - headerUrl
        - id
        - instagramId
        - marcheName
        - prefecture
        - productTypeIds
        - profile
        - promotionVideoUrl
        - thumbnailUrl
        - username
    CreateAuthUserRequest:
      properties:
        authToken:
          description: LINEの認証トークン
          type: string
        firstname:
          description: 名
          maxLength: 16
          type: string
        firstnameKana:
          description: 名 かな
          maxLength: 32
          type: string
        lastCheckInAt:
          description: 最新のチェックイン日時
          minimum: 0
          type: integer
        lastname:
          description: 姓
          maxLength: 16
          type: string
        lastnameKana:
          description: 姓 かな
          maxLength: 32
          type: string
        phoneNumber:
          description: 電話番号
          type: string
      required:
        - authToken
        - firstname
        - firstnameKana
        - lastname
        - lastnameKana
        - phoneNumber
        - lastCheckInAt
      type: object
    DeliveryType:
      description: 配送方法
      type: integer
      x-enum-comments:
        DeliveryTypeFrozen: 冷凍便
        DeliveryTypeNormal: 常温便
        DeliveryTypeRefrigerated: 冷蔵便
      x-enum-varnames:
        - DeliveryTypeUnknown
        - DeliveryTypeNormal
        - DeliveryTypeRefrigerated
        - DeliveryTypeFrozen
      enum:
        - 0
        - 1
        - 2
        - 3
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 常温便
        - 冷蔵便
        - 冷凍便
    DiscountType:
      description: 割引計算方法
      type: integer
      x-enum-comments:
        DiscountTypeAmount: 固定額(円)
        DiscountTypeFreeShipping: 送料無料
        DiscountTypeRate: 料率計算(%)
      x-enum-varnames:
        - DiscountTypeUnknown
        - DiscountTypeAmount
        - DiscountTypeRate
        - DiscountTypeFreeShipping
      enum:
        - 0
        - 1
        - 2
        - 3
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 固定額(円)
        - 料率計算(%)
        - 送料無料
    GetAccessTokenRequest:
      properties:
        refreshToken:
          description: 更新トークン
          type: string
      required:
        - refreshToken
      type: object
    Order:
      description: 注文履歴情報
      properties:
        coordinatorId:
          description: コーディネータID
          type: string
        id:
          description: 注文履歴ID
          type: string
        items:
          description: 注文商品一覧
          items:
            $ref: '#/components/schemas/OrderItem'
          type: array
          uniqueItems: false
        payment:
          $ref: '#/components/schemas/OrderPayment'
        pickupAt:
          description: 受け取り日時
          type: integer
        pickupLocation:
          description: 受け取り場所
          type: string
        promotionId:
          description: プロモーションID
          type: string
        refund:
          $ref: '#/components/schemas/OrderRefund'
        status:
          $ref: '#/components/schemas/OrderStatus'
        type:
          $ref: '#/components/schemas/OrderType'
      type: object
      required:
        - coordinatorId
        - id
        - items
        - payment
        - pickupAt
        - pickupLocation
        - promotionId
        - refund
        - status
        - type
    OrderItem:
      properties:
        fulfillmentId:
          description: 配送情報ID
          type: string
        price:
          description: 購入価格(税込)
          type: integer
        productId:
          description: 商品ID
          type: string
        quantity:
          description: 購入数量
          type: integer
      type: object
      required:
        - fulfillmentId
        - price
        - productId
        - quantity
    OrderPayment:
      description: 支払い情報
      properties:
        discount:
          description: 割引金額(税込)
          type: integer
        methodType:
          description: 支払い方法
          type: integer
          x-enum-comments:
            PaymentMethodTypeAUPay: QR決済（au PAY）
            PaymentMethodTypeBankTransfer: 銀行振込決済
            PaymentMethodTypeCash: 代引支払い
            PaymentMethodTypeCreditCard: クレジットカード決済
            PaymentMethodTypeFree: 決済無し
            PaymentMethodTypeKonbini: コンビニ決済
            PaymentMethodTypeLinePay: QR決済（LINE Pay）
            PaymentMethodTypeMerpay: QR決済（メルペイ）
            PaymentMethodTypePaidy: ペイディ（Paidy）
            PaymentMethodTypePayEasy: ペイジー（Pay-easy）
            PaymentMethodTypePayPay: QR決済（PayPay）
            PaymentMethodTypeRakutenPay: QR決済（楽天ペイ）
          x-enum-varnames:
            - PaymentMethodTypeUnknown
            - PaymentMethodTypeCash
            - PaymentMethodTypeCreditCard
            - PaymentMethodTypeKonbini
            - PaymentMethodTypeBankTransfer
            - PaymentMethodTypePayPay
            - PaymentMethodTypeLinePay
            - PaymentMethodTypeMerpay
            - PaymentMethodTypeRakutenPay
            - PaymentMethodTypeAUPay
            - PaymentMethodTypeFree
            - PaymentMethodTypePaidy
            - PaymentMethodTypePayEasy
        orderedAt:
          description: 注文日時
          type: integer
        paidAt:
          description: 支払日時
          type: integer
        shippingFee:
          description: 配送手数料(税込)
          type: integer
        status:
          description: 注文ステータス
          type: integer
          x-enum-comments:
            PaymentStatusCanceled: キャンセル済み
            PaymentStatusFailed: 失敗
            PaymentStatusPaid: 支払い済み
            PaymentStatusUnpaid: 未支払い
          x-enum-varnames:
            - PaymentStatusUnknown
            - PaymentStatusUnpaid
            - PaymentStatusPaid
            - PaymentStatusCanceled
            - PaymentStatusFailed
        subtotal:
          description: 購入金額(税込)
          type: integer
        total:
          description: 合計金額(税込)
          type: integer
        transactionId:
          description: 取引ID
          type: string
      type: object
      required:
        - discount
        - methodType
        - orderedAt
        - paidAt
        - shippingFee
        - status
        - subtotal
        - total
        - transactionId
    OrderRefund:
      description: 注文キャンセル情報
      properties:
        canceled:
          description: 注文キャンセルフラグ
          type: boolean
        canceledAt:
          description: 注文キャンセル日時
          type: integer
        reason:
          description: 注文キャンセル理由
          type: string
        total:
          description: 返金金額
          type: integer
        type:
          $ref: '#/components/schemas/RefundType'
      type: object
      required:
        - canceled
        - canceledAt
        - reason
        - total
        - type
    OrderResponse:
      properties:
        coordinator:
          $ref: '#/components/schemas/Coordinator'
        order:
          $ref: '#/components/schemas/Order'
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/Product'
          type: array
          uniqueItems: false
        promotion:
          $ref: '#/components/schemas/Promotion'
      type: object
      required:
        - coordinator
        - order
        - products
        - promotion
    OrderStatus:
      description: 注文ステータス
      type: integer
      x-enum-comments:
        OrderStatusCanceled: キャンセル
        OrderStatusCompleted: 完了
        OrderStatusFailed: 失敗
        OrderStatusPreparing: 発送対応中
        OrderStatusRefunded: 返金
        OrderStatusUnpaid: 支払い待ち
      x-enum-varnames:
        - OrderStatusUnknown
        - OrderStatusUnpaid
        - OrderStatusPreparing
        - OrderStatusCompleted
        - OrderStatusCanceled
        - OrderStatusRefunded
        - OrderStatusFailed
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 支払い待ち
        - 発送対応中
        - 完了
        - キャンセル
        - 返金
        - 失敗
    OrderType:
      description: 注文種別
      type: integer
      x-enum-comments:
        OrderTypeExperience: 体験
        OrderTypeProduct: 商品
      x-enum-varnames:
        - OrderTypeUnknown
        - OrderTypeProduct
        - OrderTypeExperience
      enum:
        - 0
        - 1
        - 2
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 商品
        - 体験
    OrdersResponse:
      properties:
        coordinators:
          description: コーディネータ一覧
          items:
            $ref: '#/components/schemas/Coordinator'
          type: array
          uniqueItems: false
        orders:
          description: 注文履歴一覧
          items:
            $ref: '#/components/schemas/Order'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/Product'
          type: array
          uniqueItems: false
        promotions:
          description: プロモーション一覧
          items:
            $ref: '#/components/schemas/Promotion'
          type: array
          uniqueItems: false
        total:
          description: 合計数
          type: integer
      type: object
      required:
        - coordinators
        - orders
        - products
        - promotions
        - total
    PaymentMethodType:
      description: 支払い方法
      type: integer
      x-enum-comments:
        PaymentMethodTypeAUPay: QR決済（au PAY）
        PaymentMethodTypeBankTransfer: 銀行振込決済
        PaymentMethodTypeCash: 代引支払い
        PaymentMethodTypeCreditCard: クレジットカード決済
        PaymentMethodTypeFree: 決済無し
        PaymentMethodTypeKonbini: コンビニ決済
        PaymentMethodTypeLinePay: QR決済（LINE Pay）
        PaymentMethodTypeMerpay: QR決済（メルペイ）
        PaymentMethodTypePaidy: ペイディ（Paidy）
        PaymentMethodTypePayEasy: ペイジー（Pay-easy）
        PaymentMethodTypePayPay: QR決済（PayPay）
        PaymentMethodTypeRakutenPay: QR決済（楽天ペイ）
      x-enum-varnames:
        - PaymentMethodTypeUnknown
        - PaymentMethodTypeCash
        - PaymentMethodTypeCreditCard
        - PaymentMethodTypeKonbini
        - PaymentMethodTypeBankTransfer
        - PaymentMethodTypePayPay
        - PaymentMethodTypeLinePay
        - PaymentMethodTypeMerpay
        - PaymentMethodTypeRakutenPay
        - PaymentMethodTypeAUPay
        - PaymentMethodTypeFree
        - PaymentMethodTypePaidy
        - PaymentMethodTypePayEasy
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 代引支払い
        - クレジットカード決済
        - コンビニ決済
        - 銀行振込決済
        - QR決済（PayPay）
        - QR決済（LINE Pay）
        - QR決済（メルペイ）
        - QR決済（楽天ペイ）
        - QR決済（au PAY）
        - 決済無し
        - ペイディ（Paidy）
        - ペイジー（Pay-easy）
    PaymentStatus:
      description: 注文ステータス
      type: integer
      x-enum-comments:
        PaymentStatusCanceled: キャンセル済み
        PaymentStatusFailed: 失敗
        PaymentStatusPaid: 支払い済み
        PaymentStatusUnpaid: 未支払い
      x-enum-varnames:
        - PaymentStatusUnknown
        - PaymentStatusUnpaid
        - PaymentStatusPaid
        - PaymentStatusCanceled
        - PaymentStatusFailed
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 未支払い
        - 支払い済み
        - キャンセル済み
        - 失敗
    Producer:
      description: 生産者情報
      properties:
        city:
          description: 市区町村
          type: string
        coordinatorId:
          description: 担当コーディネータID
          type: string
        facebookId:
          description: Facebookアカウント
          type: string
        headerUrl:
          description: ヘッダー画像URL
          type: string
        id:
          description: 生産者ID
          type: string
        instagramId:
          description: Instagramアカウント
          type: string
        prefecture:
          description: 都道府県
          type: string
        profile:
          description: 紹介文
          type: string
        promotionVideoUrl:
          description: 紹介映像URL
          type: string
        thumbnailUrl:
          description: サムネイルURL
          type: string
        username:
          description: 生産者名
          type: string
      type: object
      required:
        - city
        - coordinatorId
        - facebookId
        - headerUrl
        - id
        - instagramId
        - prefecture
        - profile
        - promotionVideoUrl
        - thumbnailUrl
        - username
    Product:
      description: 商品情報
      properties:
        box60Rate:
          description: 箱の占有率(サイズ:60)
          type: integer
        box80Rate:
          description: 箱の占有率(サイズ:80)
          type: integer
        box100Rate:
          description: 箱の占有率(サイズ:100)
          type: integer
        categoryId:
          description: 商品種別ID
          type: string
        coordinatorId:
          description: コーディネータID
          type: string
        deliveryType:
          $ref: '#/components/schemas/DeliveryType'
        description:
          description: 商品説明
          type: string
        endAt:
          description: 販売終了日時
          type: integer
        expirationDate:
          description: 賞味期限(単位:日)
          type: integer
        id:
          description: 商品ID
          type: string
        inventory:
          description: 在庫数
          type: integer
        itemDescription:
          description: 数量単位説明
          type: string
        itemUnit:
          description: 数量単位
          type: string
        media:
          description: メディア一覧
          items:
            $ref: '#/components/schemas/ProductMedia'
          type: array
          uniqueItems: false
        name:
          description: 商品名
          type: string
        originCity:
          description: 原産地(市区町村)
          type: string
        originPrefecture:
          description: 原産地(都道府県)
          type: string
        price:
          description: 販売価格(税込)
          type: integer
        producerId:
          description: 生産者ID
          type: string
        productTagIds:
          description: 商品タグID一覧
          items:
            type: string
          type: array
          uniqueItems: false
        productTypeId:
          description: 品目ID
          type: string
        rate:
          $ref: '#/components/schemas/ProductRate'
        recommendedPoint1:
          description: おすすめポイント1
          type: string
        recommendedPoint2:
          description: おすすめポイント2
          type: string
        recommendedPoint3:
          description: おすすめポイント3
          type: string
        startAt:
          description: 販売開始日時
          type: integer
        status:
          $ref: '#/components/schemas/ProductStatus'
        storageMethodType:
          $ref: '#/components/schemas/StorageMethodType'
        thumbnailUrl:
          description: サムネイルURL
          type: string
        weight:
          description: 重量(kg,少数第一位まで)
          type: number
      type: object
      required:
        - box60Rate
        - box80Rate
        - box100Rate
        - categoryId
        - coordinatorId
        - deliveryType
        - description
        - endAt
        - expirationDate
        - id
        - inventory
        - itemDescription
        - itemUnit
        - media
        - name
        - originCity
        - originPrefecture
        - price
        - producerId
        - productTagIds
        - productTypeId
        - rate
        - recommendedPoint1
        - recommendedPoint2
        - recommendedPoint3
        - startAt
        - status
        - storageMethodType
        - thumbnailUrl
        - weight
    ProductMedia:
      properties:
        isThumbnail:
          description: サムネイルとして使用
          type: boolean
        url:
          description: メディアURL
          type: string
      type: object
      required:
        - isThumbnail
        - url
    ProductRate:
      description: 商品評価
      properties:
        average:
          description: 平均評価
          type: number
        count:
          description: 合計評価数
          type: integer
        detail:
          additionalProperties:
            type: integer
          description: 評価詳細
          type: object
      type: object
      required:
        - average
        - count
        - detail
    ProductResponse:
      properties:
        category:
          $ref: '#/components/schemas/Category'
        coordinator:
          $ref: '#/components/schemas/Coordinator'
        producer:
          $ref: '#/components/schemas/Producer'
        product:
          $ref: '#/components/schemas/Product'
        productTags:
          description: 商品タグ一覧
          items:
            $ref: '#/components/schemas/ProductTag'
          type: array
          uniqueItems: false
        productType:
          $ref: '#/components/schemas/ProductType'
      type: object
      required:
        - category
        - coordinator
        - producer
        - product
        - productTags
        - productType
    ProductStatus:
      description: 販売状況
      type: integer
      x-enum-comments:
        ProductStatusForSale: 販売中
        ProductStatusOutOfSale: 販売期間外
        ProductStatusPresale: 予約受付中
      x-enum-varnames:
        - ProductStatusUnknown
        - ProductStatusPresale
        - ProductStatusForSale
        - ProductStatusOutOfSale
      enum:
        - 0
        - 1
        - 2
        - 3
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 予約受付中
        - 販売中
        - 販売期間外
    ProductTag:
      properties:
        id:
          description: 商品タグID
          type: string
        name:
          description: 商品タグ名
          type: string
      type: object
      required:
        - id
        - name
    ProductType:
      description: 品目情報
      properties:
        categoryId:
          description: 商品種別ID
          type: string
        iconUrl:
          description: アイコンURL
          type: string
        id:
          description: 品目ID
          type: string
        name:
          description: 品目名
          type: string
      type: object
      required:
        - categoryId
        - iconUrl
        - id
        - name
    ProductsResponse:
      properties:
        categories:
          description: 商品種別一覧
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: false
        coordinators:
          description: コーディネータ一覧
          items:
            $ref: '#/components/schemas/Coordinator'
          type: array
          uniqueItems: false
        producers:
          description: 生産者一覧
          items:
            $ref: '#/components/schemas/Producer'
          type: array
          uniqueItems: false
        productTags:
          description: 商品タグ一覧
          items:
            $ref: '#/components/schemas/ProductTag'
          type: array
          uniqueItems: false
        productTypes:
          description: 品目一覧
          items:
            $ref: '#/components/schemas/ProductType'
          type: array
          uniqueItems: false
        products:
          description: 商品一覧
          items:
            $ref: '#/components/schemas/Product'
          type: array
          uniqueItems: false
        total:
          description: 商品合計数
          type: integer
      type: object
      required:
        - categories
        - coordinators
        - producers
        - productTags
        - productTypes
        - products
        - total
    Promotion:
      description: プロモーション情報
      properties:
        code:
          description: クーポンコード
          type: string
        description:
          description: 詳細説明
          type: string
        discountRate:
          description: 割引額(%/円)
          type: integer
        discountType:
          $ref: '#/components/schemas/DiscountType'
        endAt:
          description: クーポン使用可能日時(終了)
          type: integer
        id:
          description: プロモーションID
          type: string
        startAt:
          description: クーポン使用可能日時(開始)
          type: integer
        status:
          $ref: '#/components/schemas/PromotionStatus'
        title:
          description: タイトル
          type: string
      type: object
      required:
        - code
        - description
        - discountRate
        - discountType
        - endAt
        - id
        - startAt
        - status
        - title
    PromotionStatus:
      description: ステータス
      type: integer
      x-enum-comments:
        PromotionStatusEnabled: 利用可能
        PromotionStatusFinished: 利用終了
        PromotionStatusPrivate: 非公開
        PromotionStatusWaiting: 利用開始前
      x-enum-varnames:
        - PromotionStatusUnknown
        - PromotionStatusPrivate
        - PromotionStatusWaiting
        - PromotionStatusEnabled
        - PromotionStatusFinished
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 非公開
        - 利用開始前
        - 利用可能
        - 利用終了
    RefundType:
      description: 注文キャンセル種別
      type: integer
      x-enum-comments:
        RefundTypeCanceled: キャンセル
        RefundTypeNone: キャンセルなし
        RefundTypeRefunded: 返金
      x-enum-varnames:
        - RefundTypeNone
        - RefundTypeCanceled
        - RefundTypeRefunded
      enum:
        - 0
        - 1
        - 2
      format: int32
      nullable: false
      x-enum-descriptions:
        - キャンセルなし
        - キャンセル
        - 返金
    ShippingSize:
      description: 箱のサイズ
      type: integer
      x-enum-comments:
        ShippingSize60: 箱のサイズ:60
        ShippingSize80: 箱のサイズ:80
        ShippingSize100: 箱のサイズ:100
      x-enum-varnames:
        - ShippingSizeUnknown
        - ShippingSize60
        - ShippingSize80
        - ShippingSize100
      enum:
        - 0
        - 1
        - 2
        - 3
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 箱のサイズ:60
        - 箱のサイズ:80
        - 箱のサイズ:100
    ShippingType:
      description: 箱の種別
      type: integer
      x-enum-comments:
        ShippingTypeFrozen: 冷凍便
        ShippingTypeNormal: 常温・冷蔵便
        ShippingTypePickup: 店舗受取
      x-enum-varnames:
        - ShippingTypeUnknown
        - ShippingTypeNormal
        - ShippingTypeFrozen
        - ShippingTypePickup
      enum:
        - 0
        - 1
        - 2
        - 3
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 常温・冷蔵便
        - 冷凍便
        - 店舗受取
    SignInRequest:
      properties:
        authToken:
          description: LINEの認証トークン
          type: string
      required:
        - authToken
      type: object
    StorageMethodType:
      description: 保存方法
      type: integer
      x-enum-comments:
        StorageMethodTypeCoolDark: 冷暗所保存
        StorageMethodTypeFrozen: 冷凍保存
        StorageMethodTypeNormal: 常温保存
        StorageMethodTypeRefrigerated: 冷蔵保存
      x-enum-varnames:
        - StorageMethodTypeUnknown
        - StorageMethodTypeNormal
        - StorageMethodTypeCoolDark
        - StorageMethodTypeRefrigerated
        - StorageMethodTypeFrozen
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      format: int32
      nullable: false
      x-enum-descriptions:
        - 不明
        - 常温保存
        - 冷暗所保存
        - 冷蔵保存
        - 冷凍保存
    UpdateAuthUserRequest:
      properties:
        firstname:
          description: 名
          maxLength: 16
          type: string
        firstnameKana:
          description: 名 かな
          maxLength: 32
          type: string
        lastCheckInAt:
          description: 最新のチェックイン日時
          minimum: 0
          type: integer
        lastname:
          description: 姓
          maxLength: 16
          type: string
        lastnameKana:
          description: 姓 かな
          maxLength: 32
          type: string
        phoneNumber:
          description: 電話番号
          type: string
      required:
        - firstname
        - firstnameKana
        - lastname
        - lastnameKana
        - phoneNumber
        - lastCheckInAt
      type: object
    ErrorResponse:
      properties:
        detail:
          description: エラー詳細
          type: string
        message:
          description: エラー概要
          type: string
        status:
          description: ステータスコード
          type: integer
      type: object
      required:
        - detail
        - message
        - status
  securitySchemes:
    bearerauth:
      bearerFormat: JWT
      scheme: bearer
      type: http
externalDocs:
  description: ""
  url: ""
info:
  description: 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
  title: ふるマル API - 外部宿泊施設向け
  version: ""
openapi: 3.1.0
paths:
  /facilities/{facilityId}/auth:
    delete:
      description: ふるマルからサインアウトします。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: サインアウト
      tags:
        - Auth
    post:
      description: LINEの認証トークンを渡すことで、ふるマルへサインインします。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
        description: サインイン
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 退会済み
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ユーザーが存在しない
      summary: サインイン
      tags:
        - Auth
  /facilities/{facilityId}/auth/refresh-token:
    post:
      description: 更新トークンを渡すことで、アクセストークンを再発行します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccessTokenRequest'
        description: アクセストークンの再発行
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: リフレッシュトークンが無効
      security:
        - bearerauth: []
      summary: アクセストークンの再発行
      tags:
        - Auth
  /facilities/{facilityId}/carts:
    get:
      description: カートの内容を取得します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: カート取得
      tags:
        - Cart
  /facilities/{facilityId}/carts/-/items:
    post:
      description: カートに商品を追加します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCartItemRequest'
        description: カートに追加リクエスト
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: カートに追加
      tags:
        - Cart
  /facilities/{facilityId}/carts/-/items/{productId}:
    delete:
      description: カートから商品を削除します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: 商品ID
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: カートから削除
      tags:
        - Cart
  /facilities/{facilityId}/carts/{coordinatorId}:
    get:
      description: カートの内容を計算します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: コーディネーターID
          in: path
          name: coordinatorId
          required: true
          schema:
            type: string
        - description: 箱数
          in: query
          name: number
          schema:
            type: integer
        - description: プロモーションコード
          in: query
          name: promotion
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalcCartResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: カート計算
      tags:
        - Cart
  /facilities/{facilityId}/checkouts:
    post:
      description: 商品を購入します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
        description: チェックアウト情報
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: 購入する
      tags:
        - Checkout
  /facilities/{facilityId}/checkouts/{transactionId}:
    get:
      description: 支払い状態を取得します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: 取引ID
          in: path
          name: transactionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutStateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 取引が見つからない
      security:
        - bearerauth: []
      summary: 支払い状態取得
      tags:
        - Checkout
  /facilities/{facilityId}/orders:
    get:
      description: 注文の一覧を取得します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: 取得件数
          in: query
          name: limit
          schema:
            default: 20
            type: integer
        - description: 取得開始位置
          in: query
          name: offset
          schema:
            default: 0
            type: integer
        - description: 注文ステータス
          in: query
          name: types
          schema:
            items:
              type: integer
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: 注文一覧取得
      tags:
        - Order
  /facilities/{facilityId}/orders/{orderId}:
    get:
      description: 注文の詳細を取得します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: 注文ID
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 注文が見つからない
      security:
        - bearerauth: []
      summary: 注文詳細取得
      tags:
        - Order
  /facilities/{facilityId}/products:
    get:
      description: 商品の一覧を取得します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: 取得件数
          in: query
          name: limit
          schema:
            default: 20
            type: integer
        - description: 取得開始位置
          in: query
          name: offset
          schema:
            default: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
      summary: 商品一覧取得
      tags:
        - Product
  /facilities/{facilityId}/products/{productId}:
    get:
      description: 商品の詳細を取得します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: 商品ID
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 商品が見つからない
      summary: 商品詳細取得
      tags:
        - Product
  /facilities/{facilityId}/users:
    post:
      description: ユーザーの詳細情報を登録します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthUserRequest'
        description: ユーザー情報
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー。不正なトークン
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ユーザーが既に存在する
      summary: ユーザー情報登録
      tags:
        - AuthUser
  /facilities/{facilityId}/users/me:
    get:
      description: ユーザーの詳細情報を取得します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: ユーザー情報取得
      tags:
        - AuthUser
    put:
      description: ユーザーの詳細情報を更新します。
      parameters:
        - description: 施設ID
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthUserRequest'
        description: ユーザー情報
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: バリデーションエラー
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 認証エラー
      security:
        - bearerauth: []
      summary: ユーザー情報更新
      tags:
        - AuthUser
servers:
  - description: 検証環境
    url: https://api.furumaru-stg.and-period.work
  - description: 本番環境
    url: https://api.furumaru.and-period.co.jp

# v1.21.1
admin:
  access_log:
    name: envoy.access_loggers.file
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
      path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9004
cluster_manager:
  outlier_detection:
    event_log_path: /dev/stdout
static_resources:
  listeners:
  - name: ingress
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 9002
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          access_log:
            name: envoy.file_access_log
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              log_format:
                json_format:
                  agent: "%REQ(USER-AGENT)%"
                  duration: "%DURATION%"
                  eventTime: "%START_TIME(%s.%6f)%"
                  ip: "%REQ(X-FORWARDED-FOR)%"
                  kind: "accesslog"
                  message: "envoy access log"
                  method: "%REQ(:METHOD)%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                  receivedBodySize: "%BYTES_RECEIVED%"
                  responseDuration: "%RESPONSE_DURATION%"
                  sentBodySize: "%BYTES_SENT%"
                  severity: "INFO"
                  status: "%RESPONSE_CODE%"
          http_filters:
          - name: envoy.filters.http.health_check
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
              pass_through_mode: false
              headers:
              - name: ":path"
                string_match:
                  exact: /health
              cluster_min_healthy_percentages:
                "user-server":
                  value: 100
          - name: envoy.filters.http.health_check
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
              pass_through_mode: true
              headers:
              - name: ":path"
                string_match:
                  exact: /grpc.health.v1.Health/Check
          - name: envoy.filters.http.router
            typed_config: {}
          route_config:
            name: ingress_routes
            virtual_hosts:
            - name: ingress_services
              domains:
              - "*"
              routes:
              - route:
                  weighted_clusters:
                    clusters:
                    - name: user-server
                      weight: 100
                match:
                  prefix: /
                  headers:
                  - name: content-type
                    string_match:
                      exact: application/grpc
  - name: egress
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 9003
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: egress_http
          http_filters:
          - name: envoy.filters.http.router
            typed_config: {}
          route_config:
            name: egress_routes
            virtual_hosts:
            - name: egress_services
              domains:
              - "*"
              routes: []
              # - route:
              #     cluster: messenger-server
              #   match:
              #     prefix: /messenger.MessengerService
              #     headers:
              #     - name: content-type
              #       string_match:
              #         exact: application/grpc
  clusters:
  - name: user-server
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    dns_lookup_family: V4_ONLY
    connect_timeout: 0.25s
    health_checks:
    - healthy_threshold: 1
      unhealthy_threshold: 3
      interval: 1s
      interval_jitter: 1s
      no_traffic_interval: 1s
      timeout: 3s
      event_log_path: /dev/stdout
      always_log_health_check_failures: true
      grpc_health_check: {}
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: user-server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 9000
    ignore_health_on_host_removal: true
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 1024
        max_pending_requests: 2048
        max_requests: 2048
        max_retries: 3
  # - name: messenger-server
  #   type: STRICT_DNS
  #   lb_policy: ROUND_ROBIN
  #   dns_lookup_family: V4_ONLY
  #   connect_timeout: 0.25s
  #   health_checks:
  #   - healthy_threshold: 1
  #     unhealthy_threshold: 3
  #     interval: 1s
  #     interval_jitter: 1s
  #     no_traffic_interval: 1s
  #     timeout: 3s
  #     event_log_path: /dev/stdout
  #     always_log_health_check_failures: true
  #     grpc_health_check: {}
  #   typed_extension_protocol_options:
  #     envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
  #       "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
  #       explicit_http_config:
  #         http2_protocol_options: {}
  #   load_assignment:
  #     cluster_name: messenger-server
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               address: messenger-server.default.svc.cluster.local
  #               port_value: 9002
  #   ignore_health_on_host_removal: true
  #   outlier_detection:
  #     consecutive_5xx: 5
  #     consecutive_gateway_failure: 5
  #     interval: 5s
  #     base_ejection_time: 30s
  #     max_ejection_percent: 10
  #     enforcing_consecutive_5xx: 100
  #     enforcing_success_rate: 100
  #     enforcing_consecutive_gateway_failure: 0
  #     success_rate_minimum_hosts: 5
  #     success_rate_request_volume: 100
  #     success_rate_stdev_factor: 1900

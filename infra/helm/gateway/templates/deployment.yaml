apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gateway.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        {{- if .Values.image.tag }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- else }}
        image: "{{ .Values.image.repository }}"
        {{- end }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        ports:
        - name: default
          protocol: TCP
          containerPort: {{ .Values.app.port }}
        {{- if .Values.metrics.enabled }}
        - name: metrics
          protocol: TCP
          containerPort: {{ .Values.metrics.port }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if and .Values.health.liveness .Values.health.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.health.liveness.path }}
            port: {{ .Values.health.liveness.port }}
          initialDelaySeconds: {{ default 10 .Values.health.liveness.initialDelay }}
          periodSeconds: {{ default 5 .Values.health.liveness.interval }}
          failureThreshold: 3
        {{- end }}
        {{- if and .Values.health.readiness .Values.health.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.health.readiness.path }}
            port: {{ .Values.health.readiness.port }}
          initialDelaySeconds: {{ default 10 .Values.health.readiness.initialDelay }}
          periodSeconds: {{ .Values.health.readiness.interval }}
          failureThreshold: 3
        {{- end }}
        env:
        - name: PORT
          value: {{ .Values.app.port | quote }}
        {{- if .Values.metrics.enabled }}
        - name: METRICS_PORT
          value: {{ .Values.metrics.port | quote }}
        {{- end }}
        {{- if .Values.envoy.enabled }}
        - name: PROXY_HOST
          value: {{ .Values.app.proxyHost | quote }}
        {{- end }}
        {{- toYaml .Values.env | nindent 8 }}
      {{- if .Values.envoy.enabled }}
      - name: envoy
        image: "{{ .Values.envoy.image.repository }}:{{ .Values.envoy.image.tag }}"
        imagePullPolicy: {{ .Values.envoy.image.pullPolicy }}
        ports:
        - name: default
          protocol: TCP
          containerPort: {{ .Values.service.internalPort }}
        - name: admin
          protocol: TCP
          containerPort: {{ .Values.envoy.admin.port }}
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
          readOnly: true
      {{- end }}
      volumes:
      {{- if .Values.envoy.enabled }}
      - name: envoy-config
        configMap:
          name: {{ include "gateway.fullname" . }}-envoy-config
      {{- end }}

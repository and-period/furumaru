/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  PostalCodeResponse,
  UploadStateResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PostalCodeResponseFromJSON,
    PostalCodeResponseToJSON,
    UploadStateResponseFromJSON,
    UploadStateResponseToJSON,
} from '../models/index';

export interface V1GetUploadStateRequest {
    key: string;
}

export interface V1SearchPostalCodeRequest {
    postalCode: string;
}

/**
 * 
 */
export class OtherApi extends runtime.BaseAPI {

    /**
     * ファイルアップロード状態取得
     */
    async v1GetUploadStateRaw(requestParameters: V1GetUploadStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UploadStateResponse>> {
        if (requestParameters['key'] == null) {
            throw new runtime.RequiredError(
                'key',
                'Required parameter "key" was null or undefined when calling v1GetUploadState().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['key'] != null) {
            queryParameters['key'] = requestParameters['key'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/upload/state`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UploadStateResponseFromJSON(jsonValue));
    }

    /**
     * ファイルアップロード状態取得
     */
    async v1GetUploadState(requestParameters: V1GetUploadStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UploadStateResponse> {
        const response = await this.v1GetUploadStateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 郵便番号情報検索
     */
    async v1SearchPostalCodeRaw(requestParameters: V1SearchPostalCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PostalCodeResponse>> {
        if (requestParameters['postalCode'] == null) {
            throw new runtime.RequiredError(
                'postalCode',
                'Required parameter "postalCode" was null or undefined when calling v1SearchPostalCode().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/postal-codes/{postalCode}`.replace(`{${"postalCode"}}`, encodeURIComponent(String(requestParameters['postalCode']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PostalCodeResponseFromJSON(jsonValue));
    }

    /**
     * 郵便番号情報検索
     */
    async v1SearchPostalCode(requestParameters: V1SearchPostalCodeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PostalCodeResponse> {
        const response = await this.v1SearchPostalCodeRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

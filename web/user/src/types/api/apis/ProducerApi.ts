/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  ProducerResponse,
  ProducersResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ProducerResponseFromJSON,
    ProducerResponseToJSON,
    ProducersResponseFromJSON,
    ProducersResponseToJSON,
} from '../models/index';

export interface V1GetProducerRequest {
    producerId: string;
}

export interface V1ListProducersRequest {
    limit?: number;
    offset?: number;
}

/**
 * 
 */
export class ProducerApi extends runtime.BaseAPI {

    /**
     * 生産者情報取得
     */
    async v1GetProducerRaw(requestParameters: V1GetProducerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProducerResponse>> {
        if (requestParameters.producerId === null || requestParameters.producerId === undefined) {
            throw new runtime.RequiredError('producerId','Required parameter requestParameters.producerId was null or undefined when calling v1GetProducer.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/producers/{producerId}`.replace(`{${"producerId"}}`, encodeURIComponent(String(requestParameters.producerId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProducerResponseFromJSON(jsonValue));
    }

    /**
     * 生産者情報取得
     */
    async v1GetProducer(requestParameters: V1GetProducerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProducerResponse> {
        const response = await this.v1GetProducerRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 生産者一覧取得
     */
    async v1ListProducersRaw(requestParameters: V1ListProducersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProducersResponse>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/producers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProducersResponseFromJSON(jsonValue));
    }

    /**
     * 生産者一覧取得
     */
    async v1ListProducers(requestParameters: V1ListProducersRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProducersResponse> {
        const response = await this.v1ListProducersRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

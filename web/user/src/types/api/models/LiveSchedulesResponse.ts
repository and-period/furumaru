/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
} from './Coordinator';
import type { LiveSummary } from './LiveSummary';
import {
    LiveSummaryFromJSON,
    LiveSummaryFromJSONTyped,
    LiveSummaryToJSON,
} from './LiveSummary';

/**
 * 
 * @export
 * @interface LiveSchedulesResponse
 */
export interface LiveSchedulesResponse {
    /**
     * 開催中・開催予定のマルシェ一覧
     * @type {Array<LiveSummary>}
     * @memberof LiveSchedulesResponse
     */
    lives: Array<LiveSummary>;
    /**
     * コーディネータ一覧
     * @type {Array<Coordinator>}
     * @memberof LiveSchedulesResponse
     */
    coordinators: Array<Coordinator>;
    /**
     * 合計数
     * @type {number}
     * @memberof LiveSchedulesResponse
     */
    total: number;
}

/**
 * Check if a given object implements the LiveSchedulesResponse interface.
 */
export function instanceOfLiveSchedulesResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lives" in value;
    isInstance = isInstance && "coordinators" in value;
    isInstance = isInstance && "total" in value;

    return isInstance;
}

export function LiveSchedulesResponseFromJSON(json: any): LiveSchedulesResponse {
    return LiveSchedulesResponseFromJSONTyped(json, false);
}

export function LiveSchedulesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveSchedulesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lives': ((json['lives'] as Array<any>).map(LiveSummaryFromJSON)),
        'coordinators': ((json['coordinators'] as Array<any>).map(CoordinatorFromJSON)),
        'total': json['total'],
    };
}

export function LiveSchedulesResponseToJSON(value?: LiveSchedulesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lives': ((value.lives as Array<any>).map(LiveSummaryToJSON)),
        'coordinators': ((value.coordinators as Array<any>).map(CoordinatorToJSON)),
        'total': value.total,
    };
}


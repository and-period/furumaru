/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 注文体験情報
 * @export
 * @interface OrderExperience
 */
export interface OrderExperience {
    /**
     * 体験ID
     * @type {string}
     * @memberof OrderExperience
     */
    experienceId: string;
    /**
     * 大人人数
     * @type {number}
     * @memberof OrderExperience
     */
    adultCount: number;
    /**
     * 大人価格（税込）
     * @type {number}
     * @memberof OrderExperience
     */
    adultPrice: number;
    /**
     * 中学生人数
     * @type {number}
     * @memberof OrderExperience
     */
    juniorHighSchoolCount: number;
    /**
     * 中学生価格（税込）
     * @type {number}
     * @memberof OrderExperience
     */
    juniorHighSchoolPrice: number;
    /**
     * 小学生人数
     * @type {number}
     * @memberof OrderExperience
     */
    elementarySchoolCount: number;
    /**
     * 小学生価格（税込）
     * @type {number}
     * @memberof OrderExperience
     */
    elementarySchoolPrice: number;
    /**
     * 幼児人数
     * @type {number}
     * @memberof OrderExperience
     */
    preschoolCount: number;
    /**
     * 幼児価格（税込）
     * @type {number}
     * @memberof OrderExperience
     */
    preschoolPrice: number;
    /**
     * シニア人数
     * @type {number}
     * @memberof OrderExperience
     */
    seniorCount: number;
    /**
     * シニア価格（税込）
     * @type {number}
     * @memberof OrderExperience
     */
    seniorPrice: number;
    /**
     * 交通手段
     * @type {string}
     * @memberof OrderExperience
     */
    transportation: string;
    /**
     * 体験希望日
     * @type {string}
     * @memberof OrderExperience
     */
    requestedDate: string;
    /**
     * 体験希望時間
     * @type {string}
     * @memberof OrderExperience
     */
    requestedTime: string;
}

/**
 * Check if a given object implements the OrderExperience interface.
 */
export function instanceOfOrderExperience(value: object): value is OrderExperience {
    if (!('experienceId' in value) || value['experienceId'] === undefined) return false;
    if (!('adultCount' in value) || value['adultCount'] === undefined) return false;
    if (!('adultPrice' in value) || value['adultPrice'] === undefined) return false;
    if (!('juniorHighSchoolCount' in value) || value['juniorHighSchoolCount'] === undefined) return false;
    if (!('juniorHighSchoolPrice' in value) || value['juniorHighSchoolPrice'] === undefined) return false;
    if (!('elementarySchoolCount' in value) || value['elementarySchoolCount'] === undefined) return false;
    if (!('elementarySchoolPrice' in value) || value['elementarySchoolPrice'] === undefined) return false;
    if (!('preschoolCount' in value) || value['preschoolCount'] === undefined) return false;
    if (!('preschoolPrice' in value) || value['preschoolPrice'] === undefined) return false;
    if (!('seniorCount' in value) || value['seniorCount'] === undefined) return false;
    if (!('seniorPrice' in value) || value['seniorPrice'] === undefined) return false;
    if (!('transportation' in value) || value['transportation'] === undefined) return false;
    if (!('requestedDate' in value) || value['requestedDate'] === undefined) return false;
    if (!('requestedTime' in value) || value['requestedTime'] === undefined) return false;
    return true;
}

export function OrderExperienceFromJSON(json: any): OrderExperience {
    return OrderExperienceFromJSONTyped(json, false);
}

export function OrderExperienceFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderExperience {
    if (json == null) {
        return json;
    }
    return {
        
        'experienceId': json['experienceId'],
        'adultCount': json['adultCount'],
        'adultPrice': json['adultPrice'],
        'juniorHighSchoolCount': json['juniorHighSchoolCount'],
        'juniorHighSchoolPrice': json['juniorHighSchoolPrice'],
        'elementarySchoolCount': json['elementarySchoolCount'],
        'elementarySchoolPrice': json['elementarySchoolPrice'],
        'preschoolCount': json['preschoolCount'],
        'preschoolPrice': json['preschoolPrice'],
        'seniorCount': json['seniorCount'],
        'seniorPrice': json['seniorPrice'],
        'transportation': json['transportation'],
        'requestedDate': json['requestedDate'],
        'requestedTime': json['requestedTime'],
    };
}

export function OrderExperienceToJSON(value?: OrderExperience | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'experienceId': value['experienceId'],
        'adultCount': value['adultCount'],
        'adultPrice': value['adultPrice'],
        'juniorHighSchoolCount': value['juniorHighSchoolCount'],
        'juniorHighSchoolPrice': value['juniorHighSchoolPrice'],
        'elementarySchoolCount': value['elementarySchoolCount'],
        'elementarySchoolPrice': value['elementarySchoolPrice'],
        'preschoolCount': value['preschoolCount'],
        'preschoolPrice': value['preschoolPrice'],
        'seniorCount': value['seniorCount'],
        'seniorPrice': value['seniorPrice'],
        'transportation': value['transportation'],
        'requestedDate': value['requestedDate'],
        'requestedTime': value['requestedTime'],
    };
}


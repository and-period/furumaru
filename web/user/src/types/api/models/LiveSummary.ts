/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScheduleStatus } from './ScheduleStatus';
import {
    ScheduleStatusFromJSON,
    ScheduleStatusFromJSONTyped,
    ScheduleStatusToJSON,
} from './ScheduleStatus';
import type { LiveProduct } from './LiveProduct';
import {
    LiveProductFromJSON,
    LiveProductFromJSONTyped,
    LiveProductToJSON,
} from './LiveProduct';

/**
 * 開催中・開催予定のマルシェ情報
 * @export
 * @interface LiveSummary
 */
export interface LiveSummary {
    /**
     * 開催スケジュールID
     * @type {string}
     * @memberof LiveSummary
     */
    scheduleId: string;
    /**
     * コーディネータID
     * @type {string}
     * @memberof LiveSummary
     */
    coordinatorId: string;
    /**
     * 
     * @type {ScheduleStatus}
     * @memberof LiveSummary
     */
    status: ScheduleStatus;
    /**
     * タイトル
     * @type {string}
     * @memberof LiveSummary
     */
    title: string;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof LiveSummary
     */
    thumbnailUrl: string;
    /**
     * マルシェ開始日時 (unixtime)
     * @type {number}
     * @memberof LiveSummary
     */
    startAt: number;
    /**
     * マルシェ終了日時 (unixtime)
     * @type {number}
     * @memberof LiveSummary
     */
    endAt: number;
    /**
     * 販売商品一覧
     * @type {Array<LiveProduct>}
     * @memberof LiveSummary
     */
    products: Array<LiveProduct>;
}



/**
 * Check if a given object implements the LiveSummary interface.
 */
export function instanceOfLiveSummary(value: object): value is LiveSummary {
    if (!('scheduleId' in value) || value['scheduleId'] === undefined) return false;
    if (!('coordinatorId' in value) || value['coordinatorId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('thumbnailUrl' in value) || value['thumbnailUrl'] === undefined) return false;
    if (!('startAt' in value) || value['startAt'] === undefined) return false;
    if (!('endAt' in value) || value['endAt'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    return true;
}

export function LiveSummaryFromJSON(json: any): LiveSummary {
    return LiveSummaryFromJSONTyped(json, false);
}

export function LiveSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'scheduleId': json['scheduleId'],
        'coordinatorId': json['coordinatorId'],
        'status': ScheduleStatusFromJSON(json['status']),
        'title': json['title'],
        'thumbnailUrl': json['thumbnailUrl'],
        'startAt': json['startAt'],
        'endAt': json['endAt'],
        'products': ((json['products'] as Array<any>).map(LiveProductFromJSON)),
    };
}

export function LiveSummaryToJSON(value?: LiveSummary | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'scheduleId': value['scheduleId'],
        'coordinatorId': value['coordinatorId'],
        'status': ScheduleStatusToJSON(value['status']),
        'title': value['title'],
        'thumbnailUrl': value['thumbnailUrl'],
        'startAt': value['startAt'],
        'endAt': value['endAt'],
        'products': ((value['products'] as Array<any>).map(LiveProductToJSON)),
    };
}


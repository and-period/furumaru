/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthResponse
 */
export interface AuthResponse {
    /**
     * 購入者ID
     * @type {string}
     * @memberof AuthResponse
     */
    userId: string;
    /**
     * アクセストークン
     * @type {string}
     * @memberof AuthResponse
     */
    accessToken: string;
    /**
     * 更新トークン
     * @type {string}
     * @memberof AuthResponse
     */
    refreshToken: string;
    /**
     * 有効期限
     * @type {number}
     * @memberof AuthResponse
     */
    expiresIn: number;
    /**
     * トークン種別
     * @type {string}
     * @memberof AuthResponse
     */
    tokenType: string;
}

/**
 * Check if a given object implements the AuthResponse interface.
 */
export function instanceOfAuthResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "accessToken" in value;
    isInstance = isInstance && "refreshToken" in value;
    isInstance = isInstance && "expiresIn" in value;
    isInstance = isInstance && "tokenType" in value;

    return isInstance;
}

export function AuthResponseFromJSON(json: any): AuthResponse {
    return AuthResponseFromJSONTyped(json, false);
}

export function AuthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'accessToken': json['accessToken'],
        'refreshToken': json['refreshToken'],
        'expiresIn': json['expiresIn'],
        'tokenType': json['tokenType'],
    };
}

export function AuthResponseToJSON(value?: AuthResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'accessToken': value.accessToken,
        'refreshToken': value.refreshToken,
        'expiresIn': value.expiresIn,
        'tokenType': value.tokenType,
    };
}


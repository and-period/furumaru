/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Prefecture } from './Prefecture';
import {
    PrefectureFromJSON,
    PrefectureFromJSONTyped,
    PrefectureToJSON,
} from './Prefecture';

/**
 * 
 * @export
 * @interface GuestCheckoutAddress1
 */
export interface GuestCheckoutAddress1 {
    /**
     * 姓(16文字まで)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    lastname: string;
    /**
     * 名(16文字まで)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    firstname: string;
    /**
     * 姓(かな)(ひらがな,32文字まで)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    lastnameKana: string;
    /**
     * 名(かな)(ひらがな,32文字まで)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    firstnameKana: string;
    /**
     * 郵便番号(ハイフンなし)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    postalCode: string;
    /**
     * 
     * @type {Prefecture}
     * @memberof GuestCheckoutAddress1
     */
    prefectureCode: Prefecture;
    /**
     * 市区町村(32文字まで)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    city: string;
    /**
     * 町名・番地(64文字まで)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    addressLine1: string;
    /**
     * ビル名・号室など(64文字まで)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    addressLine2: string;
    /**
     * 電話番号 (ハイフンあり)
     * @type {string}
     * @memberof GuestCheckoutAddress1
     */
    phoneNumber: string;
}



/**
 * Check if a given object implements the GuestCheckoutAddress1 interface.
 */
export function instanceOfGuestCheckoutAddress1(value: object): value is GuestCheckoutAddress1 {
    if (!('lastname' in value) || value['lastname'] === undefined) return false;
    if (!('firstname' in value) || value['firstname'] === undefined) return false;
    if (!('lastnameKana' in value) || value['lastnameKana'] === undefined) return false;
    if (!('firstnameKana' in value) || value['firstnameKana'] === undefined) return false;
    if (!('postalCode' in value) || value['postalCode'] === undefined) return false;
    if (!('prefectureCode' in value) || value['prefectureCode'] === undefined) return false;
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('addressLine1' in value) || value['addressLine1'] === undefined) return false;
    if (!('addressLine2' in value) || value['addressLine2'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    return true;
}

export function GuestCheckoutAddress1FromJSON(json: any): GuestCheckoutAddress1 {
    return GuestCheckoutAddress1FromJSONTyped(json, false);
}

export function GuestCheckoutAddress1FromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestCheckoutAddress1 {
    if (json == null) {
        return json;
    }
    return {
        
        'lastname': json['lastname'],
        'firstname': json['firstname'],
        'lastnameKana': json['lastnameKana'],
        'firstnameKana': json['firstnameKana'],
        'postalCode': json['postalCode'],
        'prefectureCode': PrefectureFromJSON(json['prefectureCode']),
        'city': json['city'],
        'addressLine1': json['addressLine1'],
        'addressLine2': json['addressLine2'],
        'phoneNumber': json['phoneNumber'],
    };
}

export function GuestCheckoutAddress1ToJSON(value?: GuestCheckoutAddress1 | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'lastname': value['lastname'],
        'firstname': value['firstname'],
        'lastnameKana': value['lastnameKana'],
        'firstnameKana': value['firstnameKana'],
        'postalCode': value['postalCode'],
        'prefectureCode': PrefectureToJSON(value['prefectureCode']),
        'city': value['city'],
        'addressLine1': value['addressLine1'],
        'addressLine2': value['addressLine2'],
        'phoneNumber': value['phoneNumber'],
    };
}


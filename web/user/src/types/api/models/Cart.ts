/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShippingType } from './ShippingType';
import {
    ShippingTypeFromJSON,
    ShippingTypeFromJSONTyped,
    ShippingTypeToJSON,
} from './ShippingType';
import type { ShippingSize } from './ShippingSize';
import {
    ShippingSizeFromJSON,
    ShippingSizeFromJSONTyped,
    ShippingSizeToJSON,
} from './ShippingSize';
import type { CartItem } from './CartItem';
import {
    CartItemFromJSON,
    CartItemFromJSONTyped,
    CartItemToJSON,
} from './CartItem';

/**
 * カート情報
 * @export
 * @interface Cart
 */
export interface Cart {
    /**
     * 箱の通番
     * @type {number}
     * @memberof Cart
     */
    number: number;
    /**
     * 
     * @type {ShippingType}
     * @memberof Cart
     */
    type: ShippingType;
    /**
     * 
     * @type {ShippingSize}
     * @memberof Cart
     */
    size: ShippingSize;
    /**
     * 箱の占有率
     * @type {number}
     * @memberof Cart
     */
    rate: number;
    /**
     * 
     * @type {Array<CartItem>}
     * @memberof Cart
     */
    items: Array<CartItem>;
    /**
     * コーディネータID
     * @type {string}
     * @memberof Cart
     */
    coordinatorId: string;
}



/**
 * Check if a given object implements the Cart interface.
 */
export function instanceOfCart(value: object): value is Cart {
    if (!('number' in value) || value['number'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('rate' in value) || value['rate'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('coordinatorId' in value) || value['coordinatorId'] === undefined) return false;
    return true;
}

export function CartFromJSON(json: any): Cart {
    return CartFromJSONTyped(json, false);
}

export function CartFromJSONTyped(json: any, ignoreDiscriminator: boolean): Cart {
    if (json == null) {
        return json;
    }
    return {
        
        'number': json['number'],
        'type': ShippingTypeFromJSON(json['type']),
        'size': ShippingSizeFromJSON(json['size']),
        'rate': json['rate'],
        'items': ((json['items'] as Array<any>).map(CartItemFromJSON)),
        'coordinatorId': json['coordinatorId'],
    };
}

export function CartToJSON(value?: Cart | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'number': value['number'],
        'type': ShippingTypeToJSON(value['type']),
        'size': ShippingSizeToJSON(value['size']),
        'rate': value['rate'],
        'items': ((value['items'] as Array<any>).map(CartItemToJSON)),
        'coordinatorId': value['coordinatorId'],
    };
}


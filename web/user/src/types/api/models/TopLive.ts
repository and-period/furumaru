/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoordinatorThumbnailsInner } from './CoordinatorThumbnailsInner';
import {
    CoordinatorThumbnailsInnerFromJSON,
    CoordinatorThumbnailsInnerFromJSONTyped,
    CoordinatorThumbnailsInnerToJSON,
} from './CoordinatorThumbnailsInner';
import type { ScheduleStatus } from './ScheduleStatus';
import {
    ScheduleStatusFromJSON,
    ScheduleStatusFromJSONTyped,
    ScheduleStatusToJSON,
} from './ScheduleStatus';
import type { TopLiveProductsInner } from './TopLiveProductsInner';
import {
    TopLiveProductsInnerFromJSON,
    TopLiveProductsInnerFromJSONTyped,
    TopLiveProductsInnerToJSON,
} from './TopLiveProductsInner';

/**
 * 開催中・開催予定のマルシェ情報
 * @export
 * @interface TopLive
 */
export interface TopLive {
    /**
     * 開催スケジュールID
     * @type {string}
     * @memberof TopLive
     */
    scheduleId: string;
    /**
     * 
     * @type {ScheduleStatus}
     * @memberof TopLive
     */
    status: ScheduleStatus;
    /**
     * タイトル
     * @type {string}
     * @memberof TopLive
     */
    title: string;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof TopLive
     */
    thumbnailUrl: string;
    /**
     * リサイズ済みサムネイルURL一覧
     * @type {Array<CoordinatorThumbnailsInner>}
     * @memberof TopLive
     */
    thumbnails: Array<CoordinatorThumbnailsInner>;
    /**
     * マルシェ開始日時 (unixtime)
     * @type {number}
     * @memberof TopLive
     */
    startAt: number;
    /**
     * マルシェ終了日時 (unixtime)
     * @type {number}
     * @memberof TopLive
     */
    endAt: number;
    /**
     * 販売商品一覧
     * @type {Array<TopLiveProductsInner>}
     * @memberof TopLive
     */
    products: Array<TopLiveProductsInner>;
}

/**
 * Check if a given object implements the TopLive interface.
 */
export function instanceOfTopLive(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "scheduleId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "thumbnailUrl" in value;
    isInstance = isInstance && "thumbnails" in value;
    isInstance = isInstance && "startAt" in value;
    isInstance = isInstance && "endAt" in value;
    isInstance = isInstance && "products" in value;

    return isInstance;
}

export function TopLiveFromJSON(json: any): TopLive {
    return TopLiveFromJSONTyped(json, false);
}

export function TopLiveFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopLive {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'scheduleId': json['scheduleId'],
        'status': ScheduleStatusFromJSON(json['status']),
        'title': json['title'],
        'thumbnailUrl': json['thumbnailUrl'],
        'thumbnails': ((json['thumbnails'] as Array<any>).map(CoordinatorThumbnailsInnerFromJSON)),
        'startAt': json['startAt'],
        'endAt': json['endAt'],
        'products': ((json['products'] as Array<any>).map(TopLiveProductsInnerFromJSON)),
    };
}

export function TopLiveToJSON(value?: TopLive | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'scheduleId': value.scheduleId,
        'status': ScheduleStatusToJSON(value.status),
        'title': value.title,
        'thumbnailUrl': value.thumbnailUrl,
        'thumbnails': ((value.thumbnails as Array<any>).map(CoordinatorThumbnailsInnerToJSON)),
        'startAt': value.startAt,
        'endAt': value.endAt,
        'products': ((value.products as Array<any>).map(TopLiveProductsInnerToJSON)),
    };
}


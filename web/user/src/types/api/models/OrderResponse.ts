/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
} from './Coordinator';
import type { Order } from './Order';
import {
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
} from './Order';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';
import type { Promotion } from './Promotion';
import {
    PromotionFromJSON,
    PromotionFromJSONTyped,
    PromotionToJSON,
} from './Promotion';

/**
 * 
 * @export
 * @interface OrderResponse
 */
export interface OrderResponse {
    /**
     * 
     * @type {Order}
     * @memberof OrderResponse
     */
    order: Order;
    /**
     * 
     * @type {Coordinator}
     * @memberof OrderResponse
     */
    coordinator: Coordinator;
    /**
     * 
     * @type {Promotion}
     * @memberof OrderResponse
     */
    promotion: Promotion;
    /**
     * 
     * @type {Array<Product>}
     * @memberof OrderResponse
     */
    products: Array<Product>;
}

/**
 * Check if a given object implements the OrderResponse interface.
 */
export function instanceOfOrderResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "coordinator" in value;
    isInstance = isInstance && "promotion" in value;
    isInstance = isInstance && "products" in value;

    return isInstance;
}

export function OrderResponseFromJSON(json: any): OrderResponse {
    return OrderResponseFromJSONTyped(json, false);
}

export function OrderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'order': OrderFromJSON(json['order']),
        'coordinator': CoordinatorFromJSON(json['coordinator']),
        'promotion': PromotionFromJSON(json['promotion']),
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
    };
}

export function OrderResponseToJSON(value?: OrderResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order': OrderToJSON(value.order),
        'coordinator': CoordinatorToJSON(value.coordinator),
        'promotion': PromotionToJSON(value.promotion),
        'products': ((value.products as Array<any>).map(ProductToJSON)),
    };
}


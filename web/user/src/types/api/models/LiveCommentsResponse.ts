/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LiveComment } from './LiveComment';
import {
    LiveCommentFromJSON,
    LiveCommentFromJSONTyped,
    LiveCommentToJSON,
} from './LiveComment';

/**
 * 
 * @export
 * @interface LiveCommentsResponse
 */
export interface LiveCommentsResponse {
    /**
     * コメント一覧
     * @type {Array<LiveComment>}
     * @memberof LiveCommentsResponse
     */
    comments: Array<LiveComment>;
    /**
     * 
     * @type {string}
     * @memberof LiveCommentsResponse
     */
    nextToken: string;
}

/**
 * Check if a given object implements the LiveCommentsResponse interface.
 */
export function instanceOfLiveCommentsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "comments" in value;
    isInstance = isInstance && "nextToken" in value;

    return isInstance;
}

export function LiveCommentsResponseFromJSON(json: any): LiveCommentsResponse {
    return LiveCommentsResponseFromJSONTyped(json, false);
}

export function LiveCommentsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveCommentsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'comments': ((json['comments'] as Array<any>).map(LiveCommentFromJSON)),
        'nextToken': json['nextToken'],
    };
}

export function LiveCommentsResponseToJSON(value?: LiveCommentsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comments': ((value.comments as Array<any>).map(LiveCommentToJSON)),
        'nextToken': value.nextToken,
    };
}


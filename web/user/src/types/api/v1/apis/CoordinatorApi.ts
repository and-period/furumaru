/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TypesCoordinatorResponse,
  TypesCoordinatorsResponse,
  UtilErrorResponse,
} from '../models/index';
import {
    TypesCoordinatorResponseFromJSON,
    TypesCoordinatorResponseToJSON,
    TypesCoordinatorsResponseFromJSON,
    TypesCoordinatorsResponseToJSON,
    UtilErrorResponseFromJSON,
    UtilErrorResponseToJSON,
} from '../models/index';

export interface CoordinatorsCoordinatorIdGetRequest {
    coordinatorId: string;
}

export interface CoordinatorsGetRequest {
    limit?: number;
    offset?: number;
}

/**
 * 
 */
export class CoordinatorApi extends runtime.BaseAPI {

    /**
     * コーディネータの詳細情報を取得します。
     * コーディネータ詳細取得
     */
    async coordinatorsCoordinatorIdGetRaw(requestParameters: CoordinatorsCoordinatorIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TypesCoordinatorResponse>> {
        if (requestParameters['coordinatorId'] == null) {
            throw new runtime.RequiredError(
                'coordinatorId',
                'Required parameter "coordinatorId" was null or undefined when calling coordinatorsCoordinatorIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/coordinators/{coordinatorId}`.replace(`{${"coordinatorId"}}`, encodeURIComponent(String(requestParameters['coordinatorId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TypesCoordinatorResponseFromJSON(jsonValue));
    }

    /**
     * コーディネータの詳細情報を取得します。
     * コーディネータ詳細取得
     */
    async coordinatorsCoordinatorIdGet(requestParameters: CoordinatorsCoordinatorIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TypesCoordinatorResponse> {
        const response = await this.coordinatorsCoordinatorIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * コーディネータの一覧を取得します。
     * コーディネータ一覧取得
     */
    async coordinatorsGetRaw(requestParameters: CoordinatorsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TypesCoordinatorsResponse>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/coordinators`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TypesCoordinatorsResponseFromJSON(jsonValue));
    }

    /**
     * コーディネータの一覧を取得します。
     * コーディネータ一覧取得
     */
    async coordinatorsGet(requestParameters: CoordinatorsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TypesCoordinatorsResponse> {
        const response = await this.coordinatorsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesScheduleDistributionMetadata } from './TypesScheduleDistributionMetadata';
import {
    TypesScheduleDistributionMetadataFromJSON,
    TypesScheduleDistributionMetadataFromJSONTyped,
    TypesScheduleDistributionMetadataToJSON,
} from './TypesScheduleDistributionMetadata';

/**
 * マルシェ開催情報
 * @export
 * @interface TypesSchedule
 */
export interface TypesSchedule {
    /**
     * コーディネータID
     * @type {string}
     * @memberof TypesSchedule
     */
    coordinatorId?: string;
    /**
     * 説明
     * @type {string}
     * @memberof TypesSchedule
     */
    description?: string;
    /**
     * 
     * @type {TypesScheduleDistributionMetadata}
     * @memberof TypesSchedule
     */
    distributionMedatada?: TypesScheduleDistributionMetadata;
    /**
     * 映像配信URL
     * @type {string}
     * @memberof TypesSchedule
     */
    distributionUrl?: string;
    /**
     * 配信終了日時
     * @type {number}
     * @memberof TypesSchedule
     */
    endAt?: number;
    /**
     * スケジュールID
     * @type {string}
     * @memberof TypesSchedule
     */
    id?: string;
    /**
     * 配信開始日時
     * @type {number}
     * @memberof TypesSchedule
     */
    startAt?: number;
    /**
     * 開催状況
     * @type {number}
     * @memberof TypesSchedule
     */
    status?: number;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof TypesSchedule
     */
    thumbnailUrl?: string;
    /**
     * タイトル
     * @type {string}
     * @memberof TypesSchedule
     */
    title?: string;
}

/**
 * Check if a given object implements the TypesSchedule interface.
 */
export function instanceOfTypesSchedule(value: object): value is TypesSchedule {
    return true;
}

export function TypesScheduleFromJSON(json: any): TypesSchedule {
    return TypesScheduleFromJSONTyped(json, false);
}

export function TypesScheduleFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesSchedule {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinatorId': json['coordinatorId'] == null ? undefined : json['coordinatorId'],
        'description': json['description'] == null ? undefined : json['description'],
        'distributionMedatada': json['distributionMedatada'] == null ? undefined : TypesScheduleDistributionMetadataFromJSON(json['distributionMedatada']),
        'distributionUrl': json['distributionUrl'] == null ? undefined : json['distributionUrl'],
        'endAt': json['endAt'] == null ? undefined : json['endAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'startAt': json['startAt'] == null ? undefined : json['startAt'],
        'status': json['status'] == null ? undefined : json['status'],
        'thumbnailUrl': json['thumbnailUrl'] == null ? undefined : json['thumbnailUrl'],
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function TypesScheduleToJSON(value?: TypesSchedule | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinatorId': value['coordinatorId'],
        'description': value['description'],
        'distributionMedatada': TypesScheduleDistributionMetadataToJSON(value['distributionMedatada']),
        'distributionUrl': value['distributionUrl'],
        'endAt': value['endAt'],
        'id': value['id'],
        'startAt': value['startAt'],
        'status': value['status'],
        'thumbnailUrl': value['thumbnailUrl'],
        'title': value['title'],
    };
}


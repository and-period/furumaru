/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCoordinator } from './TypesCoordinator';
import {
    TypesCoordinatorFromJSON,
    TypesCoordinatorFromJSONTyped,
    TypesCoordinatorToJSON,
} from './TypesCoordinator';
import type { TypesExperience } from './TypesExperience';
import {
    TypesExperienceFromJSON,
    TypesExperienceFromJSONTyped,
    TypesExperienceToJSON,
} from './TypesExperience';
import type { TypesOrder } from './TypesOrder';
import {
    TypesOrderFromJSON,
    TypesOrderFromJSONTyped,
    TypesOrderToJSON,
} from './TypesOrder';
import type { TypesProduct } from './TypesProduct';
import {
    TypesProductFromJSON,
    TypesProductFromJSONTyped,
    TypesProductToJSON,
} from './TypesProduct';
import type { TypesPromotion } from './TypesPromotion';
import {
    TypesPromotionFromJSON,
    TypesPromotionFromJSONTyped,
    TypesPromotionToJSON,
} from './TypesPromotion';

/**
 * 
 * @export
 * @interface TypesOrdersResponse
 */
export interface TypesOrdersResponse {
    /**
     * コーディネータ一覧
     * @type {Array<TypesCoordinator>}
     * @memberof TypesOrdersResponse
     */
    coordinators?: Array<TypesCoordinator>;
    /**
     * 体験一覧
     * @type {Array<TypesExperience>}
     * @memberof TypesOrdersResponse
     */
    experiences?: Array<TypesExperience>;
    /**
     * 注文履歴一覧
     * @type {Array<TypesOrder>}
     * @memberof TypesOrdersResponse
     */
    orders?: Array<TypesOrder>;
    /**
     * 商品一覧
     * @type {Array<TypesProduct>}
     * @memberof TypesOrdersResponse
     */
    products?: Array<TypesProduct>;
    /**
     * プロモーション一覧
     * @type {Array<TypesPromotion>}
     * @memberof TypesOrdersResponse
     */
    promotions?: Array<TypesPromotion>;
    /**
     * 合計数
     * @type {number}
     * @memberof TypesOrdersResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the TypesOrdersResponse interface.
 */
export function instanceOfTypesOrdersResponse(value: object): value is TypesOrdersResponse {
    return true;
}

export function TypesOrdersResponseFromJSON(json: any): TypesOrdersResponse {
    return TypesOrdersResponseFromJSONTyped(json, false);
}

export function TypesOrdersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesOrdersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': json['coordinators'] == null ? undefined : ((json['coordinators'] as Array<any>).map(TypesCoordinatorFromJSON)),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(TypesExperienceFromJSON)),
        'orders': json['orders'] == null ? undefined : ((json['orders'] as Array<any>).map(TypesOrderFromJSON)),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(TypesProductFromJSON)),
        'promotions': json['promotions'] == null ? undefined : ((json['promotions'] as Array<any>).map(TypesPromotionFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function TypesOrdersResponseToJSON(value?: TypesOrdersResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinators': value['coordinators'] == null ? undefined : ((value['coordinators'] as Array<any>).map(TypesCoordinatorToJSON)),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(TypesExperienceToJSON)),
        'orders': value['orders'] == null ? undefined : ((value['orders'] as Array<any>).map(TypesOrderToJSON)),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(TypesProductToJSON)),
        'promotions': value['promotions'] == null ? undefined : ((value['promotions'] as Array<any>).map(TypesPromotionToJSON)),
        'total': value['total'],
    };
}


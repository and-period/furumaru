/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GuestCheckoutAddress } from './GuestCheckoutAddress';
import {
    GuestCheckoutAddressFromJSON,
    GuestCheckoutAddressFromJSONTyped,
    GuestCheckoutAddressToJSON,
} from './GuestCheckoutAddress';
import type { CheckoutCreditCard } from './CheckoutCreditCard';
import {
    CheckoutCreditCardFromJSON,
    CheckoutCreditCardFromJSONTyped,
    CheckoutCreditCardToJSON,
} from './CheckoutCreditCard';

/**
 * 
 * @export
 * @interface GuestCheckoutExperienceRequest
 */
export interface GuestCheckoutExperienceRequest {
    /**
     * 大人人数
     * @type {number}
     * @memberof GuestCheckoutExperienceRequest
     */
    adultCount?: number;
    /**
     * 
     * @type {GuestCheckoutAddress}
     * @memberof GuestCheckoutExperienceRequest
     */
    billingAddress: GuestCheckoutAddress;
    /**
     * 決済完了後のリダイレクト先URL
     * @type {string}
     * @memberof GuestCheckoutExperienceRequest
     */
    callbackUrl: string;
    /**
     * 
     * @type {CheckoutCreditCard}
     * @memberof GuestCheckoutExperienceRequest
     */
    creditCard?: CheckoutCreditCard;
    /**
     * 小学生人数
     * @type {number}
     * @memberof GuestCheckoutExperienceRequest
     */
    elementarySchoolCount?: number;
    /**
     * メールアドレス
     * @type {string}
     * @memberof GuestCheckoutExperienceRequest
     */
    email: string;
    /**
     * 中学生人数
     * @type {number}
     * @memberof GuestCheckoutExperienceRequest
     */
    juniorHighSchoolCount?: number;
    /**
     * 支払い方法
     * @type {number}
     * @memberof GuestCheckoutExperienceRequest
     */
    paymentMethod: number;
    /**
     * 幼児人数
     * @type {number}
     * @memberof GuestCheckoutExperienceRequest
     */
    preschoolCount?: number;
    /**
     * プロモーションコード
     * @type {string}
     * @memberof GuestCheckoutExperienceRequest
     */
    promotionCode?: string;
    /**
     * 支払いキー(重複判定用)
     * @type {string}
     * @memberof GuestCheckoutExperienceRequest
     */
    requestId: string;
    /**
     * 体験希望日
     * @type {string}
     * @memberof GuestCheckoutExperienceRequest
     */
    requestedDate?: string;
    /**
     * 体験希望時間
     * @type {string}
     * @memberof GuestCheckoutExperienceRequest
     */
    requestedTime?: string;
    /**
     * シニア人数
     * @type {number}
     * @memberof GuestCheckoutExperienceRequest
     */
    seniorCount?: number;
    /**
     * 支払い合計金額（誤り検出用）
     * @type {number}
     * @memberof GuestCheckoutExperienceRequest
     */
    total?: number;
    /**
     * 交通手段
     * @type {string}
     * @memberof GuestCheckoutExperienceRequest
     */
    transportation?: string;
}

/**
 * Check if a given object implements the GuestCheckoutExperienceRequest interface.
 */
export function instanceOfGuestCheckoutExperienceRequest(value: object): value is GuestCheckoutExperienceRequest {
    if (!('billingAddress' in value) || value['billingAddress'] === undefined) return false;
    if (!('callbackUrl' in value) || value['callbackUrl'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('paymentMethod' in value) || value['paymentMethod'] === undefined) return false;
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    return true;
}

export function GuestCheckoutExperienceRequestFromJSON(json: any): GuestCheckoutExperienceRequest {
    return GuestCheckoutExperienceRequestFromJSONTyped(json, false);
}

export function GuestCheckoutExperienceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestCheckoutExperienceRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'adultCount': json['adultCount'] == null ? undefined : json['adultCount'],
        'billingAddress': GuestCheckoutAddressFromJSON(json['billingAddress']),
        'callbackUrl': json['callbackUrl'],
        'creditCard': json['creditCard'] == null ? undefined : CheckoutCreditCardFromJSON(json['creditCard']),
        'elementarySchoolCount': json['elementarySchoolCount'] == null ? undefined : json['elementarySchoolCount'],
        'email': json['email'],
        'juniorHighSchoolCount': json['juniorHighSchoolCount'] == null ? undefined : json['juniorHighSchoolCount'],
        'paymentMethod': json['paymentMethod'],
        'preschoolCount': json['preschoolCount'] == null ? undefined : json['preschoolCount'],
        'promotionCode': json['promotionCode'] == null ? undefined : json['promotionCode'],
        'requestId': json['requestId'],
        'requestedDate': json['requestedDate'] == null ? undefined : json['requestedDate'],
        'requestedTime': json['requestedTime'] == null ? undefined : json['requestedTime'],
        'seniorCount': json['seniorCount'] == null ? undefined : json['seniorCount'],
        'total': json['total'] == null ? undefined : json['total'],
        'transportation': json['transportation'] == null ? undefined : json['transportation'],
    };
}

export function GuestCheckoutExperienceRequestToJSON(value?: GuestCheckoutExperienceRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'adultCount': value['adultCount'],
        'billingAddress': GuestCheckoutAddressToJSON(value['billingAddress']),
        'callbackUrl': value['callbackUrl'],
        'creditCard': CheckoutCreditCardToJSON(value['creditCard']),
        'elementarySchoolCount': value['elementarySchoolCount'],
        'email': value['email'],
        'juniorHighSchoolCount': value['juniorHighSchoolCount'],
        'paymentMethod': value['paymentMethod'],
        'preschoolCount': value['preschoolCount'],
        'promotionCode': value['promotionCode'],
        'requestId': value['requestId'],
        'requestedDate': value['requestedDate'],
        'requestedTime': value['requestedTime'],
        'seniorCount': value['seniorCount'],
        'total': value['total'],
        'transportation': value['transportation'],
    };
}


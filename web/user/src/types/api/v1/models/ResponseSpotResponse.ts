/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseSpot } from './ResponseSpot';
import {
    ResponseSpotFromJSON,
    ResponseSpotFromJSONTyped,
    ResponseSpotToJSON,
} from './ResponseSpot';
import type { ResponseSpotType } from './ResponseSpotType';
import {
    ResponseSpotTypeFromJSON,
    ResponseSpotTypeFromJSONTyped,
    ResponseSpotTypeToJSON,
} from './ResponseSpotType';

/**
 * 
 * @export
 * @interface ResponseSpotResponse
 */
export interface ResponseSpotResponse {
    /**
     * 
     * @type {ResponseSpot}
     * @memberof ResponseSpotResponse
     */
    spot?: ResponseSpot;
    /**
     * 
     * @type {ResponseSpotType}
     * @memberof ResponseSpotResponse
     */
    spotType?: ResponseSpotType;
}

/**
 * Check if a given object implements the ResponseSpotResponse interface.
 */
export function instanceOfResponseSpotResponse(value: object): value is ResponseSpotResponse {
    return true;
}

export function ResponseSpotResponseFromJSON(json: any): ResponseSpotResponse {
    return ResponseSpotResponseFromJSONTyped(json, false);
}

export function ResponseSpotResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseSpotResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'spot': json['spot'] == null ? undefined : ResponseSpotFromJSON(json['spot']),
        'spotType': json['spotType'] == null ? undefined : ResponseSpotTypeFromJSON(json['spotType']),
    };
}

export function ResponseSpotResponseToJSON(value?: ResponseSpotResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'spot': ResponseSpotToJSON(value['spot']),
        'spotType': ResponseSpotTypeToJSON(value['spotType']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCoordinator } from './TypesCoordinator';
import {
    TypesCoordinatorFromJSON,
    TypesCoordinatorFromJSONTyped,
    TypesCoordinatorToJSON,
} from './TypesCoordinator';
import type { TypesExperience } from './TypesExperience';
import {
    TypesExperienceFromJSON,
    TypesExperienceFromJSONTyped,
    TypesExperienceToJSON,
} from './TypesExperience';
import type { TypesProduct } from './TypesProduct';
import {
    TypesProductFromJSON,
    TypesProductFromJSONTyped,
    TypesProductToJSON,
} from './TypesProduct';
import type { TypesVideo } from './TypesVideo';
import {
    TypesVideoFromJSON,
    TypesVideoFromJSONTyped,
    TypesVideoToJSON,
} from './TypesVideo';

/**
 * 
 * @export
 * @interface TypesVideoResponse
 */
export interface TypesVideoResponse {
    /**
     * 
     * @type {TypesCoordinator}
     * @memberof TypesVideoResponse
     */
    coordinator?: TypesCoordinator;
    /**
     * 体験一覧
     * @type {Array<TypesExperience>}
     * @memberof TypesVideoResponse
     */
    experiences?: Array<TypesExperience>;
    /**
     * 商品一覧
     * @type {Array<TypesProduct>}
     * @memberof TypesVideoResponse
     */
    products?: Array<TypesProduct>;
    /**
     * 
     * @type {TypesVideo}
     * @memberof TypesVideoResponse
     */
    video?: TypesVideo;
}

/**
 * Check if a given object implements the TypesVideoResponse interface.
 */
export function instanceOfTypesVideoResponse(value: object): value is TypesVideoResponse {
    return true;
}

export function TypesVideoResponseFromJSON(json: any): TypesVideoResponse {
    return TypesVideoResponseFromJSONTyped(json, false);
}

export function TypesVideoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesVideoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinator': json['coordinator'] == null ? undefined : TypesCoordinatorFromJSON(json['coordinator']),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(TypesExperienceFromJSON)),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(TypesProductFromJSON)),
        'video': json['video'] == null ? undefined : TypesVideoFromJSON(json['video']),
    };
}

export function TypesVideoResponseToJSON(value?: TypesVideoResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinator': TypesCoordinatorToJSON(value['coordinator']),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(TypesExperienceToJSON)),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(TypesProductToJSON)),
        'video': TypesVideoToJSON(value['video']),
    };
}


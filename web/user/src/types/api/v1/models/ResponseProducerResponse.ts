/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseExperience } from './ResponseExperience';
import {
    ResponseExperienceFromJSON,
    ResponseExperienceFromJSONTyped,
    ResponseExperienceToJSON,
} from './ResponseExperience';
import type { ResponseLiveSummary } from './ResponseLiveSummary';
import {
    ResponseLiveSummaryFromJSON,
    ResponseLiveSummaryFromJSONTyped,
    ResponseLiveSummaryToJSON,
} from './ResponseLiveSummary';
import type { ResponseProduct } from './ResponseProduct';
import {
    ResponseProductFromJSON,
    ResponseProductFromJSONTyped,
    ResponseProductToJSON,
} from './ResponseProduct';
import type { ResponseArchiveSummary } from './ResponseArchiveSummary';
import {
    ResponseArchiveSummaryFromJSON,
    ResponseArchiveSummaryFromJSONTyped,
    ResponseArchiveSummaryToJSON,
} from './ResponseArchiveSummary';
import type { ResponseProducer } from './ResponseProducer';
import {
    ResponseProducerFromJSON,
    ResponseProducerFromJSONTyped,
    ResponseProducerToJSON,
} from './ResponseProducer';

/**
 * 
 * @export
 * @interface ResponseProducerResponse
 */
export interface ResponseProducerResponse {
    /**
     * 過去のマルシェ一覧
     * @type {Array<ResponseArchiveSummary>}
     * @memberof ResponseProducerResponse
     */
    archives?: Array<ResponseArchiveSummary>;
    /**
     * 体験一覧
     * @type {Array<ResponseExperience>}
     * @memberof ResponseProducerResponse
     */
    experiences?: Array<ResponseExperience>;
    /**
     * 配信中・配信予定のマルシェ一覧
     * @type {Array<ResponseLiveSummary>}
     * @memberof ResponseProducerResponse
     */
    lives?: Array<ResponseLiveSummary>;
    /**
     * 
     * @type {ResponseProducer}
     * @memberof ResponseProducerResponse
     */
    producer?: ResponseProducer;
    /**
     * 商品一覧
     * @type {Array<ResponseProduct>}
     * @memberof ResponseProducerResponse
     */
    products?: Array<ResponseProduct>;
}

/**
 * Check if a given object implements the ResponseProducerResponse interface.
 */
export function instanceOfResponseProducerResponse(value: object): value is ResponseProducerResponse {
    return true;
}

export function ResponseProducerResponseFromJSON(json: any): ResponseProducerResponse {
    return ResponseProducerResponseFromJSONTyped(json, false);
}

export function ResponseProducerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseProducerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'archives': json['archives'] == null ? undefined : ((json['archives'] as Array<any>).map(ResponseArchiveSummaryFromJSON)),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(ResponseExperienceFromJSON)),
        'lives': json['lives'] == null ? undefined : ((json['lives'] as Array<any>).map(ResponseLiveSummaryFromJSON)),
        'producer': json['producer'] == null ? undefined : ResponseProducerFromJSON(json['producer']),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ResponseProductFromJSON)),
    };
}

export function ResponseProducerResponseToJSON(value?: ResponseProducerResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'archives': value['archives'] == null ? undefined : ((value['archives'] as Array<any>).map(ResponseArchiveSummaryToJSON)),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(ResponseExperienceToJSON)),
        'lives': value['lives'] == null ? undefined : ((value['lives'] as Array<any>).map(ResponseLiveSummaryToJSON)),
        'producer': ResponseProducerToJSON(value['producer']),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ResponseProductToJSON)),
    };
}


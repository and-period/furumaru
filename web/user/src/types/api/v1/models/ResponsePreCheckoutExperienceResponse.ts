/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseExperience } from './ResponseExperience';
import {
    ResponseExperienceFromJSON,
    ResponseExperienceFromJSONTyped,
    ResponseExperienceToJSON,
} from './ResponseExperience';
import type { ResponsePromotion } from './ResponsePromotion';
import {
    ResponsePromotionFromJSON,
    ResponsePromotionFromJSONTyped,
    ResponsePromotionToJSON,
} from './ResponsePromotion';

/**
 * 
 * @export
 * @interface ResponsePreCheckoutExperienceResponse
 */
export interface ResponsePreCheckoutExperienceResponse {
    /**
     * 割引金額(税込)
     * @type {number}
     * @memberof ResponsePreCheckoutExperienceResponse
     */
    discount?: number;
    /**
     * 
     * @type {ResponseExperience}
     * @memberof ResponsePreCheckoutExperienceResponse
     */
    experience?: ResponseExperience;
    /**
     * 
     * @type {ResponsePromotion}
     * @memberof ResponsePreCheckoutExperienceResponse
     */
    promotion?: ResponsePromotion;
    /**
     * 支払い時にAPIへ送信するキー(重複判定用)
     * @type {string}
     * @memberof ResponsePreCheckoutExperienceResponse
     */
    requestId?: string;
    /**
     * 購入金額(税込)
     * @type {number}
     * @memberof ResponsePreCheckoutExperienceResponse
     */
    subtotal?: number;
    /**
     * 合計金額(税込)
     * @type {number}
     * @memberof ResponsePreCheckoutExperienceResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the ResponsePreCheckoutExperienceResponse interface.
 */
export function instanceOfResponsePreCheckoutExperienceResponse(value: object): value is ResponsePreCheckoutExperienceResponse {
    return true;
}

export function ResponsePreCheckoutExperienceResponseFromJSON(json: any): ResponsePreCheckoutExperienceResponse {
    return ResponsePreCheckoutExperienceResponseFromJSONTyped(json, false);
}

export function ResponsePreCheckoutExperienceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponsePreCheckoutExperienceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'discount': json['discount'] == null ? undefined : json['discount'],
        'experience': json['experience'] == null ? undefined : ResponseExperienceFromJSON(json['experience']),
        'promotion': json['promotion'] == null ? undefined : ResponsePromotionFromJSON(json['promotion']),
        'requestId': json['requestId'] == null ? undefined : json['requestId'],
        'subtotal': json['subtotal'] == null ? undefined : json['subtotal'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function ResponsePreCheckoutExperienceResponseToJSON(value?: ResponsePreCheckoutExperienceResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'discount': value['discount'],
        'experience': ResponseExperienceToJSON(value['experience']),
        'promotion': ResponsePromotionToJSON(value['promotion']),
        'requestId': value['requestId'],
        'subtotal': value['subtotal'],
        'total': value['total'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseExperience } from './ResponseExperience';
import {
    ResponseExperienceFromJSON,
    ResponseExperienceFromJSONTyped,
    ResponseExperienceToJSON,
} from './ResponseExperience';
import type { ResponseProduct } from './ResponseProduct';
import {
    ResponseProductFromJSON,
    ResponseProductFromJSONTyped,
    ResponseProductToJSON,
} from './ResponseProduct';
import type { ResponseOrder } from './ResponseOrder';
import {
    ResponseOrderFromJSON,
    ResponseOrderFromJSONTyped,
    ResponseOrderToJSON,
} from './ResponseOrder';
import type { ResponsePromotion } from './ResponsePromotion';
import {
    ResponsePromotionFromJSON,
    ResponsePromotionFromJSONTyped,
    ResponsePromotionToJSON,
} from './ResponsePromotion';
import type { ResponseCoordinator } from './ResponseCoordinator';
import {
    ResponseCoordinatorFromJSON,
    ResponseCoordinatorFromJSONTyped,
    ResponseCoordinatorToJSON,
} from './ResponseCoordinator';

/**
 * 
 * @export
 * @interface ResponseOrdersResponse
 */
export interface ResponseOrdersResponse {
    /**
     * コーディネータ一覧
     * @type {Array<ResponseCoordinator>}
     * @memberof ResponseOrdersResponse
     */
    coordinators?: Array<ResponseCoordinator>;
    /**
     * 体験一覧
     * @type {Array<ResponseExperience>}
     * @memberof ResponseOrdersResponse
     */
    experiences?: Array<ResponseExperience>;
    /**
     * 注文履歴一覧
     * @type {Array<ResponseOrder>}
     * @memberof ResponseOrdersResponse
     */
    orders?: Array<ResponseOrder>;
    /**
     * 商品一覧
     * @type {Array<ResponseProduct>}
     * @memberof ResponseOrdersResponse
     */
    products?: Array<ResponseProduct>;
    /**
     * プロモーション一覧
     * @type {Array<ResponsePromotion>}
     * @memberof ResponseOrdersResponse
     */
    promotions?: Array<ResponsePromotion>;
    /**
     * 合計数
     * @type {number}
     * @memberof ResponseOrdersResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the ResponseOrdersResponse interface.
 */
export function instanceOfResponseOrdersResponse(value: object): value is ResponseOrdersResponse {
    return true;
}

export function ResponseOrdersResponseFromJSON(json: any): ResponseOrdersResponse {
    return ResponseOrdersResponseFromJSONTyped(json, false);
}

export function ResponseOrdersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseOrdersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': json['coordinators'] == null ? undefined : ((json['coordinators'] as Array<any>).map(ResponseCoordinatorFromJSON)),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(ResponseExperienceFromJSON)),
        'orders': json['orders'] == null ? undefined : ((json['orders'] as Array<any>).map(ResponseOrderFromJSON)),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ResponseProductFromJSON)),
        'promotions': json['promotions'] == null ? undefined : ((json['promotions'] as Array<any>).map(ResponsePromotionFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function ResponseOrdersResponseToJSON(value?: ResponseOrdersResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinators': value['coordinators'] == null ? undefined : ((value['coordinators'] as Array<any>).map(ResponseCoordinatorToJSON)),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(ResponseExperienceToJSON)),
        'orders': value['orders'] == null ? undefined : ((value['orders'] as Array<any>).map(ResponseOrderToJSON)),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ResponseProductToJSON)),
        'promotions': value['promotions'] == null ? undefined : ((value['promotions'] as Array<any>).map(ResponsePromotionToJSON)),
        'total': value['total'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCoordinator } from './TypesCoordinator';
import {
    TypesCoordinatorFromJSON,
    TypesCoordinatorFromJSONTyped,
    TypesCoordinatorToJSON,
} from './TypesCoordinator';
import type { TypesExperience } from './TypesExperience';
import {
    TypesExperienceFromJSON,
    TypesExperienceFromJSONTyped,
    TypesExperienceToJSON,
} from './TypesExperience';
import type { TypesProducer } from './TypesProducer';
import {
    TypesProducerFromJSON,
    TypesProducerFromJSONTyped,
    TypesProducerToJSON,
} from './TypesProducer';
import type { TypesExperienceType } from './TypesExperienceType';
import {
    TypesExperienceTypeFromJSON,
    TypesExperienceTypeFromJSONTyped,
    TypesExperienceTypeToJSON,
} from './TypesExperienceType';

/**
 * 
 * @export
 * @interface TypesExperienceResponse
 */
export interface TypesExperienceResponse {
    /**
     * 
     * @type {TypesCoordinator}
     * @memberof TypesExperienceResponse
     */
    coordinator?: TypesCoordinator;
    /**
     * 
     * @type {TypesExperience}
     * @memberof TypesExperienceResponse
     */
    experience?: TypesExperience;
    /**
     * 
     * @type {TypesExperienceType}
     * @memberof TypesExperienceResponse
     */
    experienceType?: TypesExperienceType;
    /**
     * 
     * @type {TypesProducer}
     * @memberof TypesExperienceResponse
     */
    producer?: TypesProducer;
}

/**
 * Check if a given object implements the TypesExperienceResponse interface.
 */
export function instanceOfTypesExperienceResponse(value: object): value is TypesExperienceResponse {
    return true;
}

export function TypesExperienceResponseFromJSON(json: any): TypesExperienceResponse {
    return TypesExperienceResponseFromJSONTyped(json, false);
}

export function TypesExperienceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesExperienceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinator': json['coordinator'] == null ? undefined : TypesCoordinatorFromJSON(json['coordinator']),
        'experience': json['experience'] == null ? undefined : TypesExperienceFromJSON(json['experience']),
        'experienceType': json['experienceType'] == null ? undefined : TypesExperienceTypeFromJSON(json['experienceType']),
        'producer': json['producer'] == null ? undefined : TypesProducerFromJSON(json['producer']),
    };
}

export function TypesExperienceResponseToJSON(value?: TypesExperienceResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinator': TypesCoordinatorToJSON(value['coordinator']),
        'experience': TypesExperienceToJSON(value['experience']),
        'experienceType': TypesExperienceTypeToJSON(value['experienceType']),
        'producer': TypesProducerToJSON(value['producer']),
    };
}


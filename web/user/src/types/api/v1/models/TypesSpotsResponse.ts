/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesSpot } from './TypesSpot';
import {
    TypesSpotFromJSON,
    TypesSpotFromJSONTyped,
    TypesSpotToJSON,
} from './TypesSpot';
import type { TypesSpotType } from './TypesSpotType';
import {
    TypesSpotTypeFromJSON,
    TypesSpotTypeFromJSONTyped,
    TypesSpotTypeToJSON,
} from './TypesSpotType';

/**
 * 
 * @export
 * @interface TypesSpotsResponse
 */
export interface TypesSpotsResponse {
    /**
     * スポット種別一覧
     * @type {Array<TypesSpotType>}
     * @memberof TypesSpotsResponse
     */
    spotTypes?: Array<TypesSpotType>;
    /**
     * スポット一覧
     * @type {Array<TypesSpot>}
     * @memberof TypesSpotsResponse
     */
    spots?: Array<TypesSpot>;
}

/**
 * Check if a given object implements the TypesSpotsResponse interface.
 */
export function instanceOfTypesSpotsResponse(value: object): value is TypesSpotsResponse {
    return true;
}

export function TypesSpotsResponseFromJSON(json: any): TypesSpotsResponse {
    return TypesSpotsResponseFromJSONTyped(json, false);
}

export function TypesSpotsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesSpotsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'spotTypes': json['spotTypes'] == null ? undefined : ((json['spotTypes'] as Array<any>).map(TypesSpotTypeFromJSON)),
        'spots': json['spots'] == null ? undefined : ((json['spots'] as Array<any>).map(TypesSpotFromJSON)),
    };
}

export function TypesSpotsResponseToJSON(value?: TypesSpotsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'spotTypes': value['spotTypes'] == null ? undefined : ((value['spotTypes'] as Array<any>).map(TypesSpotTypeToJSON)),
        'spots': value['spots'] == null ? undefined : ((value['spots'] as Array<any>).map(TypesSpotToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCoordinator } from './TypesCoordinator';
import {
    TypesCoordinatorFromJSON,
    TypesCoordinatorFromJSONTyped,
    TypesCoordinatorToJSON,
} from './TypesCoordinator';
import type { TypesExperience } from './TypesExperience';
import {
    TypesExperienceFromJSON,
    TypesExperienceFromJSONTyped,
    TypesExperienceToJSON,
} from './TypesExperience';
import type { TypesOrder } from './TypesOrder';
import {
    TypesOrderFromJSON,
    TypesOrderFromJSONTyped,
    TypesOrderToJSON,
} from './TypesOrder';
import type { TypesProduct } from './TypesProduct';
import {
    TypesProductFromJSON,
    TypesProductFromJSONTyped,
    TypesProductToJSON,
} from './TypesProduct';
import type { TypesPromotion } from './TypesPromotion';
import {
    TypesPromotionFromJSON,
    TypesPromotionFromJSONTyped,
    TypesPromotionToJSON,
} from './TypesPromotion';

/**
 * 
 * @export
 * @interface TypesOrderResponse
 */
export interface TypesOrderResponse {
    /**
     * 
     * @type {TypesCoordinator}
     * @memberof TypesOrderResponse
     */
    coordinator?: TypesCoordinator;
    /**
     * 
     * @type {TypesExperience}
     * @memberof TypesOrderResponse
     */
    experience?: TypesExperience;
    /**
     * 
     * @type {TypesOrder}
     * @memberof TypesOrderResponse
     */
    order?: TypesOrder;
    /**
     * 商品一覧
     * @type {Array<TypesProduct>}
     * @memberof TypesOrderResponse
     */
    products?: Array<TypesProduct>;
    /**
     * 
     * @type {TypesPromotion}
     * @memberof TypesOrderResponse
     */
    promotion?: TypesPromotion;
}

/**
 * Check if a given object implements the TypesOrderResponse interface.
 */
export function instanceOfTypesOrderResponse(value: object): value is TypesOrderResponse {
    return true;
}

export function TypesOrderResponseFromJSON(json: any): TypesOrderResponse {
    return TypesOrderResponseFromJSONTyped(json, false);
}

export function TypesOrderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesOrderResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinator': json['coordinator'] == null ? undefined : TypesCoordinatorFromJSON(json['coordinator']),
        'experience': json['experience'] == null ? undefined : TypesExperienceFromJSON(json['experience']),
        'order': json['order'] == null ? undefined : TypesOrderFromJSON(json['order']),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(TypesProductFromJSON)),
        'promotion': json['promotion'] == null ? undefined : TypesPromotionFromJSON(json['promotion']),
    };
}

export function TypesOrderResponseToJSON(value?: TypesOrderResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinator': TypesCoordinatorToJSON(value['coordinator']),
        'experience': TypesExperienceToJSON(value['experience']),
        'order': TypesOrderToJSON(value['order']),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(TypesProductToJSON)),
        'promotion': TypesPromotionToJSON(value['promotion']),
    };
}


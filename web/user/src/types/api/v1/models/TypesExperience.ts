/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesExperienceMedia } from './TypesExperienceMedia';
import {
    TypesExperienceMediaFromJSON,
    TypesExperienceMediaFromJSONTyped,
    TypesExperienceMediaToJSON,
} from './TypesExperienceMedia';
import type { TypesExperienceRate } from './TypesExperienceRate';
import {
    TypesExperienceRateFromJSON,
    TypesExperienceRateFromJSONTyped,
    TypesExperienceRateToJSON,
} from './TypesExperienceRate';

/**
 * 体験情報
 * @export
 * @interface TypesExperience
 */
export interface TypesExperience {
    /**
     * 営業終了時間
     * @type {string}
     * @memberof TypesExperience
     */
    businessCloseTime?: string;
    /**
     * 営業開始時間
     * @type {string}
     * @memberof TypesExperience
     */
    businessOpenTime?: string;
    /**
     * コーディネータID
     * @type {string}
     * @memberof TypesExperience
     */
    coordinatorId?: string;
    /**
     * 説明
     * @type {string}
     * @memberof TypesExperience
     */
    description?: string;
    /**
     * アクセス方法
     * @type {string}
     * @memberof TypesExperience
     */
    direction?: string;
    /**
     * 体験時間(分)
     * @type {number}
     * @memberof TypesExperience
     */
    duration?: number;
    /**
     * 募集終了日時
     * @type {number}
     * @memberof TypesExperience
     */
    endAt?: number;
    /**
     * 体験種別ID
     * @type {string}
     * @memberof TypesExperience
     */
    experienceTypeId?: string;
    /**
     * 開催場所(住所1)
     * @type {string}
     * @memberof TypesExperience
     */
    hostAddressLine1?: string;
    /**
     * 開催場所(住所2)
     * @type {string}
     * @memberof TypesExperience
     */
    hostAddressLine2?: string;
    /**
     * 開催場所(市区町村)
     * @type {string}
     * @memberof TypesExperience
     */
    hostCity?: string;
    /**
     * 開催場所(座標情報:緯度)
     * @type {number}
     * @memberof TypesExperience
     */
    hostLatitude?: number;
    /**
     * 開催場所(座標情報:経度)
     * @type {number}
     * @memberof TypesExperience
     */
    hostLongitude?: number;
    /**
     * 開催場所(郵便番号)
     * @type {string}
     * @memberof TypesExperience
     */
    hostPostalCode?: string;
    /**
     * 開催場所(都道府県)
     * @type {string}
     * @memberof TypesExperience
     */
    hostPrefecture?: string;
    /**
     * 体験ID
     * @type {string}
     * @memberof TypesExperience
     */
    id?: string;
    /**
     * メディア一覧
     * @type {Array<TypesExperienceMedia>}
     * @memberof TypesExperience
     */
    media?: Array<TypesExperienceMedia>;
    /**
     * 大人料金
     * @type {number}
     * @memberof TypesExperience
     */
    priceAdult?: number;
    /**
     * 小学生料金
     * @type {number}
     * @memberof TypesExperience
     */
    priceElementarySchool?: number;
    /**
     * 中学生料金
     * @type {number}
     * @memberof TypesExperience
     */
    priceJuniorHighSchool?: number;
    /**
     * 幼児料金
     * @type {number}
     * @memberof TypesExperience
     */
    pricePreschool?: number;
    /**
     * シニア料金
     * @type {number}
     * @memberof TypesExperience
     */
    priceSenior?: number;
    /**
     * プロデューサーID
     * @type {string}
     * @memberof TypesExperience
     */
    producerId?: string;
    /**
     * 紹介動画URL
     * @type {string}
     * @memberof TypesExperience
     */
    promotionVideoUrl?: string;
    /**
     * 
     * @type {TypesExperienceRate}
     * @memberof TypesExperience
     */
    rate?: TypesExperienceRate;
    /**
     * おすすめポイント1
     * @type {string}
     * @memberof TypesExperience
     */
    recommendedPoint1?: string;
    /**
     * おすすめポイント2
     * @type {string}
     * @memberof TypesExperience
     */
    recommendedPoint2?: string;
    /**
     * おすすめポイント3
     * @type {string}
     * @memberof TypesExperience
     */
    recommendedPoint3?: string;
    /**
     * 募集開始日時
     * @type {number}
     * @memberof TypesExperience
     */
    startAt?: number;
    /**
     * 販売状況
     * @type {number}
     * @memberof TypesExperience
     */
    status?: number;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof TypesExperience
     */
    thumbnailUrl?: string;
    /**
     * タイトル
     * @type {string}
     * @memberof TypesExperience
     */
    title?: string;
}

/**
 * Check if a given object implements the TypesExperience interface.
 */
export function instanceOfTypesExperience(value: object): value is TypesExperience {
    return true;
}

export function TypesExperienceFromJSON(json: any): TypesExperience {
    return TypesExperienceFromJSONTyped(json, false);
}

export function TypesExperienceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesExperience {
    if (json == null) {
        return json;
    }
    return {
        
        'businessCloseTime': json['businessCloseTime'] == null ? undefined : json['businessCloseTime'],
        'businessOpenTime': json['businessOpenTime'] == null ? undefined : json['businessOpenTime'],
        'coordinatorId': json['coordinatorId'] == null ? undefined : json['coordinatorId'],
        'description': json['description'] == null ? undefined : json['description'],
        'direction': json['direction'] == null ? undefined : json['direction'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'endAt': json['endAt'] == null ? undefined : json['endAt'],
        'experienceTypeId': json['experienceTypeId'] == null ? undefined : json['experienceTypeId'],
        'hostAddressLine1': json['hostAddressLine1'] == null ? undefined : json['hostAddressLine1'],
        'hostAddressLine2': json['hostAddressLine2'] == null ? undefined : json['hostAddressLine2'],
        'hostCity': json['hostCity'] == null ? undefined : json['hostCity'],
        'hostLatitude': json['hostLatitude'] == null ? undefined : json['hostLatitude'],
        'hostLongitude': json['hostLongitude'] == null ? undefined : json['hostLongitude'],
        'hostPostalCode': json['hostPostalCode'] == null ? undefined : json['hostPostalCode'],
        'hostPrefecture': json['hostPrefecture'] == null ? undefined : json['hostPrefecture'],
        'id': json['id'] == null ? undefined : json['id'],
        'media': json['media'] == null ? undefined : ((json['media'] as Array<any>).map(TypesExperienceMediaFromJSON)),
        'priceAdult': json['priceAdult'] == null ? undefined : json['priceAdult'],
        'priceElementarySchool': json['priceElementarySchool'] == null ? undefined : json['priceElementarySchool'],
        'priceJuniorHighSchool': json['priceJuniorHighSchool'] == null ? undefined : json['priceJuniorHighSchool'],
        'pricePreschool': json['pricePreschool'] == null ? undefined : json['pricePreschool'],
        'priceSenior': json['priceSenior'] == null ? undefined : json['priceSenior'],
        'producerId': json['producerId'] == null ? undefined : json['producerId'],
        'promotionVideoUrl': json['promotionVideoUrl'] == null ? undefined : json['promotionVideoUrl'],
        'rate': json['rate'] == null ? undefined : TypesExperienceRateFromJSON(json['rate']),
        'recommendedPoint1': json['recommendedPoint1'] == null ? undefined : json['recommendedPoint1'],
        'recommendedPoint2': json['recommendedPoint2'] == null ? undefined : json['recommendedPoint2'],
        'recommendedPoint3': json['recommendedPoint3'] == null ? undefined : json['recommendedPoint3'],
        'startAt': json['startAt'] == null ? undefined : json['startAt'],
        'status': json['status'] == null ? undefined : json['status'],
        'thumbnailUrl': json['thumbnailUrl'] == null ? undefined : json['thumbnailUrl'],
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function TypesExperienceToJSON(value?: TypesExperience | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'businessCloseTime': value['businessCloseTime'],
        'businessOpenTime': value['businessOpenTime'],
        'coordinatorId': value['coordinatorId'],
        'description': value['description'],
        'direction': value['direction'],
        'duration': value['duration'],
        'endAt': value['endAt'],
        'experienceTypeId': value['experienceTypeId'],
        'hostAddressLine1': value['hostAddressLine1'],
        'hostAddressLine2': value['hostAddressLine2'],
        'hostCity': value['hostCity'],
        'hostLatitude': value['hostLatitude'],
        'hostLongitude': value['hostLongitude'],
        'hostPostalCode': value['hostPostalCode'],
        'hostPrefecture': value['hostPrefecture'],
        'id': value['id'],
        'media': value['media'] == null ? undefined : ((value['media'] as Array<any>).map(TypesExperienceMediaToJSON)),
        'priceAdult': value['priceAdult'],
        'priceElementarySchool': value['priceElementarySchool'],
        'priceJuniorHighSchool': value['priceJuniorHighSchool'],
        'pricePreschool': value['pricePreschool'],
        'priceSenior': value['priceSenior'],
        'producerId': value['producerId'],
        'promotionVideoUrl': value['promotionVideoUrl'],
        'rate': TypesExperienceRateToJSON(value['rate']),
        'recommendedPoint1': value['recommendedPoint1'],
        'recommendedPoint2': value['recommendedPoint2'],
        'recommendedPoint3': value['recommendedPoint3'],
        'startAt': value['startAt'],
        'status': value['status'],
        'thumbnailUrl': value['thumbnailUrl'],
        'title': value['title'],
    };
}


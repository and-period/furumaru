/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesArchiveSummary } from './TypesArchiveSummary';
import {
    TypesArchiveSummaryFromJSON,
    TypesArchiveSummaryFromJSONTyped,
    TypesArchiveSummaryToJSON,
} from './TypesArchiveSummary';
import type { TypesCoordinator } from './TypesCoordinator';
import {
    TypesCoordinatorFromJSON,
    TypesCoordinatorFromJSONTyped,
    TypesCoordinatorToJSON,
} from './TypesCoordinator';
import type { TypesExperience } from './TypesExperience';
import {
    TypesExperienceFromJSON,
    TypesExperienceFromJSONTyped,
    TypesExperienceToJSON,
} from './TypesExperience';
import type { TypesProduct } from './TypesProduct';
import {
    TypesProductFromJSON,
    TypesProductFromJSONTyped,
    TypesProductToJSON,
} from './TypesProduct';
import type { TypesShipping } from './TypesShipping';
import {
    TypesShippingFromJSON,
    TypesShippingFromJSONTyped,
    TypesShippingToJSON,
} from './TypesShipping';
import type { TypesProducer } from './TypesProducer';
import {
    TypesProducerFromJSON,
    TypesProducerFromJSONTyped,
    TypesProducerToJSON,
} from './TypesProducer';
import type { TypesProductType } from './TypesProductType';
import {
    TypesProductTypeFromJSON,
    TypesProductTypeFromJSONTyped,
    TypesProductTypeToJSON,
} from './TypesProductType';
import type { TypesLiveSummary } from './TypesLiveSummary';
import {
    TypesLiveSummaryFromJSON,
    TypesLiveSummaryFromJSONTyped,
    TypesLiveSummaryToJSON,
} from './TypesLiveSummary';

/**
 * 
 * @export
 * @interface TypesCoordinatorResponse
 */
export interface TypesCoordinatorResponse {
    /**
     * 過去のマルシェ一覧
     * @type {Array<TypesArchiveSummary>}
     * @memberof TypesCoordinatorResponse
     */
    archives?: Array<TypesArchiveSummary>;
    /**
     * 
     * @type {TypesCoordinator}
     * @memberof TypesCoordinatorResponse
     */
    coordinator?: TypesCoordinator;
    /**
     * コーディネータに関連する体験一覧
     * @type {Array<TypesExperience>}
     * @memberof TypesCoordinatorResponse
     */
    experiences?: Array<TypesExperience>;
    /**
     * 配信中・配信予定のマルシェ一覧
     * @type {Array<TypesLiveSummary>}
     * @memberof TypesCoordinatorResponse
     */
    lives?: Array<TypesLiveSummary>;
    /**
     * 生産者一覧
     * @type {Array<TypesProducer>}
     * @memberof TypesCoordinatorResponse
     */
    producers?: Array<TypesProducer>;
    /**
     * 品目一覧
     * @type {Array<TypesProductType>}
     * @memberof TypesCoordinatorResponse
     */
    productTypes?: Array<TypesProductType>;
    /**
     * コーディネータに関連する商品一覧
     * @type {Array<TypesProduct>}
     * @memberof TypesCoordinatorResponse
     */
    products?: Array<TypesProduct>;
    /**
     * 
     * @type {TypesShipping}
     * @memberof TypesCoordinatorResponse
     */
    shipping?: TypesShipping;
}

/**
 * Check if a given object implements the TypesCoordinatorResponse interface.
 */
export function instanceOfTypesCoordinatorResponse(value: object): value is TypesCoordinatorResponse {
    return true;
}

export function TypesCoordinatorResponseFromJSON(json: any): TypesCoordinatorResponse {
    return TypesCoordinatorResponseFromJSONTyped(json, false);
}

export function TypesCoordinatorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesCoordinatorResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'archives': json['archives'] == null ? undefined : ((json['archives'] as Array<any>).map(TypesArchiveSummaryFromJSON)),
        'coordinator': json['coordinator'] == null ? undefined : TypesCoordinatorFromJSON(json['coordinator']),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(TypesExperienceFromJSON)),
        'lives': json['lives'] == null ? undefined : ((json['lives'] as Array<any>).map(TypesLiveSummaryFromJSON)),
        'producers': json['producers'] == null ? undefined : ((json['producers'] as Array<any>).map(TypesProducerFromJSON)),
        'productTypes': json['productTypes'] == null ? undefined : ((json['productTypes'] as Array<any>).map(TypesProductTypeFromJSON)),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(TypesProductFromJSON)),
        'shipping': json['shipping'] == null ? undefined : TypesShippingFromJSON(json['shipping']),
    };
}

export function TypesCoordinatorResponseToJSON(value?: TypesCoordinatorResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'archives': value['archives'] == null ? undefined : ((value['archives'] as Array<any>).map(TypesArchiveSummaryToJSON)),
        'coordinator': TypesCoordinatorToJSON(value['coordinator']),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(TypesExperienceToJSON)),
        'lives': value['lives'] == null ? undefined : ((value['lives'] as Array<any>).map(TypesLiveSummaryToJSON)),
        'producers': value['producers'] == null ? undefined : ((value['producers'] as Array<any>).map(TypesProducerToJSON)),
        'productTypes': value['productTypes'] == null ? undefined : ((value['productTypes'] as Array<any>).map(TypesProductTypeToJSON)),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(TypesProductToJSON)),
        'shipping': TypesShippingToJSON(value['shipping']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 体験レビュー
 * @export
 * @interface TypesExperienceReview
 */
export interface TypesExperienceReview {
    /**
     * アカウントID
     * @type {string}
     * @memberof TypesExperienceReview
     */
    accountId?: string;
    /**
     * コメント
     * @type {string}
     * @memberof TypesExperienceReview
     */
    comment?: string;
    /**
     * いまいち数
     * @type {number}
     * @memberof TypesExperienceReview
     */
    dislikeTotal?: number;
    /**
     * 体験ID
     * @type {string}
     * @memberof TypesExperienceReview
     */
    experienceId?: string;
    /**
     * 体験レビューID
     * @type {string}
     * @memberof TypesExperienceReview
     */
    id?: string;
    /**
     * いいね数
     * @type {number}
     * @memberof TypesExperienceReview
     */
    likeTotal?: number;
    /**
     * 投稿日時
     * @type {number}
     * @memberof TypesExperienceReview
     */
    publishedAt?: number;
    /**
     * 評価
     * @type {number}
     * @memberof TypesExperienceReview
     */
    rate?: number;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof TypesExperienceReview
     */
    thumbnailUrl?: string;
    /**
     * タイトル
     * @type {string}
     * @memberof TypesExperienceReview
     */
    title?: string;
    /**
     * ユーザーID
     * @type {string}
     * @memberof TypesExperienceReview
     */
    userId?: string;
    /**
     * ユーザー名
     * @type {string}
     * @memberof TypesExperienceReview
     */
    username?: string;
}

/**
 * Check if a given object implements the TypesExperienceReview interface.
 */
export function instanceOfTypesExperienceReview(value: object): value is TypesExperienceReview {
    return true;
}

export function TypesExperienceReviewFromJSON(json: any): TypesExperienceReview {
    return TypesExperienceReviewFromJSONTyped(json, false);
}

export function TypesExperienceReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesExperienceReview {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'dislikeTotal': json['dislikeTotal'] == null ? undefined : json['dislikeTotal'],
        'experienceId': json['experienceId'] == null ? undefined : json['experienceId'],
        'id': json['id'] == null ? undefined : json['id'],
        'likeTotal': json['likeTotal'] == null ? undefined : json['likeTotal'],
        'publishedAt': json['publishedAt'] == null ? undefined : json['publishedAt'],
        'rate': json['rate'] == null ? undefined : json['rate'],
        'thumbnailUrl': json['thumbnailUrl'] == null ? undefined : json['thumbnailUrl'],
        'title': json['title'] == null ? undefined : json['title'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'username': json['username'] == null ? undefined : json['username'],
    };
}

export function TypesExperienceReviewToJSON(value?: TypesExperienceReview | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accountId': value['accountId'],
        'comment': value['comment'],
        'dislikeTotal': value['dislikeTotal'],
        'experienceId': value['experienceId'],
        'id': value['id'],
        'likeTotal': value['likeTotal'],
        'publishedAt': value['publishedAt'],
        'rate': value['rate'],
        'thumbnailUrl': value['thumbnailUrl'],
        'title': value['title'],
        'userId': value['userId'],
        'username': value['username'],
    };
}


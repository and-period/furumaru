/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContactPriority } from './ContactPriority';
import {
    ContactPriorityFromJSON,
    ContactPriorityFromJSONTyped,
    ContactPriorityToJSON,
} from './ContactPriority';
import type { ContactStatus } from './ContactStatus';
import {
    ContactStatusFromJSON,
    ContactStatusFromJSONTyped,
    ContactStatusToJSON,
} from './ContactStatus';

/**
 * 
 * @export
 * @interface UpdateContactRequest
 */
export interface UpdateContactRequest {
    /**
     * 
     * @type {ContactStatus}
     * @memberof UpdateContactRequest
     */
    status: ContactStatus;
    /**
     * 
     * @type {ContactPriority}
     * @memberof UpdateContactRequest
     */
    priority: ContactPriority;
    /**
     * 対応メモ(2000文字まで)
     * @type {string}
     * @memberof UpdateContactRequest
     */
    note: string;
}

/**
 * Check if a given object implements the UpdateContactRequest interface.
 */
export function instanceOfUpdateContactRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "priority" in value;
    isInstance = isInstance && "note" in value;

    return isInstance;
}

export function UpdateContactRequestFromJSON(json: any): UpdateContactRequest {
    return UpdateContactRequestFromJSONTyped(json, false);
}

export function UpdateContactRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateContactRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': ContactStatusFromJSON(json['status']),
        'priority': ContactPriorityFromJSON(json['priority']),
        'note': json['note'],
    };
}

export function UpdateContactRequestToJSON(value?: UpdateContactRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': ContactStatusToJSON(value.status),
        'priority': ContactPriorityToJSON(value.priority),
        'note': value.note,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContactPriority } from './ContactPriority';
import {
    ContactPriorityFromJSON,
    ContactPriorityFromJSONTyped,
    ContactPriorityToJSON,
} from './ContactPriority';
import type { ContactStatus } from './ContactStatus';
import {
    ContactStatusFromJSON,
    ContactStatusFromJSONTyped,
    ContactStatusToJSON,
} from './ContactStatus';

/**
 * 
 * @export
 * @interface ContactResponse
 */
export interface ContactResponse {
    /**
     * お問い合わせID
     * @type {string}
     * @memberof ContactResponse
     */
    id: string;
    /**
     * 件名
     * @type {string}
     * @memberof ContactResponse
     */
    title: string;
    /**
     * 内容
     * @type {string}
     * @memberof ContactResponse
     */
    content: string;
    /**
     * 氏名
     * @type {string}
     * @memberof ContactResponse
     */
    username: string;
    /**
     * メールアドレス
     * @type {string}
     * @memberof ContactResponse
     */
    email: string;
    /**
     * 電話番号(国際番号 + 電話番号)
     * @type {string}
     * @memberof ContactResponse
     */
    phoneNumber: string;
    /**
     * 
     * @type {ContactStatus}
     * @memberof ContactResponse
     */
    status: ContactStatus;
    /**
     * 
     * @type {ContactPriority}
     * @memberof ContactResponse
     */
    priority: ContactPriority;
    /**
     * 対応時メモ
     * @type {string}
     * @memberof ContactResponse
     */
    note: string;
    /**
     * 登録日時 (unixtime)
     * @type {number}
     * @memberof ContactResponse
     */
    createdAt: number;
    /**
     * 更新日時 (unixtime)
     * @type {number}
     * @memberof ContactResponse
     */
    updatedAt: number;
}

/**
 * Check if a given object implements the ContactResponse interface.
 */
export function instanceOfContactResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "content" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "phoneNumber" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "priority" in value;
    isInstance = isInstance && "note" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function ContactResponseFromJSON(json: any): ContactResponse {
    return ContactResponseFromJSONTyped(json, false);
}

export function ContactResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'content': json['content'],
        'username': json['username'],
        'email': json['email'],
        'phoneNumber': json['phoneNumber'],
        'status': ContactStatusFromJSON(json['status']),
        'priority': ContactPriorityFromJSON(json['priority']),
        'note': json['note'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function ContactResponseToJSON(value?: ContactResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'content': value.content,
        'username': value.username,
        'email': value.email,
        'phoneNumber': value.phoneNumber,
        'status': ContactStatusToJSON(value.status),
        'priority': ContactPriorityToJSON(value.priority),
        'note': value.note,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}


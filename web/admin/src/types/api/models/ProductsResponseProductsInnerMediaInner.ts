/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductsResponseProductsInnerMediaInnerImagesInner } from './ProductsResponseProductsInnerMediaInnerImagesInner';
import {
    ProductsResponseProductsInnerMediaInnerImagesInnerFromJSON,
    ProductsResponseProductsInnerMediaInnerImagesInnerFromJSONTyped,
    ProductsResponseProductsInnerMediaInnerImagesInnerToJSON,
} from './ProductsResponseProductsInnerMediaInnerImagesInner';

/**
 * 
 * @export
 * @interface ProductsResponseProductsInnerMediaInner
 */
export interface ProductsResponseProductsInnerMediaInner {
    /**
     * メディアURL
     * @type {string}
     * @memberof ProductsResponseProductsInnerMediaInner
     */
    url: string;
    /**
     * サムネイルとして使用(1つまで)
     * @type {boolean}
     * @memberof ProductsResponseProductsInnerMediaInner
     */
    isThumbnail: boolean;
    /**
     * リサイズ済み画像URL一覧
     * @type {Array<ProductsResponseProductsInnerMediaInnerImagesInner>}
     * @memberof ProductsResponseProductsInnerMediaInner
     */
    images: Array<ProductsResponseProductsInnerMediaInnerImagesInner>;
}

/**
 * Check if a given object implements the ProductsResponseProductsInnerMediaInner interface.
 */
export function instanceOfProductsResponseProductsInnerMediaInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "isThumbnail" in value;
    isInstance = isInstance && "images" in value;

    return isInstance;
}

export function ProductsResponseProductsInnerMediaInnerFromJSON(json: any): ProductsResponseProductsInnerMediaInner {
    return ProductsResponseProductsInnerMediaInnerFromJSONTyped(json, false);
}

export function ProductsResponseProductsInnerMediaInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductsResponseProductsInnerMediaInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'isThumbnail': json['isThumbnail'],
        'images': ((json['images'] as Array<any>).map(ProductsResponseProductsInnerMediaInnerImagesInnerFromJSON)),
    };
}

export function ProductsResponseProductsInnerMediaInnerToJSON(value?: ProductsResponseProductsInnerMediaInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'isThumbnail': value.isThumbnail,
        'images': ((value.images as Array<any>).map(ProductsResponseProductsInnerMediaInnerImagesInnerToJSON)),
    };
}


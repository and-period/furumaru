/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductTypesResponseProductTypesInner } from './ProductTypesResponseProductTypesInner';
import {
    ProductTypesResponseProductTypesInnerFromJSON,
    ProductTypesResponseProductTypesInnerFromJSONTyped,
    ProductTypesResponseProductTypesInnerToJSON,
} from './ProductTypesResponseProductTypesInner';

/**
 * 
 * @export
 * @interface ProductTypesResponse
 */
export interface ProductTypesResponse {
    /**
     * 品目一覧
     * @type {Array<ProductTypesResponseProductTypesInner>}
     * @memberof ProductTypesResponse
     */
    productTypes: Array<ProductTypesResponseProductTypesInner>;
    /**
     * 合計数
     * @type {number}
     * @memberof ProductTypesResponse
     */
    total: number;
}

/**
 * Check if a given object implements the ProductTypesResponse interface.
 */
export function instanceOfProductTypesResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "productTypes" in value;
    isInstance = isInstance && "total" in value;

    return isInstance;
}

export function ProductTypesResponseFromJSON(json: any): ProductTypesResponse {
    return ProductTypesResponseFromJSONTyped(json, false);
}

export function ProductTypesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductTypesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productTypes': ((json['productTypes'] as Array<any>).map(ProductTypesResponseProductTypesInnerFromJSON)),
        'total': json['total'],
    };
}

export function ProductTypesResponseToJSON(value?: ProductTypesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productTypes': ((value.productTypes as Array<any>).map(ProductTypesResponseProductTypesInnerToJSON)),
        'total': value.total,
    };
}


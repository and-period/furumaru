/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DiscountType } from './DiscountType';
import {
    DiscountTypeFromJSON,
    DiscountTypeFromJSONTyped,
    DiscountTypeToJSON,
} from './DiscountType';

/**
 * 
 * @export
 * @interface PromotionsResponsePromotionsInner
 */
export interface PromotionsResponsePromotionsInner {
    /**
     * プロモーションID
     * @type {string}
     * @memberof PromotionsResponsePromotionsInner
     */
    id: string;
    /**
     * タイトル
     * @type {string}
     * @memberof PromotionsResponsePromotionsInner
     */
    title: string;
    /**
     * 詳細説明
     * @type {string}
     * @memberof PromotionsResponsePromotionsInner
     */
    description: string;
    /**
     * 公開フラグ
     * @type {boolean}
     * @memberof PromotionsResponsePromotionsInner
     */
    _public: boolean;
    /**
     * 公開フラグ
     * @type {number}
     * @memberof PromotionsResponsePromotionsInner
     */
    publishedAt: number;
    /**
     * 
     * @type {DiscountType}
     * @memberof PromotionsResponsePromotionsInner
     */
    discountType: DiscountType;
    /**
     * 割引額(単位:円/%)
     * @type {number}
     * @memberof PromotionsResponsePromotionsInner
     */
    discountRate: number;
    /**
     * クーポンコード
     * @type {string}
     * @memberof PromotionsResponsePromotionsInner
     */
    code: string;
    /**
     * クーポン利用可能開始日時(unixtime)
     * @type {number}
     * @memberof PromotionsResponsePromotionsInner
     */
    startAt: number;
    /**
     * クーポン利用可能終了日時(unixtime)
     * @type {number}
     * @memberof PromotionsResponsePromotionsInner
     */
    endAt: number;
    /**
     * 登録日時 (unixtime)
     * @type {number}
     * @memberof PromotionsResponsePromotionsInner
     */
    createdAt: number;
    /**
     * 更新日時 (unixtime)
     * @type {number}
     * @memberof PromotionsResponsePromotionsInner
     */
    updatedAt: number;
}

/**
 * Check if a given object implements the PromotionsResponsePromotionsInner interface.
 */
export function instanceOfPromotionsResponsePromotionsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "_public" in value;
    isInstance = isInstance && "publishedAt" in value;
    isInstance = isInstance && "discountType" in value;
    isInstance = isInstance && "discountRate" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "startAt" in value;
    isInstance = isInstance && "endAt" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function PromotionsResponsePromotionsInnerFromJSON(json: any): PromotionsResponsePromotionsInner {
    return PromotionsResponsePromotionsInnerFromJSONTyped(json, false);
}

export function PromotionsResponsePromotionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromotionsResponsePromotionsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        '_public': json['public'],
        'publishedAt': json['publishedAt'],
        'discountType': DiscountTypeFromJSON(json['discountType']),
        'discountRate': json['discountRate'],
        'code': json['code'],
        'startAt': json['startAt'],
        'endAt': json['endAt'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function PromotionsResponsePromotionsInnerToJSON(value?: PromotionsResponsePromotionsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'public': value._public,
        'publishedAt': value.publishedAt,
        'discountType': DiscountTypeToJSON(value.discountType),
        'discountRate': value.discountRate,
        'code': value.code,
        'startAt': value.startAt,
        'endAt': value.endAt,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}


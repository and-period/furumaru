/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NotificationTargetType } from './NotificationTargetType';
import {
    NotificationTargetTypeFromJSON,
    NotificationTargetTypeFromJSONTyped,
    NotificationTargetTypeToJSON,
} from './NotificationTargetType';

/**
 * 
 * @export
 * @interface UpdateNotificationRequest
 */
export interface UpdateNotificationRequest {
    /**
     * タイトル(128字まで)
     * @type {string}
     * @memberof UpdateNotificationRequest
     */
    title: string;
    /**
     * 本文(2000字まで)
     * @type {string}
     * @memberof UpdateNotificationRequest
     */
    body: string;
    /**
     * 掲載対象一覧(3つまで,全部指定の際は1,2,3)
     * @type {Array<NotificationTargetType>}
     * @memberof UpdateNotificationRequest
     */
    targets: Array<NotificationTargetType>;
    /**
     * 公開フラグ
     * @type {boolean}
     * @memberof UpdateNotificationRequest
     */
    _public: boolean;
    /**
     * 掲載開始日時
     * @type {number}
     * @memberof UpdateNotificationRequest
     */
    publishedAt: number;
}

/**
 * Check if a given object implements the UpdateNotificationRequest interface.
 */
export function instanceOfUpdateNotificationRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "body" in value;
    isInstance = isInstance && "targets" in value;
    isInstance = isInstance && "_public" in value;
    isInstance = isInstance && "publishedAt" in value;

    return isInstance;
}

export function UpdateNotificationRequestFromJSON(json: any): UpdateNotificationRequest {
    return UpdateNotificationRequestFromJSONTyped(json, false);
}

export function UpdateNotificationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateNotificationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'body': json['body'],
        'targets': ((json['targets'] as Array<any>).map(NotificationTargetTypeFromJSON)),
        '_public': json['public'],
        'publishedAt': json['publishedAt'],
    };
}

export function UpdateNotificationRequestToJSON(value?: UpdateNotificationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'body': value.body,
        'targets': ((value.targets as Array<any>).map(NotificationTargetTypeToJSON)),
        'public': value._public,
        'publishedAt': value.publishedAt,
    };
}


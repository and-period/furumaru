/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScheduleResponseLivesInner } from './ScheduleResponseLivesInner';
import {
    ScheduleResponseLivesInnerFromJSON,
    ScheduleResponseLivesInnerFromJSONTyped,
    ScheduleResponseLivesInnerToJSON,
} from './ScheduleResponseLivesInner';

/**
 * 
 * @export
 * @interface ScheduleResponse
 */
export interface ScheduleResponse {
    /**
     * スケジュールID
     * @type {string}
     * @memberof ScheduleResponse
     */
    id: string;
    /**
     * コーディネーターID
     * @type {string}
     * @memberof ScheduleResponse
     */
    coordinatorId: string;
    /**
     * 配送設定ID
     * @type {string}
     * @memberof ScheduleResponse
     */
    shippingId: string;
    /**
     * 配送設定名
     * @type {string}
     * @memberof ScheduleResponse
     */
    shippingName: string;
    /**
     * タイトル
     * @type {string}
     * @memberof ScheduleResponse
     */
    title: string;
    /**
     * 説明
     * @type {string}
     * @memberof ScheduleResponse
     */
    description: string;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof ScheduleResponse
     */
    thumnailURL: string;
    /**
     * ライブ開始日時 (unixtime)
     * @type {number}
     * @memberof ScheduleResponse
     */
    startAt: number;
    /**
     * ライブ終了日時 (unixtime)
     * @type {number}
     * @memberof ScheduleResponse
     */
    endAt: number;
    /**
     * キャンセルフラグ
     * @type {boolean}
     * @memberof ScheduleResponse
     */
    canceled: boolean;
    /**
     * 登録日時 (unixtime)
     * @type {number}
     * @memberof ScheduleResponse
     */
    createdAt: number;
    /**
     * 更新日時 (unixtime)
     * @type {number}
     * @memberof ScheduleResponse
     */
    updatedAt: number;
    /**
     * 
     * @type {Array<ScheduleResponseLivesInner>}
     * @memberof ScheduleResponse
     */
    lives: Array<ScheduleResponseLivesInner>;
}

/**
 * Check if a given object implements the ScheduleResponse interface.
 */
export function instanceOfScheduleResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "coordinatorId" in value;
    isInstance = isInstance && "shippingId" in value;
    isInstance = isInstance && "shippingName" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "thumnailURL" in value;
    isInstance = isInstance && "startAt" in value;
    isInstance = isInstance && "endAt" in value;
    isInstance = isInstance && "canceled" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "lives" in value;

    return isInstance;
}

export function ScheduleResponseFromJSON(json: any): ScheduleResponse {
    return ScheduleResponseFromJSONTyped(json, false);
}

export function ScheduleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'coordinatorId': json['coordinatorId'],
        'shippingId': json['shippingId'],
        'shippingName': json['shippingName'],
        'title': json['title'],
        'description': json['description'],
        'thumnailURL': json['thumnailURL'],
        'startAt': json['startAt'],
        'endAt': json['endAt'],
        'canceled': json['canceled'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'lives': ((json['lives'] as Array<any>).map(ScheduleResponseLivesInnerFromJSON)),
    };
}

export function ScheduleResponseToJSON(value?: ScheduleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'coordinatorId': value.coordinatorId,
        'shippingId': value.shippingId,
        'shippingName': value.shippingName,
        'title': value.title,
        'description': value.description,
        'thumnailURL': value.thumnailURL,
        'startAt': value.startAt,
        'endAt': value.endAt,
        'canceled': value.canceled,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'lives': ((value.lives as Array<any>).map(ScheduleResponseLivesInnerToJSON)),
    };
}


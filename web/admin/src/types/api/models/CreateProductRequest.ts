/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateProductRequestMediaInner } from './CreateProductRequestMediaInner';
import {
    CreateProductRequestMediaInnerFromJSON,
    CreateProductRequestMediaInnerFromJSONTyped,
    CreateProductRequestMediaInnerToJSON,
} from './CreateProductRequestMediaInner';
import type { DeliveryType } from './DeliveryType';
import {
    DeliveryTypeFromJSON,
    DeliveryTypeFromJSONTyped,
    DeliveryTypeToJSON,
} from './DeliveryType';

/**
 * 
 * @export
 * @interface CreateProductRequest
 */
export interface CreateProductRequest {
    /**
     * 商品名(128文字まで)
     * @type {string}
     * @memberof CreateProductRequest
     */
    name: string;
    /**
     * 商品説明(20000文字まで)
     * @type {string}
     * @memberof CreateProductRequest
     */
    description: string;
    /**
     * 生産者ID
     * @type {string}
     * @memberof CreateProductRequest
     */
    producerId: string;
    /**
     * 品目ID
     * @type {string}
     * @memberof CreateProductRequest
     */
    productTypeId: string;
    /**
     * 公開フラグ
     * @type {boolean}
     * @memberof CreateProductRequest
     */
    _public: boolean;
    /**
     * 在庫数(0以上)
     * @type {number}
     * @memberof CreateProductRequest
     */
    inventory: number;
    /**
     * 重量(0以上,kg単位:少数第1位まで)
     * @type {number}
     * @memberof CreateProductRequest
     */
    weight: number;
    /**
     * 数量単位(16文字まで)
     * @type {string}
     * @memberof CreateProductRequest
     */
    itemUnit: string;
    /**
     * 数量単位説明(64文字まで)
     * @type {string}
     * @memberof CreateProductRequest
     */
    itemDescription: string;
    /**
     * メディア一覧(8つまで)
     * @type {Array<CreateProductRequestMediaInner>}
     * @memberof CreateProductRequest
     */
    media: Array<CreateProductRequestMediaInner>;
    /**
     * 販売価格(0以上)
     * @type {number}
     * @memberof CreateProductRequest
     */
    price: number;
    /**
     * 
     * @type {DeliveryType}
     * @memberof CreateProductRequest
     */
    deliveryType: DeliveryType;
    /**
     * 箱の占有率(サイズ:60)(0以上,100以下)
     * @type {number}
     * @memberof CreateProductRequest
     */
    box60Rate: number;
    /**
     * 箱の占有率(サイズ:80)(0以上,100以下)
     * @type {number}
     * @memberof CreateProductRequest
     */
    box80Rate: number;
    /**
     * 箱の占有率(サイズ:100)(0以上,100以下)
     * @type {number}
     * @memberof CreateProductRequest
     */
    box100Rate: number;
    /**
     * 原産地(都道府県)(32文字まで)
     * @type {string}
     * @memberof CreateProductRequest
     */
    originPrefecture: string;
    /**
     * 原産地(市区町村)(32文字まで)
     * @type {string}
     * @memberof CreateProductRequest
     */
    originCity: string;
}

/**
 * Check if a given object implements the CreateProductRequest interface.
 */
export function instanceOfCreateProductRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "producerId" in value;
    isInstance = isInstance && "productTypeId" in value;
    isInstance = isInstance && "_public" in value;
    isInstance = isInstance && "inventory" in value;
    isInstance = isInstance && "weight" in value;
    isInstance = isInstance && "itemUnit" in value;
    isInstance = isInstance && "itemDescription" in value;
    isInstance = isInstance && "media" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "deliveryType" in value;
    isInstance = isInstance && "box60Rate" in value;
    isInstance = isInstance && "box80Rate" in value;
    isInstance = isInstance && "box100Rate" in value;
    isInstance = isInstance && "originPrefecture" in value;
    isInstance = isInstance && "originCity" in value;

    return isInstance;
}

export function CreateProductRequestFromJSON(json: any): CreateProductRequest {
    return CreateProductRequestFromJSONTyped(json, false);
}

export function CreateProductRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateProductRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'producerId': json['producerId'],
        'productTypeId': json['productTypeId'],
        '_public': json['public'],
        'inventory': json['inventory'],
        'weight': json['weight'],
        'itemUnit': json['itemUnit'],
        'itemDescription': json['itemDescription'],
        'media': ((json['media'] as Array<any>).map(CreateProductRequestMediaInnerFromJSON)),
        'price': json['price'],
        'deliveryType': DeliveryTypeFromJSON(json['deliveryType']),
        'box60Rate': json['box60Rate'],
        'box80Rate': json['box80Rate'],
        'box100Rate': json['box100Rate'],
        'originPrefecture': json['originPrefecture'],
        'originCity': json['originCity'],
    };
}

export function CreateProductRequestToJSON(value?: CreateProductRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'producerId': value.producerId,
        'productTypeId': value.productTypeId,
        'public': value._public,
        'inventory': value.inventory,
        'weight': value.weight,
        'itemUnit': value.itemUnit,
        'itemDescription': value.itemDescription,
        'media': ((value.media as Array<any>).map(CreateProductRequestMediaInnerToJSON)),
        'price': value.price,
        'deliveryType': DeliveryTypeToJSON(value.deliveryType),
        'box60Rate': value.box60Rate,
        'box80Rate': value.box80Rate,
        'box100Rate': value.box100Rate,
        'originPrefecture': value.originPrefecture,
        'originCity': value.originCity,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Prefecture } from './Prefecture';
import {
    PrefectureFromJSON,
    PrefectureFromJSONTyped,
    PrefectureToJSON,
} from './Prefecture';

/**
 * 
 * @export
 * @interface PostalCodeResponse
 */
export interface PostalCodeResponse {
    /**
     * 郵便番号
     * @type {string}
     * @memberof PostalCodeResponse
     */
    postalCode: string;
    /**
     * 
     * @type {Prefecture}
     * @memberof PostalCodeResponse
     */
    prefectureCode: Prefecture;
    /**
     * 都道府県名
     * @type {string}
     * @memberof PostalCodeResponse
     */
    prefecture: string;
    /**
     * 市区町村名
     * @type {string}
     * @memberof PostalCodeResponse
     */
    city: string;
    /**
     * 町域名
     * @type {string}
     * @memberof PostalCodeResponse
     */
    town: string;
}

/**
 * Check if a given object implements the PostalCodeResponse interface.
 */
export function instanceOfPostalCodeResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "postalCode" in value;
    isInstance = isInstance && "prefectureCode" in value;
    isInstance = isInstance && "prefecture" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "town" in value;

    return isInstance;
}

export function PostalCodeResponseFromJSON(json: any): PostalCodeResponse {
    return PostalCodeResponseFromJSONTyped(json, false);
}

export function PostalCodeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostalCodeResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'postalCode': json['postalCode'],
        'prefectureCode': PrefectureFromJSON(json['prefectureCode']),
        'prefecture': json['prefecture'],
        'city': json['city'],
        'town': json['town'],
    };
}

export function PostalCodeResponseToJSON(value?: PostalCodeResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'postalCode': value.postalCode,
        'prefectureCode': PrefectureToJSON(value.prefectureCode),
        'prefecture': value.prefecture,
        'city': value.city,
        'town': value.town,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NotificationsResponseNotificationsInner } from './NotificationsResponseNotificationsInner';
import {
    NotificationsResponseNotificationsInnerFromJSON,
    NotificationsResponseNotificationsInnerFromJSONTyped,
    NotificationsResponseNotificationsInnerToJSON,
} from './NotificationsResponseNotificationsInner';

/**
 * 
 * @export
 * @interface NotificationsResponse
 */
export interface NotificationsResponse {
    /**
     * お知らせ一覧
     * @type {Array<NotificationsResponseNotificationsInner>}
     * @memberof NotificationsResponse
     */
    notifications: Array<NotificationsResponseNotificationsInner>;
    /**
     * 合計数
     * @type {number}
     * @memberof NotificationsResponse
     */
    total: number;
}

/**
 * Check if a given object implements the NotificationsResponse interface.
 */
export function instanceOfNotificationsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "notifications" in value;
    isInstance = isInstance && "total" in value;

    return isInstance;
}

export function NotificationsResponseFromJSON(json: any): NotificationsResponse {
    return NotificationsResponseFromJSONTyped(json, false);
}

export function NotificationsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'notifications': ((json['notifications'] as Array<any>).map(NotificationsResponseNotificationsInnerFromJSON)),
        'total': json['total'],
    };
}

export function NotificationsResponseToJSON(value?: NotificationsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'notifications': ((value.notifications as Array<any>).map(NotificationsResponseNotificationsInnerToJSON)),
        'total': value.total,
    };
}


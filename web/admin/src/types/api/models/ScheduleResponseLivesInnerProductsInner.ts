/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateProductRequestMediaInner } from './CreateProductRequestMediaInner';
import {
    CreateProductRequestMediaInnerFromJSON,
    CreateProductRequestMediaInnerFromJSONTyped,
    CreateProductRequestMediaInnerToJSON,
} from './CreateProductRequestMediaInner';
import type { DeliveryType } from './DeliveryType';
import {
    DeliveryTypeFromJSON,
    DeliveryTypeFromJSONTyped,
    DeliveryTypeToJSON,
} from './DeliveryType';

/**
 * 
 * @export
 * @interface ScheduleResponseLivesInnerProductsInner
 */
export interface ScheduleResponseLivesInnerProductsInner {
    /**
     * 商品ID
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    id?: string;
    /**
     * 商品名
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    name?: string;
    /**
     * 商品説明
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    description?: string;
    /**
     * 生産者ID
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    producerId?: string;
    /**
     * 農家名
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    storeName?: string;
    /**
     * 商品種別ID
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    categoryId?: string;
    /**
     * 商品種別名
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    categoryName?: string;
    /**
     * 品目ID
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    productTypeId?: string;
    /**
     * 品目名
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    productTypeName?: string;
    /**
     * アイコンURL
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    productTypeIconUrl?: string;
    /**
     * 公開フラグ
     * @type {boolean}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    _public?: boolean;
    /**
     * 在庫数
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    inventory?: number;
    /**
     * 重量(kg:少数第1位まで)
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    weight?: number;
    /**
     * 数量単位
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    itemUnit?: string;
    /**
     * 数量単位説明
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    itemDescription?: string;
    /**
     * アイコンURL
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    iconUrl?: string;
    /**
     * 
     * @type {Array<CreateProductRequestMediaInner>}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    media?: Array<CreateProductRequestMediaInner>;
    /**
     * 販売価格
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    price?: number;
    /**
     * 
     * @type {DeliveryType}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    deliveryType?: DeliveryType;
    /**
     * 箱の占有率(サイズ:60)
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    box60Rate?: number;
    /**
     * 箱の占有率(サイズ:80)
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    box80Rate?: number;
    /**
     * 箱の占有率(サイズ:100)
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    box100Rate?: number;
    /**
     * 原産地(都道府県)
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    originPrefecture?: string;
    /**
     * 原産地(市区町村)
     * @type {string}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    originCity?: string;
    /**
     * 登録日時 (unixtime)
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    createdAt?: number;
    /**
     * 更新日時 (unixtime)
     * @type {number}
     * @memberof ScheduleResponseLivesInnerProductsInner
     */
    updatedAt?: number;
}

/**
 * Check if a given object implements the ScheduleResponseLivesInnerProductsInner interface.
 */
export function instanceOfScheduleResponseLivesInnerProductsInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScheduleResponseLivesInnerProductsInnerFromJSON(json: any): ScheduleResponseLivesInnerProductsInner {
    return ScheduleResponseLivesInnerProductsInnerFromJSONTyped(json, false);
}

export function ScheduleResponseLivesInnerProductsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduleResponseLivesInnerProductsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'producerId': !exists(json, 'producerId') ? undefined : json['producerId'],
        'storeName': !exists(json, 'storeName') ? undefined : json['storeName'],
        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],
        'categoryName': !exists(json, 'categoryName') ? undefined : json['categoryName'],
        'productTypeId': !exists(json, 'productTypeId') ? undefined : json['productTypeId'],
        'productTypeName': !exists(json, 'productTypeName') ? undefined : json['productTypeName'],
        'productTypeIconUrl': !exists(json, 'productTypeIconUrl') ? undefined : json['productTypeIconUrl'],
        '_public': !exists(json, 'public') ? undefined : json['public'],
        'inventory': !exists(json, 'inventory') ? undefined : json['inventory'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'itemUnit': !exists(json, 'itemUnit') ? undefined : json['itemUnit'],
        'itemDescription': !exists(json, 'itemDescription') ? undefined : json['itemDescription'],
        'iconUrl': !exists(json, 'iconUrl') ? undefined : json['iconUrl'],
        'media': !exists(json, 'media') ? undefined : ((json['media'] as Array<any>).map(CreateProductRequestMediaInnerFromJSON)),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'deliveryType': !exists(json, 'deliveryType') ? undefined : DeliveryTypeFromJSON(json['deliveryType']),
        'box60Rate': !exists(json, 'box60Rate') ? undefined : json['box60Rate'],
        'box80Rate': !exists(json, 'box80Rate') ? undefined : json['box80Rate'],
        'box100Rate': !exists(json, 'box100Rate') ? undefined : json['box100Rate'],
        'originPrefecture': !exists(json, 'originPrefecture') ? undefined : json['originPrefecture'],
        'originCity': !exists(json, 'originCity') ? undefined : json['originCity'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
    };
}

export function ScheduleResponseLivesInnerProductsInnerToJSON(value?: ScheduleResponseLivesInnerProductsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'producerId': value.producerId,
        'storeName': value.storeName,
        'categoryId': value.categoryId,
        'categoryName': value.categoryName,
        'productTypeId': value.productTypeId,
        'productTypeName': value.productTypeName,
        'productTypeIconUrl': value.productTypeIconUrl,
        'public': value._public,
        'inventory': value.inventory,
        'weight': value.weight,
        'itemUnit': value.itemUnit,
        'itemDescription': value.itemDescription,
        'iconUrl': value.iconUrl,
        'media': value.media === undefined ? undefined : ((value.media as Array<any>).map(CreateProductRequestMediaInnerToJSON)),
        'price': value.price,
        'deliveryType': DeliveryTypeToJSON(value.deliveryType),
        'box60Rate': value.box60Rate,
        'box80Rate': value.box80Rate,
        'box100Rate': value.box100Rate,
        'originPrefecture': value.originPrefecture,
        'originCity': value.originCity,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateCoordinatorRequest
 */
export interface UpdateCoordinatorRequest {
    /**
     * 姓(16文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    lastname: string;
    /**
     * 名(16文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    firstname: string;
    /**
     * 姓(かな)(ひらがな,32文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    lastnameKana: string;
    /**
     * 名(かな)(ひらがな,32文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    firstnameKana: string;
    /**
     * 会社名(64文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    companyName: string;
    /**
     * 店舗名(64文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    storeName: string;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    thumbnailUrl?: string;
    /**
     * ヘッダー画像URL
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    headerUrl?: string;
    /**
     * Twitterアカウント(15文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    twitterAccount?: string;
    /**
     * Instagramアカウント(30文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    instagramAccount?: string;
    /**
     * Facebookアカウント(50文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    facebookAccount?: string;
    /**
     * 電話番号 (国際番号 + 電話番号)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    phoneNumber: string;
    /**
     * 郵便番号(ハイフンなし)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    postalCode: string;
    /**
     * 都道府県(32文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    prefecture: string;
    /**
     * 市区町村(32文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    city: string;
    /**
     * 町名・番地(64文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    addressLine1: string;
    /**
     * ビル名・号室など(64文字まで)
     * @type {string}
     * @memberof UpdateCoordinatorRequest
     */
    addressLine2: string;
}

/**
 * Check if a given object implements the UpdateCoordinatorRequest interface.
 */
export function instanceOfUpdateCoordinatorRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lastname" in value;
    isInstance = isInstance && "firstname" in value;
    isInstance = isInstance && "lastnameKana" in value;
    isInstance = isInstance && "firstnameKana" in value;
    isInstance = isInstance && "companyName" in value;
    isInstance = isInstance && "storeName" in value;
    isInstance = isInstance && "phoneNumber" in value;
    isInstance = isInstance && "postalCode" in value;
    isInstance = isInstance && "prefecture" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "addressLine1" in value;
    isInstance = isInstance && "addressLine2" in value;

    return isInstance;
}

export function UpdateCoordinatorRequestFromJSON(json: any): UpdateCoordinatorRequest {
    return UpdateCoordinatorRequestFromJSONTyped(json, false);
}

export function UpdateCoordinatorRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateCoordinatorRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastname': json['lastname'],
        'firstname': json['firstname'],
        'lastnameKana': json['lastnameKana'],
        'firstnameKana': json['firstnameKana'],
        'companyName': json['companyName'],
        'storeName': json['storeName'],
        'thumbnailUrl': !exists(json, 'thumbnailUrl') ? undefined : json['thumbnailUrl'],
        'headerUrl': !exists(json, 'headerUrl') ? undefined : json['headerUrl'],
        'twitterAccount': !exists(json, 'twitterAccount') ? undefined : json['twitterAccount'],
        'instagramAccount': !exists(json, 'instagramAccount') ? undefined : json['instagramAccount'],
        'facebookAccount': !exists(json, 'facebookAccount') ? undefined : json['facebookAccount'],
        'phoneNumber': json['phoneNumber'],
        'postalCode': json['postalCode'],
        'prefecture': json['prefecture'],
        'city': json['city'],
        'addressLine1': json['addressLine1'],
        'addressLine2': json['addressLine2'],
    };
}

export function UpdateCoordinatorRequestToJSON(value?: UpdateCoordinatorRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastname': value.lastname,
        'firstname': value.firstname,
        'lastnameKana': value.lastnameKana,
        'firstnameKana': value.firstnameKana,
        'companyName': value.companyName,
        'storeName': value.storeName,
        'thumbnailUrl': value.thumbnailUrl,
        'headerUrl': value.headerUrl,
        'twitterAccount': value.twitterAccount,
        'instagramAccount': value.instagramAccount,
        'facebookAccount': value.facebookAccount,
        'phoneNumber': value.phoneNumber,
        'postalCode': value.postalCode,
        'prefecture': value.prefecture,
        'city': value.city,
        'addressLine1': value.addressLine1,
        'addressLine2': value.addressLine2,
    };
}


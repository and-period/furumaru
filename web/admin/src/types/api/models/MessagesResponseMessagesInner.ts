/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ管理者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MessageType } from './MessageType';
import {
    MessageTypeFromJSON,
    MessageTypeFromJSONTyped,
    MessageTypeToJSON,
} from './MessageType';

/**
 * 
 * @export
 * @interface MessagesResponseMessagesInner
 */
export interface MessagesResponseMessagesInner {
    /**
     * メッセージID
     * @type {string}
     * @memberof MessagesResponseMessagesInner
     */
    id: string;
    /**
     * 
     * @type {MessageType}
     * @memberof MessagesResponseMessagesInner
     */
    type: MessageType;
    /**
     * メッセージ件名
     * @type {string}
     * @memberof MessagesResponseMessagesInner
     */
    title: string;
    /**
     * メッセージ内容
     * @type {string}
     * @memberof MessagesResponseMessagesInner
     */
    body: string;
    /**
     * 遷移先リンク
     * @type {string}
     * @memberof MessagesResponseMessagesInner
     */
    link: string;
    /**
     * 既読フラグ
     * @type {boolean}
     * @memberof MessagesResponseMessagesInner
     */
    read: boolean;
    /**
     * 受信日時 (unixtime)
     * @type {number}
     * @memberof MessagesResponseMessagesInner
     */
    receivedAt: number;
    /**
     * 登録日時 (unixtime)
     * @type {number}
     * @memberof MessagesResponseMessagesInner
     */
    createdAt: number;
    /**
     * 更新日時 (unixtime)
     * @type {number}
     * @memberof MessagesResponseMessagesInner
     */
    updatedAt: number;
}

/**
 * Check if a given object implements the MessagesResponseMessagesInner interface.
 */
export function instanceOfMessagesResponseMessagesInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "body" in value;
    isInstance = isInstance && "link" in value;
    isInstance = isInstance && "read" in value;
    isInstance = isInstance && "receivedAt" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function MessagesResponseMessagesInnerFromJSON(json: any): MessagesResponseMessagesInner {
    return MessagesResponseMessagesInnerFromJSONTyped(json, false);
}

export function MessagesResponseMessagesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessagesResponseMessagesInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': MessageTypeFromJSON(json['type']),
        'title': json['title'],
        'body': json['body'],
        'link': json['link'],
        'read': json['read'],
        'receivedAt': json['receivedAt'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function MessagesResponseMessagesInnerToJSON(value?: MessagesResponseMessagesInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': MessageTypeToJSON(value.type),
        'title': value.title,
        'body': value.body,
        'link': value.link,
        'read': value.read,
        'receivedAt': value.receivedAt,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
    };
}


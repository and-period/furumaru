/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ContactReadResponse,
  CreateContactReadRequest,
  ErrorResponse,
} from '../models/index';
import {
    ContactReadResponseFromJSON,
    ContactReadResponseToJSON,
    CreateContactReadRequestFromJSON,
    CreateContactReadRequestToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models/index';

export interface V1ContactReadsPostRequest {
    createContactReadRequest: CreateContactReadRequest;
}

/**
 * 
 */
export class ContactReadApi extends runtime.BaseAPI {

    /**
     * お問い合わせの既読状態を登録します。
     * お問い合わせ既読登録
     */
    async v1ContactReadsPostRaw(requestParameters: V1ContactReadsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactReadResponse>> {
        if (requestParameters['createContactReadRequest'] == null) {
            throw new runtime.RequiredError(
                'createContactReadRequest',
                'Required parameter "createContactReadRequest" was null or undefined when calling v1ContactReadsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerauth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/v1/contact-reads`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateContactReadRequestToJSON(requestParameters['createContactReadRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ContactReadResponseFromJSON(jsonValue));
    }

    /**
     * お問い合わせの既読状態を登録します。
     * お問い合わせ既読登録
     */
    async v1ContactReadsPost(requestParameters: V1ContactReadsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactReadResponse> {
        const response = await this.v1ContactReadsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  PaymentSystemsResponse,
  UpdatePaymentSystemRequest,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PaymentSystemsResponseFromJSON,
    PaymentSystemsResponseToJSON,
    UpdatePaymentSystemRequestFromJSON,
    UpdatePaymentSystemRequestToJSON,
} from '../models/index';

export interface V1PaymentSystemsMethodTypePatchRequest {
    methodType: number;
    updatePaymentSystemRequest: UpdatePaymentSystemRequest;
}

/**
 * 
 */
export class PaymentSystemApi extends runtime.BaseAPI {

    /**
     * 決済手段毎のシステム状態一覧を取得します。
     * 決済システム一覧取得
     */
    async v1PaymentSystemsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaymentSystemsResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerauth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/v1/payment-systems`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PaymentSystemsResponseFromJSON(jsonValue));
    }

    /**
     * 決済手段毎のシステム状態一覧を取得します。
     * 決済システム一覧取得
     */
    async v1PaymentSystemsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaymentSystemsResponse> {
        const response = await this.v1PaymentSystemsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 指定された決済手段のシステム状態を更新します。
     * 決済システム更新
     */
    async v1PaymentSystemsMethodTypePatchRaw(requestParameters: V1PaymentSystemsMethodTypePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['methodType'] == null) {
            throw new runtime.RequiredError(
                'methodType',
                'Required parameter "methodType" was null or undefined when calling v1PaymentSystemsMethodTypePatch().'
            );
        }

        if (requestParameters['updatePaymentSystemRequest'] == null) {
            throw new runtime.RequiredError(
                'updatePaymentSystemRequest',
                'Required parameter "updatePaymentSystemRequest" was null or undefined when calling v1PaymentSystemsMethodTypePatch().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerauth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/v1/payment-systems/{methodType}`;
        urlPath = urlPath.replace(`{${"methodType"}}`, encodeURIComponent(String(requestParameters['methodType'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdatePaymentSystemRequestToJSON(requestParameters['updatePaymentSystemRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 指定された決済手段のシステム状態を更新します。
     * 決済システム更新
     */
    async v1PaymentSystemsMethodTypePatch(requestParameters: V1PaymentSystemsMethodTypePatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.v1PaymentSystemsMethodTypePatchRaw(requestParameters, initOverrides);
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CallbackAuthYoutubeBroadcastRequest,
  CreateYoutubeBroadcastRequest,
  ErrorResponse,
  GuestBroadcastResponse,
} from '../models/index';
import {
    CallbackAuthYoutubeBroadcastRequestFromJSON,
    CallbackAuthYoutubeBroadcastRequestToJSON,
    CreateYoutubeBroadcastRequestFromJSON,
    CreateYoutubeBroadcastRequestToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    GuestBroadcastResponseFromJSON,
    GuestBroadcastResponseToJSON,
} from '../models/index';

export interface V1GuestsSchedulesBroadcastsYoutubeAuthCompletePostRequest {
    callbackAuthYoutubeBroadcastRequest: CallbackAuthYoutubeBroadcastRequest;
}

export interface V1GuestsSchedulesBroadcastsYoutubePostRequest {
    createYoutubeBroadcastRequest: CreateYoutubeBroadcastRequest;
}

/**
 * 
 */
export class GuestApi extends runtime.BaseAPI {

    /**
     * セッションIDを使用してゲスト向けのライブ配信情報を取得します。
     * ゲスト用ライブ配信情報取得
     */
    async v1GuestsSchedulesBroadcastsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestBroadcastResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/guests/schedules/-/broadcasts`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GuestBroadcastResponseFromJSON(jsonValue));
    }

    /**
     * セッションIDを使用してゲスト向けのライブ配信情報を取得します。
     * ゲスト用ライブ配信情報取得
     */
    async v1GuestsSchedulesBroadcastsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestBroadcastResponse> {
        const response = await this.v1GuestsSchedulesBroadcastsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Youtube認証完了後のコールバック処理を行います。
     * マルシェライブ配信のYoutube認証後処理
     */
    async v1GuestsSchedulesBroadcastsYoutubeAuthCompletePostRaw(requestParameters: V1GuestsSchedulesBroadcastsYoutubeAuthCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuestBroadcastResponse>> {
        if (requestParameters['callbackAuthYoutubeBroadcastRequest'] == null) {
            throw new runtime.RequiredError(
                'callbackAuthYoutubeBroadcastRequest',
                'Required parameter "callbackAuthYoutubeBroadcastRequest" was null or undefined when calling v1GuestsSchedulesBroadcastsYoutubeAuthCompletePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v1/guests/schedules/-/broadcasts/youtube/auth/complete`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CallbackAuthYoutubeBroadcastRequestToJSON(requestParameters['callbackAuthYoutubeBroadcastRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GuestBroadcastResponseFromJSON(jsonValue));
    }

    /**
     * Youtube認証完了後のコールバック処理を行います。
     * マルシェライブ配信のYoutube認証後処理
     */
    async v1GuestsSchedulesBroadcastsYoutubeAuthCompletePost(requestParameters: V1GuestsSchedulesBroadcastsYoutubeAuthCompletePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuestBroadcastResponse> {
        const response = await this.v1GuestsSchedulesBroadcastsYoutubeAuthCompletePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Youtube側でライブ配信を作成します。
     * マルシェライブ配信のYoutube連携
     */
    async v1GuestsSchedulesBroadcastsYoutubePostRaw(requestParameters: V1GuestsSchedulesBroadcastsYoutubePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['createYoutubeBroadcastRequest'] == null) {
            throw new runtime.RequiredError(
                'createYoutubeBroadcastRequest',
                'Required parameter "createYoutubeBroadcastRequest" was null or undefined when calling v1GuestsSchedulesBroadcastsYoutubePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v1/guests/schedules/-/broadcasts/youtube`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateYoutubeBroadcastRequestToJSON(requestParameters['createYoutubeBroadcastRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Youtube側でライブ配信を作成します。
     * マルシェライブ配信のYoutube連携
     */
    async v1GuestsSchedulesBroadcastsYoutubePost(requestParameters: V1GuestsSchedulesBroadcastsYoutubePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.v1GuestsSchedulesBroadcastsYoutubePostRaw(requestParameters, initOverrides);
    }

}

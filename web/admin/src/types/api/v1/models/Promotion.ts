/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DiscountType } from './DiscountType';
import {
    DiscountTypeFromJSON,
    DiscountTypeFromJSONTyped,
    DiscountTypeToJSON,
    DiscountTypeToJSONTyped,
} from './DiscountType';
import type { PromotionStatus } from './PromotionStatus';
import {
    PromotionStatusFromJSON,
    PromotionStatusFromJSONTyped,
    PromotionStatusToJSON,
    PromotionStatusToJSONTyped,
} from './PromotionStatus';
import type { PromotionTargetType } from './PromotionTargetType';
import {
    PromotionTargetTypeFromJSON,
    PromotionTargetTypeFromJSONTyped,
    PromotionTargetTypeToJSON,
    PromotionTargetTypeToJSONTyped,
} from './PromotionTargetType';

/**
 * プロモーション情報
 * @export
 * @interface Promotion
 */
export interface Promotion {
    /**
     * クーポンコード
     * @type {string}
     * @memberof Promotion
     */
    code: string;
    /**
     * 登録日時
     * @type {number}
     * @memberof Promotion
     */
    createdAt: number;
    /**
     * 詳細説明
     * @type {string}
     * @memberof Promotion
     */
    description: string;
    /**
     * 割引額(%/円)
     * @type {number}
     * @memberof Promotion
     */
    discountRate: number;
    /**
     * 
     * @type {DiscountType}
     * @memberof Promotion
     */
    discountType: DiscountType;
    /**
     * クーポン使用可能日時(終了)
     * @type {number}
     * @memberof Promotion
     */
    endAt: number;
    /**
     * プロモーションID
     * @type {string}
     * @memberof Promotion
     */
    id: string;
    /**
     * 公開フラグ
     * @type {boolean}
     * @memberof Promotion
     */
    _public: boolean;
    /**
     * 店舗ID
     * @type {string}
     * @memberof Promotion
     */
    shopId: string;
    /**
     * クーポン使用可能日時(開始)
     * @type {number}
     * @memberof Promotion
     */
    startAt: number;
    /**
     * 
     * @type {PromotionStatus}
     * @memberof Promotion
     */
    status: PromotionStatus;
    /**
     * 
     * @type {PromotionTargetType}
     * @memberof Promotion
     */
    targetType: PromotionTargetType;
    /**
     * タイトル
     * @type {string}
     * @memberof Promotion
     */
    title: string;
    /**
     * 更新日時
     * @type {number}
     * @memberof Promotion
     */
    updatedAt: number;
    /**
     * 使用による割引合計額
     * @type {number}
     * @memberof Promotion
     */
    usedAmount: number;
    /**
     * 使用回数
     * @type {number}
     * @memberof Promotion
     */
    usedCount: number;
}



/**
 * Check if a given object implements the Promotion interface.
 */
export function instanceOfPromotion(value: object): value is Promotion {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('discountRate' in value) || value['discountRate'] === undefined) return false;
    if (!('discountType' in value) || value['discountType'] === undefined) return false;
    if (!('endAt' in value) || value['endAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('_public' in value) || value['_public'] === undefined) return false;
    if (!('shopId' in value) || value['shopId'] === undefined) return false;
    if (!('startAt' in value) || value['startAt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('targetType' in value) || value['targetType'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('usedAmount' in value) || value['usedAmount'] === undefined) return false;
    if (!('usedCount' in value) || value['usedCount'] === undefined) return false;
    return true;
}

export function PromotionFromJSON(json: any): Promotion {
    return PromotionFromJSONTyped(json, false);
}

export function PromotionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Promotion {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'createdAt': json['createdAt'],
        'description': json['description'],
        'discountRate': json['discountRate'],
        'discountType': DiscountTypeFromJSON(json['discountType']),
        'endAt': json['endAt'],
        'id': json['id'],
        '_public': json['public'],
        'shopId': json['shopId'],
        'startAt': json['startAt'],
        'status': PromotionStatusFromJSON(json['status']),
        'targetType': PromotionTargetTypeFromJSON(json['targetType']),
        'title': json['title'],
        'updatedAt': json['updatedAt'],
        'usedAmount': json['usedAmount'],
        'usedCount': json['usedCount'],
    };
}

export function PromotionToJSON(json: any): Promotion {
    return PromotionToJSONTyped(json, false);
}

export function PromotionToJSONTyped(value?: Promotion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'createdAt': value['createdAt'],
        'description': value['description'],
        'discountRate': value['discountRate'],
        'discountType': DiscountTypeToJSON(value['discountType']),
        'endAt': value['endAt'],
        'id': value['id'],
        'public': value['_public'],
        'shopId': value['shopId'],
        'startAt': value['startAt'],
        'status': PromotionStatusToJSON(value['status']),
        'targetType': PromotionTargetTypeToJSON(value['targetType']),
        'title': value['title'],
        'updatedAt': value['updatedAt'],
        'usedAmount': value['usedAmount'],
        'usedCount': value['usedCount'],
    };
}


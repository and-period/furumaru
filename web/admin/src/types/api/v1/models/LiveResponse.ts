/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Producer } from './Producer';
import {
    ProducerFromJSON,
    ProducerFromJSONTyped,
    ProducerToJSON,
    ProducerToJSONTyped,
} from './Producer';
import type { Live } from './Live';
import {
    LiveFromJSON,
    LiveFromJSONTyped,
    LiveToJSON,
    LiveToJSONTyped,
} from './Live';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface LiveResponse
 */
export interface LiveResponse {
    /**
     * 
     * @type {Live}
     * @memberof LiveResponse
     */
    live: Live;
    /**
     * 
     * @type {Producer}
     * @memberof LiveResponse
     */
    producer: Producer;
    /**
     * 商品一覧
     * @type {Array<Product>}
     * @memberof LiveResponse
     */
    products: Array<Product>;
}

/**
 * Check if a given object implements the LiveResponse interface.
 */
export function instanceOfLiveResponse(value: object): value is LiveResponse {
    if (!('live' in value) || value['live'] === undefined) return false;
    if (!('producer' in value) || value['producer'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    return true;
}

export function LiveResponseFromJSON(json: any): LiveResponse {
    return LiveResponseFromJSONTyped(json, false);
}

export function LiveResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'live': LiveFromJSON(json['live']),
        'producer': ProducerFromJSON(json['producer']),
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
    };
}

export function LiveResponseToJSON(json: any): LiveResponse {
    return LiveResponseToJSONTyped(json, false);
}

export function LiveResponseToJSONTyped(value?: LiveResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'live': LiveToJSON(value['live']),
        'producer': ProducerToJSON(value['producer']),
        'products': ((value['products'] as Array<any>).map(ProductToJSON)),
    };
}


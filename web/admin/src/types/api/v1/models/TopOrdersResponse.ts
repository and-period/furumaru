/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TopOrderSalesTrend } from './TopOrderSalesTrend';
import {
    TopOrderSalesTrendFromJSON,
    TopOrderSalesTrendFromJSONTyped,
    TopOrderSalesTrendToJSON,
    TopOrderSalesTrendToJSONTyped,
} from './TopOrderSalesTrend';
import type { TopOrderValue } from './TopOrderValue';
import {
    TopOrderValueFromJSON,
    TopOrderValueFromJSONTyped,
    TopOrderValueToJSON,
    TopOrderValueToJSONTyped,
} from './TopOrderValue';
import type { TopOrderPayment } from './TopOrderPayment';
import {
    TopOrderPaymentFromJSON,
    TopOrderPaymentFromJSONTyped,
    TopOrderPaymentToJSON,
    TopOrderPaymentToJSONTyped,
} from './TopOrderPayment';

/**
 * 
 * @export
 * @interface TopOrdersResponse
 */
export interface TopOrdersResponse {
    /**
     * 終了日時
     * @type {number}
     * @memberof TopOrdersResponse
     */
    endAt: number;
    /**
     * 
     * @type {TopOrderValue}
     * @memberof TopOrdersResponse
     */
    orders: TopOrderValue;
    /**
     * 支払い方法別情報
     * @type {Array<TopOrderPayment>}
     * @memberof TopOrdersResponse
     */
    payments: Array<TopOrderPayment>;
    /**
     * 期間種別
     * @type {string}
     * @memberof TopOrdersResponse
     */
    periodType: string;
    /**
     * 
     * @type {TopOrderValue}
     * @memberof TopOrdersResponse
     */
    sales: TopOrderValue;
    /**
     * 売上推移（グラフ描画用）
     * @type {Array<TopOrderSalesTrend>}
     * @memberof TopOrdersResponse
     */
    salesTrends: Array<TopOrderSalesTrend>;
    /**
     * 開始日時
     * @type {number}
     * @memberof TopOrdersResponse
     */
    startAt: number;
    /**
     * 
     * @type {TopOrderValue}
     * @memberof TopOrdersResponse
     */
    users: TopOrderValue;
}

/**
 * Check if a given object implements the TopOrdersResponse interface.
 */
export function instanceOfTopOrdersResponse(value: object): value is TopOrdersResponse {
    if (!('endAt' in value) || value['endAt'] === undefined) return false;
    if (!('orders' in value) || value['orders'] === undefined) return false;
    if (!('payments' in value) || value['payments'] === undefined) return false;
    if (!('periodType' in value) || value['periodType'] === undefined) return false;
    if (!('sales' in value) || value['sales'] === undefined) return false;
    if (!('salesTrends' in value) || value['salesTrends'] === undefined) return false;
    if (!('startAt' in value) || value['startAt'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function TopOrdersResponseFromJSON(json: any): TopOrdersResponse {
    return TopOrdersResponseFromJSONTyped(json, false);
}

export function TopOrdersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopOrdersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'endAt': json['endAt'],
        'orders': TopOrderValueFromJSON(json['orders']),
        'payments': ((json['payments'] as Array<any>).map(TopOrderPaymentFromJSON)),
        'periodType': json['periodType'],
        'sales': TopOrderValueFromJSON(json['sales']),
        'salesTrends': ((json['salesTrends'] as Array<any>).map(TopOrderSalesTrendFromJSON)),
        'startAt': json['startAt'],
        'users': TopOrderValueFromJSON(json['users']),
    };
}

export function TopOrdersResponseToJSON(json: any): TopOrdersResponse {
    return TopOrdersResponseToJSONTyped(json, false);
}

export function TopOrdersResponseToJSONTyped(value?: TopOrdersResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endAt': value['endAt'],
        'orders': TopOrderValueToJSON(value['orders']),
        'payments': ((value['payments'] as Array<any>).map(TopOrderPaymentToJSON)),
        'periodType': value['periodType'],
        'sales': TopOrderValueToJSON(value['sales']),
        'salesTrends': ((value['salesTrends'] as Array<any>).map(TopOrderSalesTrendToJSON)),
        'startAt': value['startAt'],
        'users': TopOrderValueToJSON(value['users']),
    };
}


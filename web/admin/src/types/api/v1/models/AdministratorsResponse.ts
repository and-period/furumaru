/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Administrator } from './Administrator';
import {
    AdministratorFromJSON,
    AdministratorFromJSONTyped,
    AdministratorToJSON,
    AdministratorToJSONTyped,
} from './Administrator';

/**
 * 
 * @export
 * @interface AdministratorsResponse
 */
export interface AdministratorsResponse {
    /**
     * システム管理者一覧
     * @type {Array<Administrator>}
     * @memberof AdministratorsResponse
     */
    administrators: Array<Administrator>;
    /**
     * 合計数
     * @type {number}
     * @memberof AdministratorsResponse
     */
    total: number;
}

/**
 * Check if a given object implements the AdministratorsResponse interface.
 */
export function instanceOfAdministratorsResponse(value: object): value is AdministratorsResponse {
    if (!('administrators' in value) || value['administrators'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function AdministratorsResponseFromJSON(json: any): AdministratorsResponse {
    return AdministratorsResponseFromJSONTyped(json, false);
}

export function AdministratorsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdministratorsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'administrators': ((json['administrators'] as Array<any>).map(AdministratorFromJSON)),
        'total': json['total'],
    };
}

export function AdministratorsResponseToJSON(json: any): AdministratorsResponse {
    return AdministratorsResponseToJSONTyped(json, false);
}

export function AdministratorsResponseToJSONTyped(value?: AdministratorsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'administrators': ((value['administrators'] as Array<any>).map(AdministratorToJSON)),
        'total': value['total'],
    };
}


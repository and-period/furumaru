/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Schedule } from './Schedule';
import {
    ScheduleFromJSON,
    ScheduleFromJSONTyped,
    ScheduleToJSON,
    ScheduleToJSONTyped,
} from './Schedule';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
    CoordinatorToJSONTyped,
} from './Coordinator';

/**
 * 
 * @export
 * @interface SchedulesResponse
 */
export interface SchedulesResponse {
    /**
     * コーディネータ一覧
     * @type {Array<Coordinator>}
     * @memberof SchedulesResponse
     */
    coordinators: Array<Coordinator>;
    /**
     * マルシェ開催一覧
     * @type {Array<Schedule>}
     * @memberof SchedulesResponse
     */
    schedules: Array<Schedule>;
    /**
     * 合計数
     * @type {number}
     * @memberof SchedulesResponse
     */
    total: number;
}

/**
 * Check if a given object implements the SchedulesResponse interface.
 */
export function instanceOfSchedulesResponse(value: object): value is SchedulesResponse {
    if (!('coordinators' in value) || value['coordinators'] === undefined) return false;
    if (!('schedules' in value) || value['schedules'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function SchedulesResponseFromJSON(json: any): SchedulesResponse {
    return SchedulesResponseFromJSONTyped(json, false);
}

export function SchedulesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchedulesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': ((json['coordinators'] as Array<any>).map(CoordinatorFromJSON)),
        'schedules': ((json['schedules'] as Array<any>).map(ScheduleFromJSON)),
        'total': json['total'],
    };
}

export function SchedulesResponseToJSON(json: any): SchedulesResponse {
    return SchedulesResponseToJSONTyped(json, false);
}

export function SchedulesResponseToJSONTyped(value?: SchedulesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'coordinators': ((value['coordinators'] as Array<any>).map(CoordinatorToJSON)),
        'schedules': ((value['schedules'] as Array<any>).map(ScheduleToJSON)),
        'total': value['total'],
    };
}


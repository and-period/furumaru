/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Admin } from './Admin';
import {
    AdminFromJSON,
    AdminFromJSONTyped,
    AdminToJSON,
    AdminToJSONTyped,
} from './Admin';
import type { Notification } from './Notification';
import {
    NotificationFromJSON,
    NotificationFromJSONTyped,
    NotificationToJSON,
    NotificationToJSONTyped,
} from './Notification';

/**
 * 
 * @export
 * @interface NotificationsResponse
 */
export interface NotificationsResponse {
    /**
     * 登録者情報一覧
     * @type {Array<Admin>}
     * @memberof NotificationsResponse
     */
    admins: Array<Admin>;
    /**
     * お知らせ一覧
     * @type {Array<Notification>}
     * @memberof NotificationsResponse
     */
    notifications: Array<Notification>;
    /**
     * お知らせ合計数
     * @type {number}
     * @memberof NotificationsResponse
     */
    total: number;
}

/**
 * Check if a given object implements the NotificationsResponse interface.
 */
export function instanceOfNotificationsResponse(value: object): value is NotificationsResponse {
    if (!('admins' in value) || value['admins'] === undefined) return false;
    if (!('notifications' in value) || value['notifications'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function NotificationsResponseFromJSON(json: any): NotificationsResponse {
    return NotificationsResponseFromJSONTyped(json, false);
}

export function NotificationsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'admins': ((json['admins'] as Array<any>).map(AdminFromJSON)),
        'notifications': ((json['notifications'] as Array<any>).map(NotificationFromJSON)),
        'total': json['total'],
    };
}

export function NotificationsResponseToJSON(json: any): NotificationsResponse {
    return NotificationsResponseToJSONTyped(json, false);
}

export function NotificationsResponseToJSONTyped(value?: NotificationsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'admins': ((value['admins'] as Array<any>).map(AdminToJSON)),
        'notifications': ((value['notifications'] as Array<any>).map(NotificationToJSON)),
        'total': value['total'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { Producer } from './Producer';
import {
    ProducerFromJSON,
    ProducerFromJSONTyped,
    ProducerToJSON,
    ProducerToJSONTyped,
} from './Producer';
import type { Spot } from './Spot';
import {
    SpotFromJSON,
    SpotFromJSONTyped,
    SpotToJSON,
    SpotToJSONTyped,
} from './Spot';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
    CoordinatorToJSONTyped,
} from './Coordinator';
import type { SpotType } from './SpotType';
import {
    SpotTypeFromJSON,
    SpotTypeFromJSONTyped,
    SpotTypeToJSON,
    SpotTypeToJSONTyped,
} from './SpotType';

/**
 * 
 * @export
 * @interface SpotsResponse
 */
export interface SpotsResponse {
    /**
     * コーディネータ一覧
     * @type {Array<Coordinator>}
     * @memberof SpotsResponse
     */
    coordinators: Array<Coordinator>;
    /**
     * 生産者一覧
     * @type {Array<Producer>}
     * @memberof SpotsResponse
     */
    producers: Array<Producer>;
    /**
     * スポット種別一覧
     * @type {Array<SpotType>}
     * @memberof SpotsResponse
     */
    spotTypes: Array<SpotType>;
    /**
     * スポット一覧
     * @type {Array<Spot>}
     * @memberof SpotsResponse
     */
    spots: Array<Spot>;
    /**
     * 合計数
     * @type {number}
     * @memberof SpotsResponse
     */
    total: number;
    /**
     * ユーザ一覧
     * @type {Array<User>}
     * @memberof SpotsResponse
     */
    users: Array<User>;
}

/**
 * Check if a given object implements the SpotsResponse interface.
 */
export function instanceOfSpotsResponse(value: object): value is SpotsResponse {
    if (!('coordinators' in value) || value['coordinators'] === undefined) return false;
    if (!('producers' in value) || value['producers'] === undefined) return false;
    if (!('spotTypes' in value) || value['spotTypes'] === undefined) return false;
    if (!('spots' in value) || value['spots'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('users' in value) || value['users'] === undefined) return false;
    return true;
}

export function SpotsResponseFromJSON(json: any): SpotsResponse {
    return SpotsResponseFromJSONTyped(json, false);
}

export function SpotsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpotsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': ((json['coordinators'] as Array<any>).map(CoordinatorFromJSON)),
        'producers': ((json['producers'] as Array<any>).map(ProducerFromJSON)),
        'spotTypes': ((json['spotTypes'] as Array<any>).map(SpotTypeFromJSON)),
        'spots': ((json['spots'] as Array<any>).map(SpotFromJSON)),
        'total': json['total'],
        'users': ((json['users'] as Array<any>).map(UserFromJSON)),
    };
}

export function SpotsResponseToJSON(json: any): SpotsResponse {
    return SpotsResponseToJSONTyped(json, false);
}

export function SpotsResponseToJSONTyped(value?: SpotsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'coordinators': ((value['coordinators'] as Array<any>).map(CoordinatorToJSON)),
        'producers': ((value['producers'] as Array<any>).map(ProducerToJSON)),
        'spotTypes': ((value['spotTypes'] as Array<any>).map(SpotTypeToJSON)),
        'spots': ((value['spots'] as Array<any>).map(SpotToJSON)),
        'total': value['total'],
        'users': ((value['users'] as Array<any>).map(UserToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserStatus } from './UserStatus';
import {
    UserStatusFromJSON,
    UserStatusFromJSONTyped,
    UserStatusToJSON,
    UserStatusToJSONTyped,
} from './UserStatus';

/**
 * ユーザー情報
 * @export
 * @interface User
 */
export interface User {
    /**
     * ユーザー名（検索用）
     * @type {string}
     * @memberof User
     */
    accountId: string;
    /**
     * 登録日時
     * @type {number}
     * @memberof User
     */
    createdAt: number;
    /**
     * メールアドレス
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * 氏名（名）
     * @type {string}
     * @memberof User
     */
    firstname: string;
    /**
     * 氏名(名:かな)
     * @type {string}
     * @memberof User
     */
    firstnameKana: string;
    /**
     * 購入者ID
     * @type {string}
     * @memberof User
     */
    id: string;
    /**
     * 氏名（姓）
     * @type {string}
     * @memberof User
     */
    lastname: string;
    /**
     * 氏名(姓:かな)
     * @type {string}
     * @memberof User
     */
    lastnameKana: string;
    /**
     * 電話番号
     * @type {string}
     * @memberof User
     */
    phoneNumber: string;
    /**
     * 会員登録フラグ
     * @type {boolean}
     * @memberof User
     */
    registered: boolean;
    /**
     * 
     * @type {UserStatus}
     * @memberof User
     */
    status: UserStatus;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof User
     */
    thumbnailUrl: string;
    /**
     * 更新日時
     * @type {number}
     * @memberof User
     */
    updateAt: number;
    /**
     * ユーザー名（表示名）
     * @type {string}
     * @memberof User
     */
    username: string;
}



/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstname' in value) || value['firstname'] === undefined) return false;
    if (!('firstnameKana' in value) || value['firstnameKana'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('lastname' in value) || value['lastname'] === undefined) return false;
    if (!('lastnameKana' in value) || value['lastnameKana'] === undefined) return false;
    if (!('phoneNumber' in value) || value['phoneNumber'] === undefined) return false;
    if (!('registered' in value) || value['registered'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('thumbnailUrl' in value) || value['thumbnailUrl'] === undefined) return false;
    if (!('updateAt' in value) || value['updateAt'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['accountId'],
        'createdAt': json['createdAt'],
        'email': json['email'],
        'firstname': json['firstname'],
        'firstnameKana': json['firstnameKana'],
        'id': json['id'],
        'lastname': json['lastname'],
        'lastnameKana': json['lastnameKana'],
        'phoneNumber': json['phoneNumber'],
        'registered': json['registered'],
        'status': UserStatusFromJSON(json['status']),
        'thumbnailUrl': json['thumbnailUrl'],
        'updateAt': json['updateAt'],
        'username': json['username'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accountId': value['accountId'],
        'createdAt': value['createdAt'],
        'email': value['email'],
        'firstname': value['firstname'],
        'firstnameKana': value['firstnameKana'],
        'id': value['id'],
        'lastname': value['lastname'],
        'lastnameKana': value['lastnameKana'],
        'phoneNumber': value['phoneNumber'],
        'registered': value['registered'],
        'status': UserStatusToJSON(value['status']),
        'thumbnailUrl': value['thumbnailUrl'],
        'updateAt': value['updateAt'],
        'username': value['username'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExperienceType } from './ExperienceType';
import {
    ExperienceTypeFromJSON,
    ExperienceTypeFromJSONTyped,
    ExperienceTypeToJSON,
    ExperienceTypeToJSONTyped,
} from './ExperienceType';

/**
 * 
 * @export
 * @interface ExperienceTypesResponse
 */
export interface ExperienceTypesResponse {
    /**
     * 体験種別一覧
     * @type {Array<ExperienceType>}
     * @memberof ExperienceTypesResponse
     */
    experienceTypes: Array<ExperienceType>;
    /**
     * 体験種別合計数
     * @type {number}
     * @memberof ExperienceTypesResponse
     */
    total: number;
}

/**
 * Check if a given object implements the ExperienceTypesResponse interface.
 */
export function instanceOfExperienceTypesResponse(value: object): value is ExperienceTypesResponse {
    if (!('experienceTypes' in value) || value['experienceTypes'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function ExperienceTypesResponseFromJSON(json: any): ExperienceTypesResponse {
    return ExperienceTypesResponseFromJSONTyped(json, false);
}

export function ExperienceTypesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperienceTypesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'experienceTypes': ((json['experienceTypes'] as Array<any>).map(ExperienceTypeFromJSON)),
        'total': json['total'],
    };
}

export function ExperienceTypesResponseToJSON(json: any): ExperienceTypesResponse {
    return ExperienceTypesResponseToJSONTyped(json, false);
}

export function ExperienceTypesResponseToJSONTyped(value?: ExperienceTypesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'experienceTypes': ((value['experienceTypes'] as Array<any>).map(ExperienceTypeToJSON)),
        'total': value['total'],
    };
}


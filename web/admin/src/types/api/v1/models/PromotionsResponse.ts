/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Shop } from './Shop';
import {
    ShopFromJSON,
    ShopFromJSONTyped,
    ShopToJSON,
    ShopToJSONTyped,
} from './Shop';
import type { Promotion } from './Promotion';
import {
    PromotionFromJSON,
    PromotionFromJSONTyped,
    PromotionToJSON,
    PromotionToJSONTyped,
} from './Promotion';

/**
 * 
 * @export
 * @interface PromotionsResponse
 */
export interface PromotionsResponse {
    /**
     * プロモーション情報一覧
     * @type {Array<Promotion>}
     * @memberof PromotionsResponse
     */
    promotions: Array<Promotion>;
    /**
     * 店舗情報一覧
     * @type {Array<Shop>}
     * @memberof PromotionsResponse
     */
    shops: Array<Shop>;
    /**
     * プロモーション合計数
     * @type {number}
     * @memberof PromotionsResponse
     */
    total: number;
}

/**
 * Check if a given object implements the PromotionsResponse interface.
 */
export function instanceOfPromotionsResponse(value: object): value is PromotionsResponse {
    if (!('promotions' in value) || value['promotions'] === undefined) return false;
    if (!('shops' in value) || value['shops'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function PromotionsResponseFromJSON(json: any): PromotionsResponse {
    return PromotionsResponseFromJSONTyped(json, false);
}

export function PromotionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromotionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'promotions': ((json['promotions'] as Array<any>).map(PromotionFromJSON)),
        'shops': ((json['shops'] as Array<any>).map(ShopFromJSON)),
        'total': json['total'],
    };
}

export function PromotionsResponseToJSON(json: any): PromotionsResponse {
    return PromotionsResponseToJSONTyped(json, false);
}

export function PromotionsResponseToJSONTyped(value?: PromotionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'promotions': ((value['promotions'] as Array<any>).map(PromotionToJSON)),
        'shops': ((value['shops'] as Array<any>).map(ShopToJSON)),
        'total': value['total'],
    };
}


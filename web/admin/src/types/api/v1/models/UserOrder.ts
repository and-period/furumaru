/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserOrder
 */
export interface UserOrder {
    /**
     * 注文情報ID
     * @type {string}
     * @memberof UserOrder
     */
    orderId: string;
    /**
     * 注文日時
     * @type {number}
     * @memberof UserOrder
     */
    orderedAt: number;
    /**
     * 支払日時
     * @type {number}
     * @memberof UserOrder
     */
    paidAt: number;
    /**
     * 支払い状況
     * @type {number}
     * @memberof UserOrder
     */
    status: number;
    /**
     * 商品合計金額
     * @type {number}
     * @memberof UserOrder
     */
    subtotal: number;
    /**
     * 支払い合計金額
     * @type {number}
     * @memberof UserOrder
     */
    total: number;
}

/**
 * Check if a given object implements the UserOrder interface.
 */
export function instanceOfUserOrder(value: object): value is UserOrder {
    if (!('orderId' in value) || value['orderId'] === undefined) return false;
    if (!('orderedAt' in value) || value['orderedAt'] === undefined) return false;
    if (!('paidAt' in value) || value['paidAt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('subtotal' in value) || value['subtotal'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function UserOrderFromJSON(json: any): UserOrder {
    return UserOrderFromJSONTyped(json, false);
}

export function UserOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOrder {
    if (json == null) {
        return json;
    }
    return {
        
        'orderId': json['orderId'],
        'orderedAt': json['orderedAt'],
        'paidAt': json['paidAt'],
        'status': json['status'],
        'subtotal': json['subtotal'],
        'total': json['total'],
    };
}

export function UserOrderToJSON(json: any): UserOrder {
    return UserOrderToJSONTyped(json, false);
}

export function UserOrderToJSONTyped(value?: UserOrder | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'orderId': value['orderId'],
        'orderedAt': value['orderedAt'],
        'paidAt': value['paidAt'],
        'status': value['status'],
        'subtotal': value['subtotal'],
        'total': value['total'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthUserResponse
 */
export interface AuthUserResponse {
    /**
     * メールアドレス
     * @type {string}
     * @memberof AuthUserResponse
     */
    email: string;
    /**
     * 管理者ID
     * @type {string}
     * @memberof AuthUserResponse
     */
    id: string;
    /**
     * 店舗ID一覧
     * @type {Array<string>}
     * @memberof AuthUserResponse
     */
    shopIds: Array<string>;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof AuthUserResponse
     */
    thumbnailUrl: string;
    /**
     * 管理者種別
     * @type {number}
     * @memberof AuthUserResponse
     */
    type: number;
    /**
     * 表示名
     * @type {string}
     * @memberof AuthUserResponse
     */
    username: string;
}

/**
 * Check if a given object implements the AuthUserResponse interface.
 */
export function instanceOfAuthUserResponse(value: object): value is AuthUserResponse {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('shopIds' in value) || value['shopIds'] === undefined) return false;
    if (!('thumbnailUrl' in value) || value['thumbnailUrl'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    return true;
}

export function AuthUserResponseFromJSON(json: any): AuthUserResponse {
    return AuthUserResponseFromJSONTyped(json, false);
}

export function AuthUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthUserResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'id': json['id'],
        'shopIds': json['shopIds'],
        'thumbnailUrl': json['thumbnailUrl'],
        'type': json['type'],
        'username': json['username'],
    };
}

export function AuthUserResponseToJSON(json: any): AuthUserResponse {
    return AuthUserResponseToJSONTyped(json, false);
}

export function AuthUserResponseToJSONTyped(value?: AuthUserResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'id': value['id'],
        'shopIds': value['shopIds'],
        'thumbnailUrl': value['thumbnailUrl'],
        'type': value['type'],
        'username': value['username'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BroadcastStatus } from './BroadcastStatus';
import {
    BroadcastStatusFromJSON,
    BroadcastStatusFromJSONTyped,
    BroadcastStatusToJSON,
    BroadcastStatusToJSONTyped,
} from './BroadcastStatus';

/**
 * ライブ配信情報
 * @export
 * @interface Broadcast
 */
export interface Broadcast {
    /**
     * オンデマンド配信URL
     * @type {string}
     * @memberof Broadcast
     */
    archiveUrl: string;
    /**
     * 登録日時
     * @type {number}
     * @memberof Broadcast
     */
    createdAt: number;
    /**
     * ライブ配信ID
     * @type {string}
     * @memberof Broadcast
     */
    id: string;
    /**
     * ライブ配信URL(入力)
     * @type {string}
     * @memberof Broadcast
     */
    inputUrl: string;
    /**
     * ライブ配信URL(出力)
     * @type {string}
     * @memberof Broadcast
     */
    outputUrl: string;
    /**
     * 開催スケジュールID
     * @type {string}
     * @memberof Broadcast
     */
    scheduleId: string;
    /**
     * 
     * @type {BroadcastStatus}
     * @memberof Broadcast
     */
    status: BroadcastStatus;
    /**
     * 更新日時
     * @type {number}
     * @memberof Broadcast
     */
    updatedAt: number;
    /**
     * Youtubeアカウント
     * @type {string}
     * @memberof Broadcast
     */
    youtubeAccount: string;
    /**
     * Youtube管理画面URL
     * @type {string}
     * @memberof Broadcast
     */
    youtubeAdminUrl: string;
    /**
     * Youtube視聴画面URL
     * @type {string}
     * @memberof Broadcast
     */
    youtubeViewerUrl: string;
}



/**
 * Check if a given object implements the Broadcast interface.
 */
export function instanceOfBroadcast(value: object): value is Broadcast {
    if (!('archiveUrl' in value) || value['archiveUrl'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('inputUrl' in value) || value['inputUrl'] === undefined) return false;
    if (!('outputUrl' in value) || value['outputUrl'] === undefined) return false;
    if (!('scheduleId' in value) || value['scheduleId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('youtubeAccount' in value) || value['youtubeAccount'] === undefined) return false;
    if (!('youtubeAdminUrl' in value) || value['youtubeAdminUrl'] === undefined) return false;
    if (!('youtubeViewerUrl' in value) || value['youtubeViewerUrl'] === undefined) return false;
    return true;
}

export function BroadcastFromJSON(json: any): Broadcast {
    return BroadcastFromJSONTyped(json, false);
}

export function BroadcastFromJSONTyped(json: any, ignoreDiscriminator: boolean): Broadcast {
    if (json == null) {
        return json;
    }
    return {
        
        'archiveUrl': json['archiveUrl'],
        'createdAt': json['createdAt'],
        'id': json['id'],
        'inputUrl': json['inputUrl'],
        'outputUrl': json['outputUrl'],
        'scheduleId': json['scheduleId'],
        'status': BroadcastStatusFromJSON(json['status']),
        'updatedAt': json['updatedAt'],
        'youtubeAccount': json['youtubeAccount'],
        'youtubeAdminUrl': json['youtubeAdminUrl'],
        'youtubeViewerUrl': json['youtubeViewerUrl'],
    };
}

export function BroadcastToJSON(json: any): Broadcast {
    return BroadcastToJSONTyped(json, false);
}

export function BroadcastToJSONTyped(value?: Broadcast | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'archiveUrl': value['archiveUrl'],
        'createdAt': value['createdAt'],
        'id': value['id'],
        'inputUrl': value['inputUrl'],
        'outputUrl': value['outputUrl'],
        'scheduleId': value['scheduleId'],
        'status': BroadcastStatusToJSON(value['status']),
        'updatedAt': value['updatedAt'],
        'youtubeAccount': value['youtubeAccount'],
        'youtubeAdminUrl': value['youtubeAdminUrl'],
        'youtubeViewerUrl': value['youtubeViewerUrl'],
    };
}


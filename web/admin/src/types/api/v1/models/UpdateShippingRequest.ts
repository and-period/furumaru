/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UpdateShippingRate } from './UpdateShippingRate';
import {
    UpdateShippingRateFromJSON,
    UpdateShippingRateFromJSONTyped,
    UpdateShippingRateToJSON,
    UpdateShippingRateToJSONTyped,
} from './UpdateShippingRate';

/**
 * 
 * @export
 * @interface UpdateShippingRequest
 */
export interface UpdateShippingRequest {
    /**
     * 箱サイズ60の冷凍便追加配送料(税込)
     * @type {number}
     * @memberof UpdateShippingRequest
     */
    box60Frozen: number;
    /**
     * 箱サイズ60の通常便配送料一覧
     * @type {Array<UpdateShippingRate>}
     * @memberof UpdateShippingRequest
     */
    box60Rates: Array<UpdateShippingRate>;
    /**
     * 箱サイズ80の冷凍便追加配送料(税込)
     * @type {number}
     * @memberof UpdateShippingRequest
     */
    box80Frozen: number;
    /**
     * 箱サイズ80の通常便配送料一覧
     * @type {Array<UpdateShippingRate>}
     * @memberof UpdateShippingRequest
     */
    box80Rates: Array<UpdateShippingRate>;
    /**
     * 箱サイズ100の冷凍便追加配送料(税込)
     * @type {number}
     * @memberof UpdateShippingRequest
     */
    box100Frozen: number;
    /**
     * 箱サイズ100の通常便配送料一覧
     * @type {Array<UpdateShippingRate>}
     * @memberof UpdateShippingRequest
     */
    box100Rates: Array<UpdateShippingRate>;
    /**
     * 送料無料になる金額(税込)
     * @type {number}
     * @memberof UpdateShippingRequest
     */
    freeShippingRates: number;
    /**
     * 送料無料オプションの有無
     * @type {boolean}
     * @memberof UpdateShippingRequest
     */
    hasFreeShipping: boolean;
    /**
     * 配送設定名
     * @type {string}
     * @memberof UpdateShippingRequest
     */
    name: string;
}

/**
 * Check if a given object implements the UpdateShippingRequest interface.
 */
export function instanceOfUpdateShippingRequest(value: object): value is UpdateShippingRequest {
    if (!('box60Frozen' in value) || value['box60Frozen'] === undefined) return false;
    if (!('box60Rates' in value) || value['box60Rates'] === undefined) return false;
    if (!('box80Frozen' in value) || value['box80Frozen'] === undefined) return false;
    if (!('box80Rates' in value) || value['box80Rates'] === undefined) return false;
    if (!('box100Frozen' in value) || value['box100Frozen'] === undefined) return false;
    if (!('box100Rates' in value) || value['box100Rates'] === undefined) return false;
    if (!('freeShippingRates' in value) || value['freeShippingRates'] === undefined) return false;
    if (!('hasFreeShipping' in value) || value['hasFreeShipping'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function UpdateShippingRequestFromJSON(json: any): UpdateShippingRequest {
    return UpdateShippingRequestFromJSONTyped(json, false);
}

export function UpdateShippingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateShippingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'box60Frozen': json['box60Frozen'],
        'box60Rates': ((json['box60Rates'] as Array<any>).map(UpdateShippingRateFromJSON)),
        'box80Frozen': json['box80Frozen'],
        'box80Rates': ((json['box80Rates'] as Array<any>).map(UpdateShippingRateFromJSON)),
        'box100Frozen': json['box100Frozen'],
        'box100Rates': ((json['box100Rates'] as Array<any>).map(UpdateShippingRateFromJSON)),
        'freeShippingRates': json['freeShippingRates'],
        'hasFreeShipping': json['hasFreeShipping'],
        'name': json['name'],
    };
}

export function UpdateShippingRequestToJSON(json: any): UpdateShippingRequest {
    return UpdateShippingRequestToJSONTyped(json, false);
}

export function UpdateShippingRequestToJSONTyped(value?: UpdateShippingRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'box60Frozen': value['box60Frozen'],
        'box60Rates': ((value['box60Rates'] as Array<any>).map(UpdateShippingRateToJSON)),
        'box80Frozen': value['box80Frozen'],
        'box80Rates': ((value['box80Rates'] as Array<any>).map(UpdateShippingRateToJSON)),
        'box100Frozen': value['box100Frozen'],
        'box100Rates': ((value['box100Rates'] as Array<any>).map(UpdateShippingRateToJSON)),
        'freeShippingRates': value['freeShippingRates'],
        'hasFreeShipping': value['hasFreeShipping'],
        'name': value['name'],
    };
}


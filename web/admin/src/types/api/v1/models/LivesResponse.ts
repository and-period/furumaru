/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Producer } from './Producer';
import {
    ProducerFromJSON,
    ProducerFromJSONTyped,
    ProducerToJSON,
    ProducerToJSONTyped,
} from './Producer';
import type { Live } from './Live';
import {
    LiveFromJSON,
    LiveFromJSONTyped,
    LiveToJSON,
    LiveToJSONTyped,
} from './Live';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';

/**
 * 
 * @export
 * @interface LivesResponse
 */
export interface LivesResponse {
    /**
     * ライブ配信一覧
     * @type {Array<Live>}
     * @memberof LivesResponse
     */
    lives: Array<Live>;
    /**
     * 生産者一覧
     * @type {Array<Producer>}
     * @memberof LivesResponse
     */
    producers: Array<Producer>;
    /**
     * 商品一覧
     * @type {Array<Product>}
     * @memberof LivesResponse
     */
    products: Array<Product>;
    /**
     * 合計数
     * @type {number}
     * @memberof LivesResponse
     */
    total: number;
}

/**
 * Check if a given object implements the LivesResponse interface.
 */
export function instanceOfLivesResponse(value: object): value is LivesResponse {
    if (!('lives' in value) || value['lives'] === undefined) return false;
    if (!('producers' in value) || value['producers'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function LivesResponseFromJSON(json: any): LivesResponse {
    return LivesResponseFromJSONTyped(json, false);
}

export function LivesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LivesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'lives': ((json['lives'] as Array<any>).map(LiveFromJSON)),
        'producers': ((json['producers'] as Array<any>).map(ProducerFromJSON)),
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
        'total': json['total'],
    };
}

export function LivesResponseToJSON(json: any): LivesResponse {
    return LivesResponseToJSONTyped(json, false);
}

export function LivesResponseToJSONTyped(value?: LivesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'lives': ((value['lives'] as Array<any>).map(LiveToJSON)),
        'producers': ((value['producers'] as Array<any>).map(ProducerToJSON)),
        'products': ((value['products'] as Array<any>).map(ProductToJSON)),
        'total': value['total'],
    };
}


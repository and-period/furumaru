/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Shop } from './Shop';
import {
    ShopFromJSON,
    ShopFromJSONTyped,
    ShopToJSON,
    ShopToJSONTyped,
} from './Shop';
import type { ProductType } from './ProductType';
import {
    ProductTypeFromJSON,
    ProductTypeFromJSONTyped,
    ProductTypeToJSON,
    ProductTypeToJSONTyped,
} from './ProductType';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
    CoordinatorToJSONTyped,
} from './Coordinator';

/**
 * 
 * @export
 * @interface CoordinatorsResponse
 */
export interface CoordinatorsResponse {
    /**
     * 生産者一覧
     * @type {Array<Coordinator>}
     * @memberof CoordinatorsResponse
     */
    coordinators: Array<Coordinator>;
    /**
     * 品目一覧
     * @type {Array<ProductType>}
     * @memberof CoordinatorsResponse
     */
    productTypes: Array<ProductType>;
    /**
     * 店舗一覧
     * @type {Array<Shop>}
     * @memberof CoordinatorsResponse
     */
    shops: Array<Shop>;
    /**
     * 合計数
     * @type {number}
     * @memberof CoordinatorsResponse
     */
    total: number;
}

/**
 * Check if a given object implements the CoordinatorsResponse interface.
 */
export function instanceOfCoordinatorsResponse(value: object): value is CoordinatorsResponse {
    if (!('coordinators' in value) || value['coordinators'] === undefined) return false;
    if (!('productTypes' in value) || value['productTypes'] === undefined) return false;
    if (!('shops' in value) || value['shops'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function CoordinatorsResponseFromJSON(json: any): CoordinatorsResponse {
    return CoordinatorsResponseFromJSONTyped(json, false);
}

export function CoordinatorsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoordinatorsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': ((json['coordinators'] as Array<any>).map(CoordinatorFromJSON)),
        'productTypes': ((json['productTypes'] as Array<any>).map(ProductTypeFromJSON)),
        'shops': ((json['shops'] as Array<any>).map(ShopFromJSON)),
        'total': json['total'],
    };
}

export function CoordinatorsResponseToJSON(json: any): CoordinatorsResponse {
    return CoordinatorsResponseToJSONTyped(json, false);
}

export function CoordinatorsResponseToJSONTyped(value?: CoordinatorsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'coordinators': ((value['coordinators'] as Array<any>).map(CoordinatorToJSON)),
        'productTypes': ((value['productTypes'] as Array<any>).map(ProductTypeToJSON)),
        'shops': ((value['shops'] as Array<any>).map(ShopToJSON)),
        'total': value['total'],
    };
}


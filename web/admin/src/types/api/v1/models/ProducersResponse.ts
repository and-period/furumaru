/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 管理者向け
 * 管理者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Shop } from './Shop';
import {
    ShopFromJSON,
    ShopFromJSONTyped,
    ShopToJSON,
    ShopToJSONTyped,
} from './Shop';
import type { Producer } from './Producer';
import {
    ProducerFromJSON,
    ProducerFromJSONTyped,
    ProducerToJSON,
    ProducerToJSONTyped,
} from './Producer';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
    CoordinatorToJSONTyped,
} from './Coordinator';

/**
 * 
 * @export
 * @interface ProducersResponse
 */
export interface ProducersResponse {
    /**
     * コーディネータ一覧
     * @type {Array<Coordinator>}
     * @memberof ProducersResponse
     */
    coordinators: Array<Coordinator>;
    /**
     * 生産者一覧
     * @type {Array<Producer>}
     * @memberof ProducersResponse
     */
    producers: Array<Producer>;
    /**
     * 店舗一覧
     * @type {Array<Shop>}
     * @memberof ProducersResponse
     */
    shops: Array<Shop>;
    /**
     * 合計数
     * @type {number}
     * @memberof ProducersResponse
     */
    total: number;
}

/**
 * Check if a given object implements the ProducersResponse interface.
 */
export function instanceOfProducersResponse(value: object): value is ProducersResponse {
    if (!('coordinators' in value) || value['coordinators'] === undefined) return false;
    if (!('producers' in value) || value['producers'] === undefined) return false;
    if (!('shops' in value) || value['shops'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function ProducersResponseFromJSON(json: any): ProducersResponse {
    return ProducersResponseFromJSONTyped(json, false);
}

export function ProducersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProducersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': ((json['coordinators'] as Array<any>).map(CoordinatorFromJSON)),
        'producers': ((json['producers'] as Array<any>).map(ProducerFromJSON)),
        'shops': ((json['shops'] as Array<any>).map(ShopFromJSON)),
        'total': json['total'],
    };
}

export function ProducersResponseToJSON(json: any): ProducersResponse {
    return ProducersResponseToJSONTyped(json, false);
}

export function ProducersResponseToJSONTyped(value?: ProducersResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'coordinators': ((value['coordinators'] as Array<any>).map(CoordinatorToJSON)),
        'producers': ((value['producers'] as Array<any>).map(ProducerToJSON)),
        'shops': ((value['shops'] as Array<any>).map(ShopToJSON)),
        'total': value['total'],
    };
}


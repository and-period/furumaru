/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseExperience } from './ResponseExperience';
import {
    ResponseExperienceFromJSON,
    ResponseExperienceFromJSONTyped,
    ResponseExperienceToJSON,
} from './ResponseExperience';
import type { ResponseExperienceType } from './ResponseExperienceType';
import {
    ResponseExperienceTypeFromJSON,
    ResponseExperienceTypeFromJSONTyped,
    ResponseExperienceTypeToJSON,
} from './ResponseExperienceType';
import type { ResponseProducer } from './ResponseProducer';
import {
    ResponseProducerFromJSON,
    ResponseProducerFromJSONTyped,
    ResponseProducerToJSON,
} from './ResponseProducer';
import type { ResponseCoordinator } from './ResponseCoordinator';
import {
    ResponseCoordinatorFromJSON,
    ResponseCoordinatorFromJSONTyped,
    ResponseCoordinatorToJSON,
} from './ResponseCoordinator';

/**
 * 
 * @export
 * @interface ResponseExperienceResponse
 */
export interface ResponseExperienceResponse {
    /**
     * 
     * @type {ResponseCoordinator}
     * @memberof ResponseExperienceResponse
     */
    coordinator?: ResponseCoordinator;
    /**
     * 
     * @type {ResponseExperience}
     * @memberof ResponseExperienceResponse
     */
    experience?: ResponseExperience;
    /**
     * 
     * @type {ResponseExperienceType}
     * @memberof ResponseExperienceResponse
     */
    experienceType?: ResponseExperienceType;
    /**
     * 
     * @type {ResponseProducer}
     * @memberof ResponseExperienceResponse
     */
    producer?: ResponseProducer;
}

/**
 * Check if a given object implements the ResponseExperienceResponse interface.
 */
export function instanceOfResponseExperienceResponse(value: object): value is ResponseExperienceResponse {
    return true;
}

export function ResponseExperienceResponseFromJSON(json: any): ResponseExperienceResponse {
    return ResponseExperienceResponseFromJSONTyped(json, false);
}

export function ResponseExperienceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseExperienceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinator': json['coordinator'] == null ? undefined : ResponseCoordinatorFromJSON(json['coordinator']),
        'experience': json['experience'] == null ? undefined : ResponseExperienceFromJSON(json['experience']),
        'experienceType': json['experienceType'] == null ? undefined : ResponseExperienceTypeFromJSON(json['experienceType']),
        'producer': json['producer'] == null ? undefined : ResponseProducerFromJSON(json['producer']),
    };
}

export function ResponseExperienceResponseToJSON(value?: ResponseExperienceResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinator': ResponseCoordinatorToJSON(value['coordinator']),
        'experience': ResponseExperienceToJSON(value['experience']),
        'experienceType': ResponseExperienceTypeToJSON(value['experienceType']),
        'producer': ResponseProducerToJSON(value['producer']),
    };
}


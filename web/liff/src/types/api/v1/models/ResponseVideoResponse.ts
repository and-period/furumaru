/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseExperience } from './ResponseExperience';
import {
    ResponseExperienceFromJSON,
    ResponseExperienceFromJSONTyped,
    ResponseExperienceToJSON,
} from './ResponseExperience';
import type { ResponseProduct } from './ResponseProduct';
import {
    ResponseProductFromJSON,
    ResponseProductFromJSONTyped,
    ResponseProductToJSON,
} from './ResponseProduct';
import type { ResponseVideo } from './ResponseVideo';
import {
    ResponseVideoFromJSON,
    ResponseVideoFromJSONTyped,
    ResponseVideoToJSON,
} from './ResponseVideo';
import type { ResponseCoordinator } from './ResponseCoordinator';
import {
    ResponseCoordinatorFromJSON,
    ResponseCoordinatorFromJSONTyped,
    ResponseCoordinatorToJSON,
} from './ResponseCoordinator';

/**
 * 
 * @export
 * @interface ResponseVideoResponse
 */
export interface ResponseVideoResponse {
    /**
     * 
     * @type {ResponseCoordinator}
     * @memberof ResponseVideoResponse
     */
    coordinator?: ResponseCoordinator;
    /**
     * 体験一覧
     * @type {Array<ResponseExperience>}
     * @memberof ResponseVideoResponse
     */
    experiences?: Array<ResponseExperience>;
    /**
     * 商品一覧
     * @type {Array<ResponseProduct>}
     * @memberof ResponseVideoResponse
     */
    products?: Array<ResponseProduct>;
    /**
     * 
     * @type {ResponseVideo}
     * @memberof ResponseVideoResponse
     */
    video?: ResponseVideo;
}

/**
 * Check if a given object implements the ResponseVideoResponse interface.
 */
export function instanceOfResponseVideoResponse(value: object): value is ResponseVideoResponse {
    return true;
}

export function ResponseVideoResponseFromJSON(json: any): ResponseVideoResponse {
    return ResponseVideoResponseFromJSONTyped(json, false);
}

export function ResponseVideoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseVideoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinator': json['coordinator'] == null ? undefined : ResponseCoordinatorFromJSON(json['coordinator']),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(ResponseExperienceFromJSON)),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ResponseProductFromJSON)),
        'video': json['video'] == null ? undefined : ResponseVideoFromJSON(json['video']),
    };
}

export function ResponseVideoResponseToJSON(value?: ResponseVideoResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinator': ResponseCoordinatorToJSON(value['coordinator']),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(ResponseExperienceToJSON)),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ResponseProductToJSON)),
        'video': ResponseVideoToJSON(value['video']),
    };
}


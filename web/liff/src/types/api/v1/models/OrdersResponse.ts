/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Order } from './Order';
import {
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
    OrderToJSONTyped,
} from './Order';
import type { Experience } from './Experience';
import {
    ExperienceFromJSON,
    ExperienceFromJSONTyped,
    ExperienceToJSON,
    ExperienceToJSONTyped,
} from './Experience';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductToJSONTyped,
} from './Product';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
    CoordinatorToJSONTyped,
} from './Coordinator';
import type { Promotion } from './Promotion';
import {
    PromotionFromJSON,
    PromotionFromJSONTyped,
    PromotionToJSON,
    PromotionToJSONTyped,
} from './Promotion';

/**
 * 
 * @export
 * @interface OrdersResponse
 */
export interface OrdersResponse {
    /**
     * コーディネータ一覧
     * @type {Array<Coordinator>}
     * @memberof OrdersResponse
     */
    coordinators: Array<Coordinator>;
    /**
     * 体験一覧
     * @type {Array<Experience>}
     * @memberof OrdersResponse
     */
    experiences: Array<Experience>;
    /**
     * 注文履歴一覧
     * @type {Array<Order>}
     * @memberof OrdersResponse
     */
    orders: Array<Order>;
    /**
     * 商品一覧
     * @type {Array<Product>}
     * @memberof OrdersResponse
     */
    products: Array<Product>;
    /**
     * プロモーション一覧
     * @type {Array<Promotion>}
     * @memberof OrdersResponse
     */
    promotions: Array<Promotion>;
    /**
     * 合計数
     * @type {number}
     * @memberof OrdersResponse
     */
    total: number;
}

/**
 * Check if a given object implements the OrdersResponse interface.
 */
export function instanceOfOrdersResponse(value: object): value is OrdersResponse {
    if (!('coordinators' in value) || value['coordinators'] === undefined) return false;
    if (!('experiences' in value) || value['experiences'] === undefined) return false;
    if (!('orders' in value) || value['orders'] === undefined) return false;
    if (!('products' in value) || value['products'] === undefined) return false;
    if (!('promotions' in value) || value['promotions'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function OrdersResponseFromJSON(json: any): OrdersResponse {
    return OrdersResponseFromJSONTyped(json, false);
}

export function OrdersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrdersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': ((json['coordinators'] as Array<any>).map(CoordinatorFromJSON)),
        'experiences': ((json['experiences'] as Array<any>).map(ExperienceFromJSON)),
        'orders': ((json['orders'] as Array<any>).map(OrderFromJSON)),
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
        'promotions': ((json['promotions'] as Array<any>).map(PromotionFromJSON)),
        'total': json['total'],
    };
}

export function OrdersResponseToJSON(json: any): OrdersResponse {
    return OrdersResponseToJSONTyped(json, false);
}

export function OrdersResponseToJSONTyped(value?: OrdersResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'coordinators': ((value['coordinators'] as Array<any>).map(CoordinatorToJSON)),
        'experiences': ((value['experiences'] as Array<any>).map(ExperienceToJSON)),
        'orders': ((value['orders'] as Array<any>).map(OrderToJSON)),
        'products': ((value['products'] as Array<any>).map(ProductToJSON)),
        'promotions': ((value['promotions'] as Array<any>).map(PromotionToJSON)),
        'total': value['total'],
    };
}


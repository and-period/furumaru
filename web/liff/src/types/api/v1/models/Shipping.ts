/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShippingRate } from './ShippingRate';
import {
    ShippingRateFromJSON,
    ShippingRateFromJSONTyped,
    ShippingRateToJSON,
} from './ShippingRate';

/**
 * 配送設定
 * @export
 * @interface Shipping
 */
export interface Shipping {
    /**
     * 箱サイズ60の追加（冷凍便）追加配送料(税込)
     * @type {number}
     * @memberof Shipping
     */
    box60Frozen?: number;
    /**
     * 箱サイズ60の通常（常温・冷蔵便）配送料一覧
     * @type {Array<ShippingRate>}
     * @memberof Shipping
     */
    box60Rates?: Array<ShippingRate>;
    /**
     * 箱サイズ80の追加（冷凍便）追加配送料(税込)
     * @type {number}
     * @memberof Shipping
     */
    box80Frozen?: number;
    /**
     * 箱サイズ80の通常（常温・冷蔵便）配送料一覧
     * @type {Array<ShippingRate>}
     * @memberof Shipping
     */
    box80Rates?: Array<ShippingRate>;
    /**
     * 箱サイズ100の追加（冷凍便）追加配送料(税込)
     * @type {number}
     * @memberof Shipping
     */
    box100Frozen?: number;
    /**
     * 箱サイズ100の通常（常温・冷蔵便）配送料一覧
     * @type {Array<ShippingRate>}
     * @memberof Shipping
     */
    box100Rates?: Array<ShippingRate>;
    /**
     * 送料無料になる金額(税込)
     * @type {number}
     * @memberof Shipping
     */
    freeShippingRates?: number;
    /**
     * 送料無料オプションの有無
     * @type {boolean}
     * @memberof Shipping
     */
    hasFreeShipping?: boolean;
    /**
     * 配送設定ID
     * @type {string}
     * @memberof Shipping
     */
    id?: string;
}

/**
 * Check if a given object implements the Shipping interface.
 */
export function instanceOfShipping(value: object): value is Shipping {
    return true;
}

export function ShippingFromJSON(json: any): Shipping {
    return ShippingFromJSONTyped(json, false);
}

export function ShippingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Shipping {
    if (json == null) {
        return json;
    }
    return {
        
        'box60Frozen': json['box60Frozen'] == null ? undefined : json['box60Frozen'],
        'box60Rates': json['box60Rates'] == null ? undefined : ((json['box60Rates'] as Array<any>).map(ShippingRateFromJSON)),
        'box80Frozen': json['box80Frozen'] == null ? undefined : json['box80Frozen'],
        'box80Rates': json['box80Rates'] == null ? undefined : ((json['box80Rates'] as Array<any>).map(ShippingRateFromJSON)),
        'box100Frozen': json['box100Frozen'] == null ? undefined : json['box100Frozen'],
        'box100Rates': json['box100Rates'] == null ? undefined : ((json['box100Rates'] as Array<any>).map(ShippingRateFromJSON)),
        'freeShippingRates': json['freeShippingRates'] == null ? undefined : json['freeShippingRates'],
        'hasFreeShipping': json['hasFreeShipping'] == null ? undefined : json['hasFreeShipping'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function ShippingToJSON(value?: Shipping | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'box60Frozen': value['box60Frozen'],
        'box60Rates': value['box60Rates'] == null ? undefined : ((value['box60Rates'] as Array<any>).map(ShippingRateToJSON)),
        'box80Frozen': value['box80Frozen'],
        'box80Rates': value['box80Rates'] == null ? undefined : ((value['box80Rates'] as Array<any>).map(ShippingRateToJSON)),
        'box100Frozen': value['box100Frozen'],
        'box100Rates': value['box100Rates'] == null ? undefined : ((value['box100Rates'] as Array<any>).map(ShippingRateToJSON)),
        'freeShippingRates': value['freeShippingRates'],
        'hasFreeShipping': value['hasFreeShipping'],
        'id': value['id'],
    };
}


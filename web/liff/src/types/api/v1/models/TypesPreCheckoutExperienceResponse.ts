/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesExperience } from './TypesExperience';
import {
    TypesExperienceFromJSON,
    TypesExperienceFromJSONTyped,
    TypesExperienceToJSON,
} from './TypesExperience';
import type { TypesPromotion } from './TypesPromotion';
import {
    TypesPromotionFromJSON,
    TypesPromotionFromJSONTyped,
    TypesPromotionToJSON,
} from './TypesPromotion';

/**
 * 
 * @export
 * @interface TypesPreCheckoutExperienceResponse
 */
export interface TypesPreCheckoutExperienceResponse {
    /**
     * 割引金額(税込)
     * @type {number}
     * @memberof TypesPreCheckoutExperienceResponse
     */
    discount?: number;
    /**
     * 
     * @type {TypesExperience}
     * @memberof TypesPreCheckoutExperienceResponse
     */
    experience?: TypesExperience;
    /**
     * 
     * @type {TypesPromotion}
     * @memberof TypesPreCheckoutExperienceResponse
     */
    promotion?: TypesPromotion;
    /**
     * 支払い時にAPIへ送信するキー(重複判定用)
     * @type {string}
     * @memberof TypesPreCheckoutExperienceResponse
     */
    requestId?: string;
    /**
     * 購入金額(税込)
     * @type {number}
     * @memberof TypesPreCheckoutExperienceResponse
     */
    subtotal?: number;
    /**
     * 合計金額(税込)
     * @type {number}
     * @memberof TypesPreCheckoutExperienceResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the TypesPreCheckoutExperienceResponse interface.
 */
export function instanceOfTypesPreCheckoutExperienceResponse(value: object): value is TypesPreCheckoutExperienceResponse {
    return true;
}

export function TypesPreCheckoutExperienceResponseFromJSON(json: any): TypesPreCheckoutExperienceResponse {
    return TypesPreCheckoutExperienceResponseFromJSONTyped(json, false);
}

export function TypesPreCheckoutExperienceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesPreCheckoutExperienceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'discount': json['discount'] == null ? undefined : json['discount'],
        'experience': json['experience'] == null ? undefined : TypesExperienceFromJSON(json['experience']),
        'promotion': json['promotion'] == null ? undefined : TypesPromotionFromJSON(json['promotion']),
        'requestId': json['requestId'] == null ? undefined : json['requestId'],
        'subtotal': json['subtotal'] == null ? undefined : json['subtotal'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function TypesPreCheckoutExperienceResponseToJSON(value?: TypesPreCheckoutExperienceResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'discount': value['discount'],
        'experience': TypesExperienceToJSON(value['experience']),
        'promotion': TypesPromotionToJSON(value['promotion']),
        'requestId': value['requestId'],
        'subtotal': value['subtotal'],
        'total': value['total'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseVideoSummary } from './ResponseVideoSummary';
import {
    ResponseVideoSummaryFromJSON,
    ResponseVideoSummaryFromJSONTyped,
    ResponseVideoSummaryToJSON,
} from './ResponseVideoSummary';
import type { ResponseCoordinator } from './ResponseCoordinator';
import {
    ResponseCoordinatorFromJSON,
    ResponseCoordinatorFromJSONTyped,
    ResponseCoordinatorToJSON,
} from './ResponseCoordinator';

/**
 * 
 * @export
 * @interface ResponseVideosResponse
 */
export interface ResponseVideosResponse {
    /**
     * コーディネータ一覧
     * @type {Array<ResponseCoordinator>}
     * @memberof ResponseVideosResponse
     */
    coordinators?: Array<ResponseCoordinator>;
    /**
     * オンデマンド動画合計数
     * @type {number}
     * @memberof ResponseVideosResponse
     */
    total?: number;
    /**
     * オンデマンド動画一覧
     * @type {Array<ResponseVideoSummary>}
     * @memberof ResponseVideosResponse
     */
    videos?: Array<ResponseVideoSummary>;
}

/**
 * Check if a given object implements the ResponseVideosResponse interface.
 */
export function instanceOfResponseVideosResponse(value: object): value is ResponseVideosResponse {
    return true;
}

export function ResponseVideosResponseFromJSON(json: any): ResponseVideosResponse {
    return ResponseVideosResponseFromJSONTyped(json, false);
}

export function ResponseVideosResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseVideosResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': json['coordinators'] == null ? undefined : ((json['coordinators'] as Array<any>).map(ResponseCoordinatorFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
        'videos': json['videos'] == null ? undefined : ((json['videos'] as Array<any>).map(ResponseVideoSummaryFromJSON)),
    };
}

export function ResponseVideosResponseToJSON(value?: ResponseVideosResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinators': value['coordinators'] == null ? undefined : ((value['coordinators'] as Array<any>).map(ResponseCoordinatorToJSON)),
        'total': value['total'],
        'videos': value['videos'] == null ? undefined : ((value['videos'] as Array<any>).map(ResponseVideoSummaryToJSON)),
    };
}


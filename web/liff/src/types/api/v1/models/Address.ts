/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * アドレス情報
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * 町名・番地
     * @type {string}
     * @memberof Address
     */
    addressLine1?: string;
    /**
     * ビル名・号室など
     * @type {string}
     * @memberof Address
     */
    addressLine2?: string;
    /**
     * 市区町村
     * @type {string}
     * @memberof Address
     */
    city?: string;
    /**
     * 名
     * @type {string}
     * @memberof Address
     */
    firstname?: string;
    /**
     * 名（かな）
     * @type {string}
     * @memberof Address
     */
    firstnameKana?: string;
    /**
     * アドレス帳ID
     * @type {string}
     * @memberof Address
     */
    id?: string;
    /**
     * デフォルト設定フラグ
     * @type {boolean}
     * @memberof Address
     */
    isDefault?: boolean;
    /**
     * 姓
     * @type {string}
     * @memberof Address
     */
    lastname?: string;
    /**
     * 姓（かな）
     * @type {string}
     * @memberof Address
     */
    lastnameKana?: string;
    /**
     * 電話番号
     * @type {string}
     * @memberof Address
     */
    phoneNumber?: string;
    /**
     * 郵便番号
     * @type {string}
     * @memberof Address
     */
    postalCode?: string;
    /**
     * 都道府県
     * @type {string}
     * @memberof Address
     */
    prefecture?: string;
    /**
     * 都道府県コード
     * @type {number}
     * @memberof Address
     */
    prefectureCode?: number;
}

/**
 * Check if a given object implements the Address interface.
 */
export function instanceOfAddress(value: object): value is Address {
    return true;
}

export function AddressFromJSON(json: any): Address {
    return AddressFromJSONTyped(json, false);
}

export function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address {
    if (json == null) {
        return json;
    }
    return {
        
        'addressLine1': json['addressLine1'] == null ? undefined : json['addressLine1'],
        'addressLine2': json['addressLine2'] == null ? undefined : json['addressLine2'],
        'city': json['city'] == null ? undefined : json['city'],
        'firstname': json['firstname'] == null ? undefined : json['firstname'],
        'firstnameKana': json['firstnameKana'] == null ? undefined : json['firstnameKana'],
        'id': json['id'] == null ? undefined : json['id'],
        'isDefault': json['isDefault'] == null ? undefined : json['isDefault'],
        'lastname': json['lastname'] == null ? undefined : json['lastname'],
        'lastnameKana': json['lastnameKana'] == null ? undefined : json['lastnameKana'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'postalCode': json['postalCode'] == null ? undefined : json['postalCode'],
        'prefecture': json['prefecture'] == null ? undefined : json['prefecture'],
        'prefectureCode': json['prefectureCode'] == null ? undefined : json['prefectureCode'],
    };
}

export function AddressToJSON(value?: Address | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'addressLine1': value['addressLine1'],
        'addressLine2': value['addressLine2'],
        'city': value['city'],
        'firstname': value['firstname'],
        'firstnameKana': value['firstnameKana'],
        'id': value['id'],
        'isDefault': value['isDefault'],
        'lastname': value['lastname'],
        'lastnameKana': value['lastnameKana'],
        'phoneNumber': value['phoneNumber'],
        'postalCode': value['postalCode'],
        'prefecture': value['prefecture'],
        'prefectureCode': value['prefectureCode'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SpotUserType } from './SpotUserType';
import {
    SpotUserTypeFromJSON,
    SpotUserTypeFromJSONTyped,
    SpotUserTypeToJSON,
    SpotUserTypeToJSONTyped,
} from './SpotUserType';

/**
 * スポット情報
 * @export
 * @interface Spot
 */
export interface Spot {
    /**
     * 登録日時
     * @type {number}
     * @memberof Spot
     */
    createdAt: number;
    /**
     * 説明
     * @type {string}
     * @memberof Spot
     */
    description: string;
    /**
     * スポットID
     * @type {string}
     * @memberof Spot
     */
    id: string;
    /**
     * 座標情報:緯度
     * @type {number}
     * @memberof Spot
     */
    latitude: number;
    /**
     * 座標情報:経度
     * @type {number}
     * @memberof Spot
     */
    longitude: number;
    /**
     * スポット名
     * @type {string}
     * @memberof Spot
     */
    name: string;
    /**
     * スポット種別ID
     * @type {string}
     * @memberof Spot
     */
    spotTypeId: string;
    /**
     * サムネイル画像URL
     * @type {string}
     * @memberof Spot
     */
    thumbnailUrl: string;
    /**
     * 更新日時
     * @type {number}
     * @memberof Spot
     */
    updatedAt: number;
    /**
     * 投稿者のユーザーID
     * @type {string}
     * @memberof Spot
     */
    userId: string;
    /**
     * 投稿者名
     * @type {string}
     * @memberof Spot
     */
    userName: string;
    /**
     * 投稿者のサムネイルURL
     * @type {string}
     * @memberof Spot
     */
    userThumbnailUrl: string;
    /**
     * 
     * @type {SpotUserType}
     * @memberof Spot
     */
    userType: SpotUserType;
}



/**
 * Check if a given object implements the Spot interface.
 */
export function instanceOfSpot(value: object): value is Spot {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('spotTypeId' in value) || value['spotTypeId'] === undefined) return false;
    if (!('thumbnailUrl' in value) || value['thumbnailUrl'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('userName' in value) || value['userName'] === undefined) return false;
    if (!('userThumbnailUrl' in value) || value['userThumbnailUrl'] === undefined) return false;
    if (!('userType' in value) || value['userType'] === undefined) return false;
    return true;
}

export function SpotFromJSON(json: any): Spot {
    return SpotFromJSONTyped(json, false);
}

export function SpotFromJSONTyped(json: any, ignoreDiscriminator: boolean): Spot {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'],
        'description': json['description'],
        'id': json['id'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'name': json['name'],
        'spotTypeId': json['spotTypeId'],
        'thumbnailUrl': json['thumbnailUrl'],
        'updatedAt': json['updatedAt'],
        'userId': json['userId'],
        'userName': json['userName'],
        'userThumbnailUrl': json['userThumbnailUrl'],
        'userType': SpotUserTypeFromJSON(json['userType']),
    };
}

export function SpotToJSON(json: any): Spot {
    return SpotToJSONTyped(json, false);
}

export function SpotToJSONTyped(value?: Spot | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'createdAt': value['createdAt'],
        'description': value['description'],
        'id': value['id'],
        'latitude': value['latitude'],
        'longitude': value['longitude'],
        'name': value['name'],
        'spotTypeId': value['spotTypeId'],
        'thumbnailUrl': value['thumbnailUrl'],
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
        'userName': value['userName'],
        'userThumbnailUrl': value['userThumbnailUrl'],
        'userType': SpotUserTypeToJSON(value['userType']),
    };
}


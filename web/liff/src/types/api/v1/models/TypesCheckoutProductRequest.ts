/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCheckoutCreditCard } from './TypesCheckoutCreditCard';
import {
    TypesCheckoutCreditCardFromJSON,
    TypesCheckoutCreditCardFromJSONTyped,
    TypesCheckoutCreditCardToJSON,
} from './TypesCheckoutCreditCard';

/**
 * 
 * @export
 * @interface TypesCheckoutProductRequest
 */
export interface TypesCheckoutProductRequest {
    /**
     * 請求先住所ID
     * @type {string}
     * @memberof TypesCheckoutProductRequest
     */
    billingAddressId: string;
    /**
     * 箱の通番（箱単位で購入する場合）
     * @type {number}
     * @memberof TypesCheckoutProductRequest
     */
    boxNumber?: number;
    /**
     * 決済完了後のリダイレクト先URL
     * @type {string}
     * @memberof TypesCheckoutProductRequest
     */
    callbackUrl: string;
    /**
     * コーディネータID
     * @type {string}
     * @memberof TypesCheckoutProductRequest
     */
    coordinatorId: string;
    /**
     * 
     * @type {TypesCheckoutCreditCard}
     * @memberof TypesCheckoutProductRequest
     */
    creditCard?: TypesCheckoutCreditCard;
    /**
     * 支払い方法
     * @type {number}
     * @memberof TypesCheckoutProductRequest
     */
    paymentMethod: number;
    /**
     * プロモーションコード
     * @type {string}
     * @memberof TypesCheckoutProductRequest
     */
    promotionCode?: string;
    /**
     * 支払いキー(重複判定用)
     * @type {string}
     * @memberof TypesCheckoutProductRequest
     */
    requestId: string;
    /**
     * 配送先住所ID
     * @type {string}
     * @memberof TypesCheckoutProductRequest
     */
    shippingAddressId: string;
    /**
     * 支払い合計金額（誤り検出用）
     * @type {number}
     * @memberof TypesCheckoutProductRequest
     */
    total?: number;
}

/**
 * Check if a given object implements the TypesCheckoutProductRequest interface.
 */
export function instanceOfTypesCheckoutProductRequest(value: object): value is TypesCheckoutProductRequest {
    if (!('billingAddressId' in value) || value['billingAddressId'] === undefined) return false;
    if (!('callbackUrl' in value) || value['callbackUrl'] === undefined) return false;
    if (!('coordinatorId' in value) || value['coordinatorId'] === undefined) return false;
    if (!('paymentMethod' in value) || value['paymentMethod'] === undefined) return false;
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    if (!('shippingAddressId' in value) || value['shippingAddressId'] === undefined) return false;
    return true;
}

export function TypesCheckoutProductRequestFromJSON(json: any): TypesCheckoutProductRequest {
    return TypesCheckoutProductRequestFromJSONTyped(json, false);
}

export function TypesCheckoutProductRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesCheckoutProductRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'billingAddressId': json['billingAddressId'],
        'boxNumber': json['boxNumber'] == null ? undefined : json['boxNumber'],
        'callbackUrl': json['callbackUrl'],
        'coordinatorId': json['coordinatorId'],
        'creditCard': json['creditCard'] == null ? undefined : TypesCheckoutCreditCardFromJSON(json['creditCard']),
        'paymentMethod': json['paymentMethod'],
        'promotionCode': json['promotionCode'] == null ? undefined : json['promotionCode'],
        'requestId': json['requestId'],
        'shippingAddressId': json['shippingAddressId'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function TypesCheckoutProductRequestToJSON(value?: TypesCheckoutProductRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'billingAddressId': value['billingAddressId'],
        'boxNumber': value['boxNumber'],
        'callbackUrl': value['callbackUrl'],
        'coordinatorId': value['coordinatorId'],
        'creditCard': TypesCheckoutCreditCardToJSON(value['creditCard']),
        'paymentMethod': value['paymentMethod'],
        'promotionCode': value['promotionCode'],
        'requestId': value['requestId'],
        'shippingAddressId': value['shippingAddressId'],
        'total': value['total'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Experience } from './Experience';
import {
    ExperienceFromJSON,
    ExperienceFromJSONTyped,
    ExperienceToJSON,
} from './Experience';
import type { Video } from './Video';
import {
    VideoFromJSON,
    VideoFromJSONTyped,
    VideoToJSON,
} from './Video';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';
import type { Coordinator } from './Coordinator';
import {
    CoordinatorFromJSON,
    CoordinatorFromJSONTyped,
    CoordinatorToJSON,
} from './Coordinator';

/**
 * 
 * @export
 * @interface VideoResponse
 */
export interface VideoResponse {
    /**
     * 
     * @type {Coordinator}
     * @memberof VideoResponse
     */
    coordinator?: Coordinator;
    /**
     * 体験一覧
     * @type {Array<Experience>}
     * @memberof VideoResponse
     */
    experiences?: Array<Experience>;
    /**
     * 商品一覧
     * @type {Array<Product>}
     * @memberof VideoResponse
     */
    products?: Array<Product>;
    /**
     * 
     * @type {Video}
     * @memberof VideoResponse
     */
    video?: Video;
}

/**
 * Check if a given object implements the VideoResponse interface.
 */
export function instanceOfVideoResponse(value: object): value is VideoResponse {
    return true;
}

export function VideoResponseFromJSON(json: any): VideoResponse {
    return VideoResponseFromJSONTyped(json, false);
}

export function VideoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinator': json['coordinator'] == null ? undefined : CoordinatorFromJSON(json['coordinator']),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(ExperienceFromJSON)),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ProductFromJSON)),
        'video': json['video'] == null ? undefined : VideoFromJSON(json['video']),
    };
}

export function VideoResponseToJSON(value?: VideoResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinator': CoordinatorToJSON(value['coordinator']),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(ExperienceToJSON)),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ProductToJSON)),
        'video': VideoToJSON(value['video']),
    };
}


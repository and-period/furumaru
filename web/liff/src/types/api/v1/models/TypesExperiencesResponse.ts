/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCoordinator } from './TypesCoordinator';
import {
    TypesCoordinatorFromJSON,
    TypesCoordinatorFromJSONTyped,
    TypesCoordinatorToJSON,
} from './TypesCoordinator';
import type { TypesExperience } from './TypesExperience';
import {
    TypesExperienceFromJSON,
    TypesExperienceFromJSONTyped,
    TypesExperienceToJSON,
} from './TypesExperience';
import type { TypesProducer } from './TypesProducer';
import {
    TypesProducerFromJSON,
    TypesProducerFromJSONTyped,
    TypesProducerToJSON,
} from './TypesProducer';
import type { TypesExperienceType } from './TypesExperienceType';
import {
    TypesExperienceTypeFromJSON,
    TypesExperienceTypeFromJSONTyped,
    TypesExperienceTypeToJSON,
} from './TypesExperienceType';

/**
 * 
 * @export
 * @interface TypesExperiencesResponse
 */
export interface TypesExperiencesResponse {
    /**
     * コーディネータ一覧
     * @type {Array<TypesCoordinator>}
     * @memberof TypesExperiencesResponse
     */
    coordinators?: Array<TypesCoordinator>;
    /**
     * 体験種別一覧
     * @type {Array<TypesExperienceType>}
     * @memberof TypesExperiencesResponse
     */
    experienceTypes?: Array<TypesExperienceType>;
    /**
     * 体験一覧
     * @type {Array<TypesExperience>}
     * @memberof TypesExperiencesResponse
     */
    experiences?: Array<TypesExperience>;
    /**
     * 生産者一覧
     * @type {Array<TypesProducer>}
     * @memberof TypesExperiencesResponse
     */
    producers?: Array<TypesProducer>;
    /**
     * 体験合計数
     * @type {number}
     * @memberof TypesExperiencesResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the TypesExperiencesResponse interface.
 */
export function instanceOfTypesExperiencesResponse(value: object): value is TypesExperiencesResponse {
    return true;
}

export function TypesExperiencesResponseFromJSON(json: any): TypesExperiencesResponse {
    return TypesExperiencesResponseFromJSONTyped(json, false);
}

export function TypesExperiencesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesExperiencesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': json['coordinators'] == null ? undefined : ((json['coordinators'] as Array<any>).map(TypesCoordinatorFromJSON)),
        'experienceTypes': json['experienceTypes'] == null ? undefined : ((json['experienceTypes'] as Array<any>).map(TypesExperienceTypeFromJSON)),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(TypesExperienceFromJSON)),
        'producers': json['producers'] == null ? undefined : ((json['producers'] as Array<any>).map(TypesProducerFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function TypesExperiencesResponseToJSON(value?: TypesExperiencesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinators': value['coordinators'] == null ? undefined : ((value['coordinators'] as Array<any>).map(TypesCoordinatorToJSON)),
        'experienceTypes': value['experienceTypes'] == null ? undefined : ((value['experienceTypes'] as Array<any>).map(TypesExperienceTypeToJSON)),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(TypesExperienceToJSON)),
        'producers': value['producers'] == null ? undefined : ((value['producers'] as Array<any>).map(TypesProducerToJSON)),
        'total': value['total'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostalCodeResponse
 */
export interface PostalCodeResponse {
    /**
     * 市区町村名
     * @type {string}
     * @memberof PostalCodeResponse
     */
    city: string;
    /**
     * 郵便番号
     * @type {string}
     * @memberof PostalCodeResponse
     */
    postalCode: string;
    /**
     * 都道府県名
     * @type {string}
     * @memberof PostalCodeResponse
     */
    prefecture: string;
    /**
     * 都道府県コード
     * @type {number}
     * @memberof PostalCodeResponse
     */
    prefectureCode: number;
    /**
     * 町域名
     * @type {string}
     * @memberof PostalCodeResponse
     */
    town: string;
}

/**
 * Check if a given object implements the PostalCodeResponse interface.
 */
export function instanceOfPostalCodeResponse(value: object): value is PostalCodeResponse {
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('postalCode' in value) || value['postalCode'] === undefined) return false;
    if (!('prefecture' in value) || value['prefecture'] === undefined) return false;
    if (!('prefectureCode' in value) || value['prefectureCode'] === undefined) return false;
    if (!('town' in value) || value['town'] === undefined) return false;
    return true;
}

export function PostalCodeResponseFromJSON(json: any): PostalCodeResponse {
    return PostalCodeResponseFromJSONTyped(json, false);
}

export function PostalCodeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostalCodeResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'city': json['city'],
        'postalCode': json['postalCode'],
        'prefecture': json['prefecture'],
        'prefectureCode': json['prefectureCode'],
        'town': json['town'],
    };
}

export function PostalCodeResponseToJSON(json: any): PostalCodeResponse {
    return PostalCodeResponseToJSONTyped(json, false);
}

export function PostalCodeResponseToJSONTyped(value?: PostalCodeResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'city': value['city'],
        'postalCode': value['postalCode'],
        'prefecture': value['prefecture'],
        'prefectureCode': value['prefectureCode'],
        'town': value['town'],
    };
}


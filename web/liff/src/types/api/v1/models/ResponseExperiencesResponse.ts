/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseExperience } from './ResponseExperience';
import {
    ResponseExperienceFromJSON,
    ResponseExperienceFromJSONTyped,
    ResponseExperienceToJSON,
} from './ResponseExperience';
import type { ResponseExperienceType } from './ResponseExperienceType';
import {
    ResponseExperienceTypeFromJSON,
    ResponseExperienceTypeFromJSONTyped,
    ResponseExperienceTypeToJSON,
} from './ResponseExperienceType';
import type { ResponseProducer } from './ResponseProducer';
import {
    ResponseProducerFromJSON,
    ResponseProducerFromJSONTyped,
    ResponseProducerToJSON,
} from './ResponseProducer';
import type { ResponseCoordinator } from './ResponseCoordinator';
import {
    ResponseCoordinatorFromJSON,
    ResponseCoordinatorFromJSONTyped,
    ResponseCoordinatorToJSON,
} from './ResponseCoordinator';

/**
 * 
 * @export
 * @interface ResponseExperiencesResponse
 */
export interface ResponseExperiencesResponse {
    /**
     * コーディネータ一覧
     * @type {Array<ResponseCoordinator>}
     * @memberof ResponseExperiencesResponse
     */
    coordinators?: Array<ResponseCoordinator>;
    /**
     * 体験種別一覧
     * @type {Array<ResponseExperienceType>}
     * @memberof ResponseExperiencesResponse
     */
    experienceTypes?: Array<ResponseExperienceType>;
    /**
     * 体験一覧
     * @type {Array<ResponseExperience>}
     * @memberof ResponseExperiencesResponse
     */
    experiences?: Array<ResponseExperience>;
    /**
     * 生産者一覧
     * @type {Array<ResponseProducer>}
     * @memberof ResponseExperiencesResponse
     */
    producers?: Array<ResponseProducer>;
    /**
     * 体験合計数
     * @type {number}
     * @memberof ResponseExperiencesResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the ResponseExperiencesResponse interface.
 */
export function instanceOfResponseExperiencesResponse(value: object): value is ResponseExperiencesResponse {
    return true;
}

export function ResponseExperiencesResponseFromJSON(json: any): ResponseExperiencesResponse {
    return ResponseExperiencesResponseFromJSONTyped(json, false);
}

export function ResponseExperiencesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseExperiencesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinators': json['coordinators'] == null ? undefined : ((json['coordinators'] as Array<any>).map(ResponseCoordinatorFromJSON)),
        'experienceTypes': json['experienceTypes'] == null ? undefined : ((json['experienceTypes'] as Array<any>).map(ResponseExperienceTypeFromJSON)),
        'experiences': json['experiences'] == null ? undefined : ((json['experiences'] as Array<any>).map(ResponseExperienceFromJSON)),
        'producers': json['producers'] == null ? undefined : ((json['producers'] as Array<any>).map(ResponseProducerFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function ResponseExperiencesResponseToJSON(value?: ResponseExperiencesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinators': value['coordinators'] == null ? undefined : ((value['coordinators'] as Array<any>).map(ResponseCoordinatorToJSON)),
        'experienceTypes': value['experienceTypes'] == null ? undefined : ((value['experienceTypes'] as Array<any>).map(ResponseExperienceTypeToJSON)),
        'experiences': value['experiences'] == null ? undefined : ((value['experiences'] as Array<any>).map(ResponseExperienceToJSON)),
        'producers': value['producers'] == null ? undefined : ((value['producers'] as Array<any>).map(ResponseProducerToJSON)),
        'total': value['total'],
    };
}


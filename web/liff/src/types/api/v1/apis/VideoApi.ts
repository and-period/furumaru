/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ResponseVideoResponse,
  ResponseVideosResponse,
  UtilErrorResponse,
} from '../models/index';
import {
    ResponseVideoResponseFromJSON,
    ResponseVideoResponseToJSON,
    ResponseVideosResponseFromJSON,
    ResponseVideosResponseToJSON,
    UtilErrorResponseFromJSON,
    UtilErrorResponseToJSON,
} from '../models/index';

export interface VideosGetRequest {
    limit?: number;
    offset?: number;
    category?: string;
    coordinatorId?: string;
    name?: string;
}

export interface VideosVideoIdGetRequest {
    videoId: string;
}

/**
 * 
 */
export class VideoApi extends runtime.BaseAPI {

    /**
     * 動画の一覧を取得します。
     * 動画一覧取得
     */
    async videosGetRaw(requestParameters: VideosGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseVideosResponse>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['category'] != null) {
            queryParameters['category'] = requestParameters['category'];
        }

        if (requestParameters['coordinatorId'] != null) {
            queryParameters['coordinatorId'] = requestParameters['coordinatorId'];
        }

        if (requestParameters['name'] != null) {
            queryParameters['name'] = requestParameters['name'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/videos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseVideosResponseFromJSON(jsonValue));
    }

    /**
     * 動画の一覧を取得します。
     * 動画一覧取得
     */
    async videosGet(requestParameters: VideosGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseVideosResponse> {
        const response = await this.videosGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 指定されたIDの動画詳細を取得します。
     * 動画詳細取得
     */
    async videosVideoIdGetRaw(requestParameters: VideosVideoIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseVideoResponse>> {
        if (requestParameters['videoId'] == null) {
            throw new runtime.RequiredError(
                'videoId',
                'Required parameter "videoId" was null or undefined when calling videosVideoIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/videos/{videoId}`.replace(`{${"videoId"}}`, encodeURIComponent(String(requestParameters['videoId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseVideoResponseFromJSON(jsonValue));
    }

    /**
     * 指定されたIDの動画詳細を取得します。
     * 動画詳細取得
     */
    async videosVideoIdGet(requestParameters: VideosVideoIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseVideoResponse> {
        const response = await this.videosVideoIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

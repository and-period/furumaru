/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  ProducerResponse,
  ProducersResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ProducerResponseFromJSON,
    ProducerResponseToJSON,
    ProducersResponseFromJSON,
    ProducersResponseToJSON,
} from '../models/index';

export interface ProducersGetRequest {
    limit?: number;
    offset?: number;
}

export interface ProducersProducerIdGetRequest {
    producerId: string;
}

/**
 * 
 */
export class ProducerApi extends runtime.BaseAPI {

    /**
     * 生産者の一覧を取得します。
     * 生産者一覧取得
     */
    async producersGetRaw(requestParameters: ProducersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProducersResponse>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/producers`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProducersResponseFromJSON(jsonValue));
    }

    /**
     * 生産者の一覧を取得します。
     * 生産者一覧取得
     */
    async producersGet(requestParameters: ProducersGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProducersResponse> {
        const response = await this.producersGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 生産者の詳細情報を取得します。
     * 生産者詳細取得
     */
    async producersProducerIdGetRaw(requestParameters: ProducersProducerIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProducerResponse>> {
        if (requestParameters['producerId'] == null) {
            throw new runtime.RequiredError(
                'producerId',
                'Required parameter "producerId" was null or undefined when calling producersProducerIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/producers/{producerId}`;
        urlPath = urlPath.replace(`{${"producerId"}}`, encodeURIComponent(String(requestParameters['producerId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProducerResponseFromJSON(jsonValue));
    }

    /**
     * 生産者の詳細情報を取得します。
     * 生産者詳細取得
     */
    async producersProducerIdGet(requestParameters: ProducersProducerIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProducerResponse> {
        const response = await this.producersProducerIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

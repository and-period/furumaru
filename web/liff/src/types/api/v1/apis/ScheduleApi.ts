/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ArchiveSchedulesResponse,
  ErrorResponse,
  LiveSchedulesResponse,
  ScheduleResponse,
} from '../models/index';
import {
    ArchiveSchedulesResponseFromJSON,
    ArchiveSchedulesResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    LiveSchedulesResponseFromJSON,
    LiveSchedulesResponseToJSON,
    ScheduleResponseFromJSON,
    ScheduleResponseToJSON,
} from '../models/index';

export interface SchedulesArchivesGetRequest {
    limit?: number;
    offset?: number;
    coordinator?: string;
    producer?: string;
}

export interface SchedulesLivesGetRequest {
    limit?: number;
    offset?: number;
    coordinator?: string;
    producer?: string;
}

export interface SchedulesScheduleIdGetRequest {
    scheduleId: string;
}

/**
 * 
 */
export class ScheduleApi extends runtime.BaseAPI {

    /**
     * 過去の配信アーカイブスケジュール一覧を取得します。
     * アーカイブスケジュール一覧取得
     */
    async schedulesArchivesGetRaw(requestParameters: SchedulesArchivesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ArchiveSchedulesResponse>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['coordinator'] != null) {
            queryParameters['coordinator'] = requestParameters['coordinator'];
        }

        if (requestParameters['producer'] != null) {
            queryParameters['producer'] = requestParameters['producer'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/schedules/archives`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ArchiveSchedulesResponseFromJSON(jsonValue));
    }

    /**
     * 過去の配信アーカイブスケジュール一覧を取得します。
     * アーカイブスケジュール一覧取得
     */
    async schedulesArchivesGet(requestParameters: SchedulesArchivesGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ArchiveSchedulesResponse> {
        const response = await this.schedulesArchivesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 現在配信中または配信予定のライブスケジュール一覧を取得します。
     * ライブ配信スケジュール一覧取得
     */
    async schedulesLivesGetRaw(requestParameters: SchedulesLivesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LiveSchedulesResponse>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['coordinator'] != null) {
            queryParameters['coordinator'] = requestParameters['coordinator'];
        }

        if (requestParameters['producer'] != null) {
            queryParameters['producer'] = requestParameters['producer'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/schedules/lives`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LiveSchedulesResponseFromJSON(jsonValue));
    }

    /**
     * 現在配信中または配信予定のライブスケジュール一覧を取得します。
     * ライブ配信スケジュール一覧取得
     */
    async schedulesLivesGet(requestParameters: SchedulesLivesGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LiveSchedulesResponse> {
        const response = await this.schedulesLivesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 指定されたIDのスケジュール詳細を取得します。
     * スケジュール詳細取得
     */
    async schedulesScheduleIdGetRaw(requestParameters: SchedulesScheduleIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScheduleResponse>> {
        if (requestParameters['scheduleId'] == null) {
            throw new runtime.RequiredError(
                'scheduleId',
                'Required parameter "scheduleId" was null or undefined when calling schedulesScheduleIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/schedules/{scheduleId}`.replace(`{${"scheduleId"}}`, encodeURIComponent(String(requestParameters['scheduleId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ScheduleResponseFromJSON(jsonValue));
    }

    /**
     * 指定されたIDのスケジュール詳細を取得します。
     * スケジュール詳細取得
     */
    async schedulesScheduleIdGet(requestParameters: SchedulesScheduleIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScheduleResponse> {
        const response = await this.schedulesScheduleIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 購入者向け
 * 購入者向けのふるマルAPIです。
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ResponseProductResponse,
  ResponseProductsResponse,
  UtilErrorResponse,
} from '../models/index';
import {
    ResponseProductResponseFromJSON,
    ResponseProductResponseToJSON,
    ResponseProductsResponseFromJSON,
    ResponseProductsResponseToJSON,
    UtilErrorResponseFromJSON,
    UtilErrorResponseToJSON,
} from '../models/index';

export interface ProductsGetRequest {
    limit?: number;
    offset?: number;
    coordinatorId?: string;
}

export interface ProductsProductIdGetRequest {
    productId: string;
}

/**
 * 
 */
export class ProductApi extends runtime.BaseAPI {

    /**
     * 商品の一覧を取得します。
     * 商品一覧取得
     */
    async productsGetRaw(requestParameters: ProductsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseProductsResponse>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['coordinatorId'] != null) {
            queryParameters['coordinatorId'] = requestParameters['coordinatorId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/products`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseProductsResponseFromJSON(jsonValue));
    }

    /**
     * 商品の一覧を取得します。
     * 商品一覧取得
     */
    async productsGet(requestParameters: ProductsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseProductsResponse> {
        const response = await this.productsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Google Merchant Center用の商品フィードをXML形式で取得します。
     * Merchant Centerフィード取得
     */
    async productsMerchantFeedGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/products/merchant-feed`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Google Merchant Center用の商品フィードをXML形式で取得します。
     * Merchant Centerフィード取得
     */
    async productsMerchantFeedGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.productsMerchantFeedGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 商品の詳細情報を取得します。
     * 商品詳細取得
     */
    async productsProductIdGetRaw(requestParameters: ProductsProductIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResponseProductResponse>> {
        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling productsProductIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/products/{productId}`.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResponseProductResponseFromJSON(jsonValue));
    }

    /**
     * 商品の詳細情報を取得します。
     * 商品詳細取得
     */
    async productsProductIdGet(requestParameters: ProductsProductIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResponseProductResponse> {
        const response = await this.productsProductIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

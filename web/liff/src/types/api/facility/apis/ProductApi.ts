/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 外部宿泊施設向け
 * 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  ProductResponse,
  ProductsResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ProductResponseFromJSON,
    ProductResponseToJSON,
    ProductsResponseFromJSON,
    ProductsResponseToJSON,
} from '../models/index';

export interface FacilitiesFacilityIdProductsGetRequest {
    facilityId: string;
    limit?: number;
    offset?: number;
}

export interface FacilitiesFacilityIdProductsProductIdGetRequest {
    facilityId: string;
    productId: string;
}

/**
 * 
 */
export class ProductApi extends runtime.BaseAPI {

    /**
     * 商品の一覧を取得します。
     * 商品一覧取得
     */
    async facilitiesFacilityIdProductsGetRaw(requestParameters: FacilitiesFacilityIdProductsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductsResponse>> {
        if (requestParameters['facilityId'] == null) {
            throw new runtime.RequiredError(
                'facilityId',
                'Required parameter "facilityId" was null or undefined when calling facilitiesFacilityIdProductsGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/facilities/{facilityId}/products`.replace(`{${"facilityId"}}`, encodeURIComponent(String(requestParameters['facilityId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProductsResponseFromJSON(jsonValue));
    }

    /**
     * 商品の一覧を取得します。
     * 商品一覧取得
     */
    async facilitiesFacilityIdProductsGet(requestParameters: FacilitiesFacilityIdProductsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductsResponse> {
        const response = await this.facilitiesFacilityIdProductsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 商品の詳細を取得します。
     * 商品詳細取得
     */
    async facilitiesFacilityIdProductsProductIdGetRaw(requestParameters: FacilitiesFacilityIdProductsProductIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProductResponse>> {
        if (requestParameters['facilityId'] == null) {
            throw new runtime.RequiredError(
                'facilityId',
                'Required parameter "facilityId" was null or undefined when calling facilitiesFacilityIdProductsProductIdGet().'
            );
        }

        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling facilitiesFacilityIdProductsProductIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/facilities/{facilityId}/products/{productId}`.replace(`{${"facilityId"}}`, encodeURIComponent(String(requestParameters['facilityId']))).replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProductResponseFromJSON(jsonValue));
    }

    /**
     * 商品の詳細を取得します。
     * 商品詳細取得
     */
    async facilitiesFacilityIdProductsProductIdGet(requestParameters: FacilitiesFacilityIdProductsProductIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProductResponse> {
        const response = await this.facilitiesFacilityIdProductsProductIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 外部宿泊施設向け
 * 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrderItem } from './OrderItem';
import {
    OrderItemFromJSON,
    OrderItemFromJSONTyped,
    OrderItemToJSON,
} from './OrderItem';
import type { OrderRefund } from './OrderRefund';
import {
    OrderRefundFromJSON,
    OrderRefundFromJSONTyped,
    OrderRefundToJSON,
} from './OrderRefund';
import type { OrderPayment } from './OrderPayment';
import {
    OrderPaymentFromJSON,
    OrderPaymentFromJSONTyped,
    OrderPaymentToJSON,
} from './OrderPayment';

/**
 * 注文履歴情報
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * コーディネータID
     * @type {string}
     * @memberof Order
     */
    coordinatorId?: string;
    /**
     * 注文履歴ID
     * @type {string}
     * @memberof Order
     */
    id?: string;
    /**
     * 注文商品一覧
     * @type {Array<OrderItem>}
     * @memberof Order
     */
    items?: Array<OrderItem>;
    /**
     * 
     * @type {OrderPayment}
     * @memberof Order
     */
    payment?: OrderPayment;
    /**
     * 受け取り日時
     * @type {number}
     * @memberof Order
     */
    pickupAt?: number;
    /**
     * 受け取り場所
     * @type {string}
     * @memberof Order
     */
    pickupLocation?: string;
    /**
     * プロモーションID
     * @type {string}
     * @memberof Order
     */
    promotionId?: string;
    /**
     * 
     * @type {OrderRefund}
     * @memberof Order
     */
    refund?: OrderRefund;
    /**
     * 注文ステータス
     * @type {number}
     * @memberof Order
     */
    status?: number;
    /**
     * 注文種別
     * @type {number}
     * @memberof Order
     */
    type?: number;
}

/**
 * Check if a given object implements the Order interface.
 */
export function instanceOfOrder(value: object): value is Order {
    return true;
}

export function OrderFromJSON(json: any): Order {
    return OrderFromJSONTyped(json, false);
}

export function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinatorId': json['coordinatorId'] == null ? undefined : json['coordinatorId'],
        'id': json['id'] == null ? undefined : json['id'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(OrderItemFromJSON)),
        'payment': json['payment'] == null ? undefined : OrderPaymentFromJSON(json['payment']),
        'pickupAt': json['pickupAt'] == null ? undefined : json['pickupAt'],
        'pickupLocation': json['pickupLocation'] == null ? undefined : json['pickupLocation'],
        'promotionId': json['promotionId'] == null ? undefined : json['promotionId'],
        'refund': json['refund'] == null ? undefined : OrderRefundFromJSON(json['refund']),
        'status': json['status'] == null ? undefined : json['status'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function OrderToJSON(value?: Order | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinatorId': value['coordinatorId'],
        'id': value['id'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(OrderItemToJSON)),
        'payment': OrderPaymentToJSON(value['payment']),
        'pickupAt': value['pickupAt'],
        'pickupLocation': value['pickupLocation'],
        'promotionId': value['promotionId'],
        'refund': OrderRefundToJSON(value['refund']),
        'status': value['status'],
        'type': value['type'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 外部宿泊施設向け
 * 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCoordinator } from './TypesCoordinator';
import {
    TypesCoordinatorFromJSON,
    TypesCoordinatorFromJSONTyped,
    TypesCoordinatorToJSON,
} from './TypesCoordinator';
import type { TypesProductTag } from './TypesProductTag';
import {
    TypesProductTagFromJSON,
    TypesProductTagFromJSONTyped,
    TypesProductTagToJSON,
} from './TypesProductTag';
import type { TypesProduct } from './TypesProduct';
import {
    TypesProductFromJSON,
    TypesProductFromJSONTyped,
    TypesProductToJSON,
} from './TypesProduct';
import type { TypesProducer } from './TypesProducer';
import {
    TypesProducerFromJSON,
    TypesProducerFromJSONTyped,
    TypesProducerToJSON,
} from './TypesProducer';
import type { TypesProductType } from './TypesProductType';
import {
    TypesProductTypeFromJSON,
    TypesProductTypeFromJSONTyped,
    TypesProductTypeToJSON,
} from './TypesProductType';
import type { TypesCategory } from './TypesCategory';
import {
    TypesCategoryFromJSON,
    TypesCategoryFromJSONTyped,
    TypesCategoryToJSON,
} from './TypesCategory';

/**
 * 
 * @export
 * @interface TypesProductResponse
 */
export interface TypesProductResponse {
    /**
     * 
     * @type {TypesCategory}
     * @memberof TypesProductResponse
     */
    category?: TypesCategory;
    /**
     * 
     * @type {TypesCoordinator}
     * @memberof TypesProductResponse
     */
    coordinator?: TypesCoordinator;
    /**
     * 
     * @type {TypesProducer}
     * @memberof TypesProductResponse
     */
    producer?: TypesProducer;
    /**
     * 
     * @type {TypesProduct}
     * @memberof TypesProductResponse
     */
    product?: TypesProduct;
    /**
     * 商品タグ一覧
     * @type {Array<TypesProductTag>}
     * @memberof TypesProductResponse
     */
    productTags?: Array<TypesProductTag>;
    /**
     * 
     * @type {TypesProductType}
     * @memberof TypesProductResponse
     */
    productType?: TypesProductType;
}

/**
 * Check if a given object implements the TypesProductResponse interface.
 */
export function instanceOfTypesProductResponse(value: object): value is TypesProductResponse {
    return true;
}

export function TypesProductResponseFromJSON(json: any): TypesProductResponse {
    return TypesProductResponseFromJSONTyped(json, false);
}

export function TypesProductResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesProductResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'] == null ? undefined : TypesCategoryFromJSON(json['category']),
        'coordinator': json['coordinator'] == null ? undefined : TypesCoordinatorFromJSON(json['coordinator']),
        'producer': json['producer'] == null ? undefined : TypesProducerFromJSON(json['producer']),
        'product': json['product'] == null ? undefined : TypesProductFromJSON(json['product']),
        'productTags': json['productTags'] == null ? undefined : ((json['productTags'] as Array<any>).map(TypesProductTagFromJSON)),
        'productType': json['productType'] == null ? undefined : TypesProductTypeFromJSON(json['productType']),
    };
}

export function TypesProductResponseToJSON(value?: TypesProductResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'category': TypesCategoryToJSON(value['category']),
        'coordinator': TypesCoordinatorToJSON(value['coordinator']),
        'producer': TypesProducerToJSON(value['producer']),
        'product': TypesProductToJSON(value['product']),
        'productTags': value['productTags'] == null ? undefined : ((value['productTags'] as Array<any>).map(TypesProductTagToJSON)),
        'productType': TypesProductTypeToJSON(value['productType']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 外部宿泊施設向け
 * 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 生産者情報
 * @export
 * @interface TypesProducer
 */
export interface TypesProducer {
    /**
     * 市区町村
     * @type {string}
     * @memberof TypesProducer
     */
    city?: string;
    /**
     * 担当コーディネータID
     * @type {string}
     * @memberof TypesProducer
     */
    coordinatorId?: string;
    /**
     * Facebookアカウント
     * @type {string}
     * @memberof TypesProducer
     */
    facebookId?: string;
    /**
     * ヘッダー画像URL
     * @type {string}
     * @memberof TypesProducer
     */
    headerUrl?: string;
    /**
     * 生産者ID
     * @type {string}
     * @memberof TypesProducer
     */
    id?: string;
    /**
     * Instagramアカウント
     * @type {string}
     * @memberof TypesProducer
     */
    instagramId?: string;
    /**
     * 都道府県
     * @type {string}
     * @memberof TypesProducer
     */
    prefecture?: string;
    /**
     * 紹介文
     * @type {string}
     * @memberof TypesProducer
     */
    profile?: string;
    /**
     * 紹介映像URL
     * @type {string}
     * @memberof TypesProducer
     */
    promotionVideoUrl?: string;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof TypesProducer
     */
    thumbnailUrl?: string;
    /**
     * 生産者名
     * @type {string}
     * @memberof TypesProducer
     */
    username?: string;
}

/**
 * Check if a given object implements the TypesProducer interface.
 */
export function instanceOfTypesProducer(value: object): value is TypesProducer {
    return true;
}

export function TypesProducerFromJSON(json: any): TypesProducer {
    return TypesProducerFromJSONTyped(json, false);
}

export function TypesProducerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesProducer {
    if (json == null) {
        return json;
    }
    return {
        
        'city': json['city'] == null ? undefined : json['city'],
        'coordinatorId': json['coordinatorId'] == null ? undefined : json['coordinatorId'],
        'facebookId': json['facebookId'] == null ? undefined : json['facebookId'],
        'headerUrl': json['headerUrl'] == null ? undefined : json['headerUrl'],
        'id': json['id'] == null ? undefined : json['id'],
        'instagramId': json['instagramId'] == null ? undefined : json['instagramId'],
        'prefecture': json['prefecture'] == null ? undefined : json['prefecture'],
        'profile': json['profile'] == null ? undefined : json['profile'],
        'promotionVideoUrl': json['promotionVideoUrl'] == null ? undefined : json['promotionVideoUrl'],
        'thumbnailUrl': json['thumbnailUrl'] == null ? undefined : json['thumbnailUrl'],
        'username': json['username'] == null ? undefined : json['username'],
    };
}

export function TypesProducerToJSON(value?: TypesProducer | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'city': value['city'],
        'coordinatorId': value['coordinatorId'],
        'facebookId': value['facebookId'],
        'headerUrl': value['headerUrl'],
        'id': value['id'],
        'instagramId': value['instagramId'],
        'prefecture': value['prefecture'],
        'profile': value['profile'],
        'promotionVideoUrl': value['promotionVideoUrl'],
        'thumbnailUrl': value['thumbnailUrl'],
        'username': value['username'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 外部宿泊施設向け
 * 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ResponseProduct } from './ResponseProduct';
import {
    ResponseProductFromJSON,
    ResponseProductFromJSONTyped,
    ResponseProductToJSON,
} from './ResponseProduct';
import type { ResponseCategory } from './ResponseCategory';
import {
    ResponseCategoryFromJSON,
    ResponseCategoryFromJSONTyped,
    ResponseCategoryToJSON,
} from './ResponseCategory';
import type { ResponseProductType } from './ResponseProductType';
import {
    ResponseProductTypeFromJSON,
    ResponseProductTypeFromJSONTyped,
    ResponseProductTypeToJSON,
} from './ResponseProductType';
import type { ResponseProductTag } from './ResponseProductTag';
import {
    ResponseProductTagFromJSON,
    ResponseProductTagFromJSONTyped,
    ResponseProductTagToJSON,
} from './ResponseProductTag';
import type { ResponseProducer } from './ResponseProducer';
import {
    ResponseProducerFromJSON,
    ResponseProducerFromJSONTyped,
    ResponseProducerToJSON,
} from './ResponseProducer';
import type { ResponseCoordinator } from './ResponseCoordinator';
import {
    ResponseCoordinatorFromJSON,
    ResponseCoordinatorFromJSONTyped,
    ResponseCoordinatorToJSON,
} from './ResponseCoordinator';

/**
 * 
 * @export
 * @interface ResponseProductsResponse
 */
export interface ResponseProductsResponse {
    /**
     * 商品種別一覧
     * @type {Array<ResponseCategory>}
     * @memberof ResponseProductsResponse
     */
    categories?: Array<ResponseCategory>;
    /**
     * コーディネータ一覧
     * @type {Array<ResponseCoordinator>}
     * @memberof ResponseProductsResponse
     */
    coordinators?: Array<ResponseCoordinator>;
    /**
     * 生産者一覧
     * @type {Array<ResponseProducer>}
     * @memberof ResponseProductsResponse
     */
    producers?: Array<ResponseProducer>;
    /**
     * 商品タグ一覧
     * @type {Array<ResponseProductTag>}
     * @memberof ResponseProductsResponse
     */
    productTags?: Array<ResponseProductTag>;
    /**
     * 品目一覧
     * @type {Array<ResponseProductType>}
     * @memberof ResponseProductsResponse
     */
    productTypes?: Array<ResponseProductType>;
    /**
     * 商品一覧
     * @type {Array<ResponseProduct>}
     * @memberof ResponseProductsResponse
     */
    products?: Array<ResponseProduct>;
    /**
     * 商品合計数
     * @type {number}
     * @memberof ResponseProductsResponse
     */
    total?: number;
}

/**
 * Check if a given object implements the ResponseProductsResponse interface.
 */
export function instanceOfResponseProductsResponse(value: object): value is ResponseProductsResponse {
    return true;
}

export function ResponseProductsResponseFromJSON(json: any): ResponseProductsResponse {
    return ResponseProductsResponseFromJSONTyped(json, false);
}

export function ResponseProductsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseProductsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'categories': json['categories'] == null ? undefined : ((json['categories'] as Array<any>).map(ResponseCategoryFromJSON)),
        'coordinators': json['coordinators'] == null ? undefined : ((json['coordinators'] as Array<any>).map(ResponseCoordinatorFromJSON)),
        'producers': json['producers'] == null ? undefined : ((json['producers'] as Array<any>).map(ResponseProducerFromJSON)),
        'productTags': json['productTags'] == null ? undefined : ((json['productTags'] as Array<any>).map(ResponseProductTagFromJSON)),
        'productTypes': json['productTypes'] == null ? undefined : ((json['productTypes'] as Array<any>).map(ResponseProductTypeFromJSON)),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ResponseProductFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function ResponseProductsResponseToJSON(value?: ResponseProductsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'categories': value['categories'] == null ? undefined : ((value['categories'] as Array<any>).map(ResponseCategoryToJSON)),
        'coordinators': value['coordinators'] == null ? undefined : ((value['coordinators'] as Array<any>).map(ResponseCoordinatorToJSON)),
        'producers': value['producers'] == null ? undefined : ((value['producers'] as Array<any>).map(ResponseProducerToJSON)),
        'productTags': value['productTags'] == null ? undefined : ((value['productTags'] as Array<any>).map(ResponseProductTagToJSON)),
        'productTypes': value['productTypes'] == null ? undefined : ((value['productTypes'] as Array<any>).map(ResponseProductTypeToJSON)),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ResponseProductToJSON)),
        'total': value['total'],
    };
}


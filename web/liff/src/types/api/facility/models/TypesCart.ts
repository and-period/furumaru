/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 外部宿泊施設向け
 * 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesCartItem } from './TypesCartItem';
import {
    TypesCartItemFromJSON,
    TypesCartItemFromJSONTyped,
    TypesCartItemToJSON,
} from './TypesCartItem';

/**
 * 
 * @export
 * @interface TypesCart
 */
export interface TypesCart {
    /**
     * コーディネータID
     * @type {string}
     * @memberof TypesCart
     */
    coordinatorId?: string;
    /**
     * 箱の商品一覧
     * @type {Array<TypesCartItem>}
     * @memberof TypesCart
     */
    items?: Array<TypesCartItem>;
    /**
     * 箱の通番
     * @type {number}
     * @memberof TypesCart
     */
    number?: number;
    /**
     * 箱の占有率
     * @type {number}
     * @memberof TypesCart
     */
    rate?: number;
    /**
     * 箱のサイズ
     * @type {number}
     * @memberof TypesCart
     */
    size?: number;
    /**
     * 箱の種別
     * @type {number}
     * @memberof TypesCart
     */
    type?: number;
}

/**
 * Check if a given object implements the TypesCart interface.
 */
export function instanceOfTypesCart(value: object): value is TypesCart {
    return true;
}

export function TypesCartFromJSON(json: any): TypesCart {
    return TypesCartFromJSONTyped(json, false);
}

export function TypesCartFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesCart {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinatorId': json['coordinatorId'] == null ? undefined : json['coordinatorId'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(TypesCartItemFromJSON)),
        'number': json['number'] == null ? undefined : json['number'],
        'rate': json['rate'] == null ? undefined : json['rate'],
        'size': json['size'] == null ? undefined : json['size'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function TypesCartToJSON(value?: TypesCart | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinatorId': value['coordinatorId'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(TypesCartItemToJSON)),
        'number': value['number'],
        'rate': value['rate'],
        'size': value['size'],
        'type': value['type'],
    };
}


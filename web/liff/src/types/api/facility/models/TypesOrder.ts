/* tslint:disable */
/* eslint-disable */
/**
 * ふるマル API - 外部宿泊施設向け
 * 外部宿泊施設向けのふるマルAPIです。（公開エンドポイントについては「ふるマルAPI - 購入者向け」を参照してください）
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypesOrderItem } from './TypesOrderItem';
import {
    TypesOrderItemFromJSON,
    TypesOrderItemFromJSONTyped,
    TypesOrderItemToJSON,
} from './TypesOrderItem';
import type { TypesOrderRefund } from './TypesOrderRefund';
import {
    TypesOrderRefundFromJSON,
    TypesOrderRefundFromJSONTyped,
    TypesOrderRefundToJSON,
} from './TypesOrderRefund';
import type { TypesOrderPayment } from './TypesOrderPayment';
import {
    TypesOrderPaymentFromJSON,
    TypesOrderPaymentFromJSONTyped,
    TypesOrderPaymentToJSON,
} from './TypesOrderPayment';

/**
 * 注文履歴情報
 * @export
 * @interface TypesOrder
 */
export interface TypesOrder {
    /**
     * コーディネータID
     * @type {string}
     * @memberof TypesOrder
     */
    coordinatorId?: string;
    /**
     * 注文履歴ID
     * @type {string}
     * @memberof TypesOrder
     */
    id?: string;
    /**
     * 注文商品一覧
     * @type {Array<TypesOrderItem>}
     * @memberof TypesOrder
     */
    items?: Array<TypesOrderItem>;
    /**
     * 
     * @type {TypesOrderPayment}
     * @memberof TypesOrder
     */
    payment?: TypesOrderPayment;
    /**
     * 受け取り日時
     * @type {number}
     * @memberof TypesOrder
     */
    pickupAt?: number;
    /**
     * 受け取り場所
     * @type {string}
     * @memberof TypesOrder
     */
    pickupLocation?: string;
    /**
     * プロモーションID
     * @type {string}
     * @memberof TypesOrder
     */
    promotionId?: string;
    /**
     * 
     * @type {TypesOrderRefund}
     * @memberof TypesOrder
     */
    refund?: TypesOrderRefund;
    /**
     * 注文ステータス
     * @type {number}
     * @memberof TypesOrder
     */
    status?: number;
    /**
     * 注文種別
     * @type {number}
     * @memberof TypesOrder
     */
    type?: number;
}

/**
 * Check if a given object implements the TypesOrder interface.
 */
export function instanceOfTypesOrder(value: object): value is TypesOrder {
    return true;
}

export function TypesOrderFromJSON(json: any): TypesOrder {
    return TypesOrderFromJSONTyped(json, false);
}

export function TypesOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypesOrder {
    if (json == null) {
        return json;
    }
    return {
        
        'coordinatorId': json['coordinatorId'] == null ? undefined : json['coordinatorId'],
        'id': json['id'] == null ? undefined : json['id'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(TypesOrderItemFromJSON)),
        'payment': json['payment'] == null ? undefined : TypesOrderPaymentFromJSON(json['payment']),
        'pickupAt': json['pickupAt'] == null ? undefined : json['pickupAt'],
        'pickupLocation': json['pickupLocation'] == null ? undefined : json['pickupLocation'],
        'promotionId': json['promotionId'] == null ? undefined : json['promotionId'],
        'refund': json['refund'] == null ? undefined : TypesOrderRefundFromJSON(json['refund']),
        'status': json['status'] == null ? undefined : json['status'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function TypesOrderToJSON(value?: TypesOrder | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'coordinatorId': value['coordinatorId'],
        'id': value['id'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(TypesOrderItemToJSON)),
        'payment': TypesOrderPaymentToJSON(value['payment']),
        'pickupAt': value['pickupAt'],
        'pickupLocation': value['pickupLocation'],
        'promotionId': value['promotionId'],
        'refund': TypesOrderRefundToJSON(value['refund']),
        'status': value['status'],
        'type': value['type'],
    };
}


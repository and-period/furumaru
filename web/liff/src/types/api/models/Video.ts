/* tslint:disable */
/* eslint-disable */
/**
 * Marche Online
 * マルシェ購入者用API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * オンデマンド配信情報
 * @export
 * @interface Video
 */
export interface Video {
    /**
     * オンデマンド配信ID
     * @type {string}
     * @memberof Video
     */
    id: string;
    /**
     * コーディネータID
     * @type {string}
     * @memberof Video
     */
    coordinatorId: string;
    /**
     * 商品ID一覧
     * @type {Array<string>}
     * @memberof Video
     */
    productIds: Array<string>;
    /**
     * 体験ID一覧
     * @type {Array<string>}
     * @memberof Video
     */
    experienceIds: Array<string>;
    /**
     * タイトル
     * @type {string}
     * @memberof Video
     */
    title: string;
    /**
     * 説明
     * @type {string}
     * @memberof Video
     */
    description: string;
    /**
     * サムネイルURL
     * @type {string}
     * @memberof Video
     */
    thumbnailUrl: string;
    /**
     * 動画URL
     * @type {string}
     * @memberof Video
     */
    videoUrl: string;
    /**
     * 公開日時 (unixtime)
     * @type {number}
     * @memberof Video
     */
    publishedAt: number;
}

/**
 * Check if a given object implements the Video interface.
 */
export function instanceOfVideo(value: object): value is Video {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('coordinatorId' in value) || value['coordinatorId'] === undefined) return false;
    if (!('productIds' in value) || value['productIds'] === undefined) return false;
    if (!('experienceIds' in value) || value['experienceIds'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('thumbnailUrl' in value) || value['thumbnailUrl'] === undefined) return false;
    if (!('videoUrl' in value) || value['videoUrl'] === undefined) return false;
    if (!('publishedAt' in value) || value['publishedAt'] === undefined) return false;
    return true;
}

export function VideoFromJSON(json: any): Video {
    return VideoFromJSONTyped(json, false);
}

export function VideoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Video {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'coordinatorId': json['coordinatorId'],
        'productIds': json['productIds'],
        'experienceIds': json['experienceIds'],
        'title': json['title'],
        'description': json['description'],
        'thumbnailUrl': json['thumbnailUrl'],
        'videoUrl': json['videoUrl'],
        'publishedAt': json['publishedAt'],
    };
}

export function VideoToJSON(value?: Video | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'coordinatorId': value['coordinatorId'],
        'productIds': value['productIds'],
        'experienceIds': value['experienceIds'],
        'title': value['title'],
        'description': value['description'],
        'thumbnailUrl': value['thumbnailUrl'],
        'videoUrl': value['videoUrl'],
        'publishedAt': value['publishedAt'],
    };
}


// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mock_sfn is a generated GoMock package.
package mock_sfn

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStepFunction is a mock of StepFunction interface.
type MockStepFunction struct {
	ctrl     *gomock.Controller
	recorder *MockStepFunctionMockRecorder
}

// MockStepFunctionMockRecorder is the mock recorder for MockStepFunction.
type MockStepFunctionMockRecorder struct {
	mock *MockStepFunction
}

// NewMockStepFunction creates a new mock instance.
func NewMockStepFunction(ctrl *gomock.Controller) *MockStepFunction {
	mock := &MockStepFunction{ctrl: ctrl}
	mock.recorder = &MockStepFunctionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStepFunction) EXPECT() *MockStepFunctionMockRecorder {
	return m.recorder
}

// StartExecution mocks base method.
func (m *MockStepFunction) StartExecution(ctx context.Context, input interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartExecution", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// StartExecution indicates an expected call of StartExecution.
func (mr *MockStepFunctionMockRecorder) StartExecution(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartExecution", reflect.TypeOf((*MockStepFunction)(nil).StartExecution), ctx, input)
}

name: '[Backend] Build and Test'
on:
  push:
    paths:
    - '.github/actions/setup-go/**'
    - '.github/workflows/ci-backend.yaml'
    - 'api/**'
    - 'infra/docker/api/**'
    - 'infra/mysql/**'

env:
  SERVICE: api
  TZ: 'Asia/Tokyo'
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_USERNAME: root
  DB_PASSWORD: password

jobs:
  setup:
    name: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

  lint:
    name: lint
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

    - name: Setup
      run: make setup

    - name: Create Mock
      run: make mockgen

    - name: Fmt
      run: make fmt

    - name: Vet
      run: make vet

    - name: Lint
      run: make lint

  build:
    name: build
    needs: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

    - name: Build gateway
      run: make build SERVICE=gateway

    - name: Build media
      run: make build SERVICE=media

    - name: Build messenger
      run: make build SERVICE=messenger

  test:
    name: test
    needs: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]
    services:
      mysql:
        image: mysql:8.0.36
        ports:
        - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
        options: --health-cmd "mysqladmin ping -h 127.0.0.1"

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

    - name: Setup
      run: make setup

    - name: Create Mock
      run: make mockgen

    - name: Database Migration
      run: |
        go run ./hack/database-migrate-tidb/main.go \
          -db-driver='mysql' \
          -db-host=${DB_HOST} \
          -db-port=${DB_PORT} \
          -db-username=${DB_USERNAME} \
          -db-password=${DB_PASSWORD}
      env:
        DB_HOST: ${{ env.DB_HOST }}
        DB_PORT: ${{ env.DB_PORT }}
        DB_USERNAME: ${{ env.DB_USERNAME }}
        DB_PASSWORD: ${{ env.DB_PASSWORD }}

    - name: Test
      run: make test
      env:
        DB_HOST: ${{ env.DB_HOST }}
        DB_PORT: ${{ env.DB_PORT }}
        DB_USERNAME: ${{ env.DB_USERNAME }}
        DB_PASSWORD: ${{ env.DB_PASSWORD }}

    - uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: api
        verbose: true

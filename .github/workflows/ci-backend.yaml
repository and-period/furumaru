name: '[Backend] Build and Test'
on:
  push:
    paths:
    - '.github/actions/**'
    - '.github/workflows/ci-backend.yaml'
    - 'api/**'
    - 'infra/docker/api/**'
    - 'infra/docker/infra/tidb/**'
    - 'infra/tidb/**'

env:
  SERVICE: api
  TZ: 'Asia/Tokyo'
  DB_DRIVER: mysql
  DB_HOST: 127.0.0.1
  DB_PORT: 4000
  DB_USERNAME: root
  DB_PASSWORD: ''

jobs:
  setup:
    name: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

  lint:
    name: lint
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

    - name: golangci-lint
      uses: reviewdog/action-golangci-lint@f9bba13753278f6a73b27a56a3ffb1bfda90ed71 # v2.8.0
      with:
        workdir: ./api
        golangci_lint_flags: "--config=.golangci.yaml"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: github-pr-review
        filter_mode: diff_context
        fail_level: error

  build:
    name: build
    needs: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      GOCACHE: ~/.cache/go-build
      GOFLAGS: -buildvcs=false

    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

    - name: Build gateway
      run: make build SERVICE=gateway

    - name: Build media
      run: make build SERVICE=media

    - name: Build messenger
      run: make build SERVICE=messenger

  test:
    name: test
    needs: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      GOCACHE: ~/.cache/go-build
      GOFLAGS: -buildvcs=false

    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - uses: ./.github/actions/setup-go
      with:
        working-directory: ./api
        service: ${{ env.SERVICE }}

    - uses: ./.github/actions/setup-tidb

    - name: Database Migration
      run: |
        go run ./hack/database-migrate-tidb/main.go \
          -db-driver=${DB_DRIVER} \
          -db-host=${DB_HOST} \
          -db-port=${DB_PORT} \
          -db-username=${DB_USERNAME} \
          -db-password=${DB_PASSWORD}

    - name: Test with cache
      run: |
        # GOCACHEディレクトリを確認
        echo "GOCACHE=$GOCACHE"
        # テストを実行（キャッシュが利用可能な場合は自動的に使用される）
        make test

    - uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: api
        verbose: true

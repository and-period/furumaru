name: '[Frontend] Build and Test (Admin Web)'
on:
  push:
    paths:
    - '.github/workflows/ci-web-admin-for-all.yaml'
    - 'web/admin/**'
    - 'infra/docker/web/admin/**'

env:
  TZ: 'Asia/Tokyo'

jobs:
  setup:
    name: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./web/admin
    strategy:
      matrix:
        os: [ubuntu-latest] # exclude: macos-latest, windows-latest
        node: ['16.14.2']
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: 'yarn'
        cache-dependency-path: '**/yarn.lock'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          **/node_modules
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install
      # if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn --check-files --frozen-lockfile --non-interactive

  lint:
    name: lint
    needs: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./web/admin
    strategy:
      matrix:
        os: [ubuntu-latest] # exclude: macos-latest, windows-latest
        node: ['16.14.2']
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: |
          **/node_modules
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn --check-files --frozen-lockfile --non-interactive

    - name: Lint
      run: yarn lint

  build:
    name: build
    needs: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./web/admin
    strategy:
      matrix:
        os: [ubuntu-latest] # exclude: macos-latest, windows-latest
        node: ['16.14.2']
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: |
          **/node_modules
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn --check-files --frozen-lockfile --non-interactive

    - name: Build
      run: yarn build

  test:
    name: test
    needs: setup
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./web/admin
    strategy:
      matrix:
        os: [ubuntu-latest] # exclude: macos-latest, windows-latest
        node: ['16.14.2']
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: |
          **/node_modules
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn --check-files --frozen-lockfile --non-interactive

    - name: Test
      run: yarn test

    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: admin-web
        verbose: true

name: backend build and push

on:
  workflow_call:
    secrets:
      aws-role-arn:
        description: 'IAM Role ARN'
        required: true
      aws-region:
        description: 'AWS Region'
        required: true
      ecr-registry:
        description: 'ECRレジストリ名'
        required: true
      ecr-repository:
        description: 'ECRリポジトリ名'
        required: true
    inputs:
      service:
        description: 'サービス名'
        type: string
        required: true
      image-path:
        description: 'Dockerfileのパス'
        type: string
        required: true
      image-tag:
        description: 'ECRイメージタグ'
        type: string
        required: false
        default: 'latest'
    outputs:
      encoded-image-uri:
        description: 'ECRイメージURI（Bae64エンコード）'
        value: ${{ jobs.build_and_push.outputs.encoded-image-uri }}

permissions:
  id-token: write
  contents: read

jobs:
  build_and_push:
    name: build and push
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    outputs:
      encoded-image-uri: ${{ steps.set-output.outputs.encoded-image-uri }}

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - uses: ./.github/actions/setup-aws
      with:
        aws-role-arn: ${{ secrets.aws-role-arn }}
        aws-region: ${{ secrets.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set ECR_REPOSITORY_URL
      run: |
        echo "ECR_REPOSITORY_URL=${ECR_REGISTRY}/${ECR_REPOSITORY}" >> $GITHUB_ENV
      env:
        ECR_REGISTRY: ${{ secrets.ecr-registry }}
        ECR_REPOSITORY: ${{ secrets.ecr-repository }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        docker build -f ${IMAGE_PATH} --build-arg SERVICE=${SERVICE} -t ${ECR_REPOSITORY_URL} .
        docker tag ${ECR_REPOSITORY_URL} ${ECR_REPOSITORY_URL}:${ECR_IMAGE_TAG}
        docker push -a ${ECR_REPOSITORY_URL}
      env:
        SERVICE: ${{ inputs.service }}
        IMAGE_PATH: ${{ inputs.image-path }}
        ECR_IMAGE_TAG: ${{ inputs.image-tag }}

    - name: Set output
      id: set-output
      uses: actions/github-script@v7
      with:
        script: |
          const { ECR_REPOSITORY_URL, ECR_IMAGE_TAG } = process.env;
          const imageUri=`${ECR_REPOSITORY_URL}:${ECR_IMAGE_TAG}`;
          console.log('imageUri', imageUri);
          console.log('encodedUri', Buffer.from(imageUri).toString('base64'));
          core.setOutput('encoded-image-uri', Buffer.from(imageUri).toString('base64'));
      env:
        ECR_REPOSITORY_URL: ${{ env.ECR_REPOSITORY_URL }}
        ECR_IMAGE_TAG: ${{ inputs.image-tag }}

    # TODO: 削除
    - name: Debug
      run: |
        echo "ECR_IMAGE_URI=${ECR_REPOSITORY_URL}:${ECR_IMAGE_TAG}"
        echo "ENCODED_IMAGE_URI=$(echo -n "${ECR_REPOSITORY_URL}:${ECR_IMAGE_TAG}" | base64)"
        echo "OUTPUT_IMAGE_URI=${ENCODED_IMAGE_URI}"
      env:
        ECR_IMAGE_TAG: ${{ inputs.image-tag }}
        ENCODED_IMAGE_URI: ${{ steps.set-output.outputs.encoded-image-uri }}

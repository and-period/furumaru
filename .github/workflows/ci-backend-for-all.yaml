name: '[Backend] Build and Test'
on:
  push:
    paths:
    - '.github/workflows/ci-backend-for-all.yaml'
    - 'api/**'
    - 'infra/docker/api/**'
    - 'infra/kubernetes/**'

env:
  TZ: 'Asia/Tokyo'
  DB_HOST: 127.0.0.1
  DB_PORT: 3306
  DB_USERNAME: root
  DB_PASSWORD: 12345678

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ./api
    strategy:
      matrix:
        os: [ubuntu-latest] # exclude: macos-latest, windows-latest
        golang: ['^1.18.1']
        protobuf: ['3.x']

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Use Golang ${{ matrix.golang }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.golang }}

    # https://github.com/marketplace/actions/setup-protoc
    - name: Use Protobuf ${{ matrix.protobuf }}
      uses: arduino/setup-protoc@v1
      with:
        version: ${{ matrix.protobuf }}

    ############################################
    # Setup container
    ############################################
    - name: Start MySQL container
      working-directory: .
      run: docker-compose -f docker-compose.ci.yaml up --build --detach mysql

    - name: Wait start MySQL
      run: |
        #!/bin/bash
        retry=60
        count=1
        until mysqladmin ping -h${DB_HOST} -P${DB_PORT} -u${DB_USERNAME} -p${DB_PASSWORD}; do
          echo 'mysql is unavailable - sleeping'
          sleep 3
          if [ $(expr $retry - $count) -le 0 ]; then
            echo 'mysql is unavailable - throw error for timeout'
            exit 1
          fi
          count=$(expr $count + 1)
        done
        echo 'mysql is up - executing command'

    ############################################
    # Setup project
    ############################################
    - name: Make cache directory
      run: mkdir -p ~/go/pkg/mod

    - name: Setup
      run: make setup

    - name: Restore cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download modules
      if: steps.cache.outputs.cache-hit != 'true'
      run: go mod download

    ############################################
    # Test and syntax check
    ############################################
    - name: Fmt
      run: make fmt

    - name: Vet
      run: make vet

    - name: Lint
      run: make lint

    - name: Test
      run: make test

    ############################################
    # Build check
    ############################################
    - name: Build user gateway
      run: make build SERVICE=gateway/user

    - name: Build shop gateway
      run: make build SERVICE=gateway/shop

    - name: Build admin gateway
      run: make build SERVICE=gateway/admin

    ############################################
    # Notifications, etc.
    ############################################
    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: api
        verbose: true

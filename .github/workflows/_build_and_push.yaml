name: build and push

on:
  workflow_call:
    inputs:
      environment:
        description: '環境名'
        type: string
        required: true
      ecr-registry:
        description: 'ECRレジストリ名'
        type: string
        required: true
      ecr-repository:
        description: 'ECRリポジトリ名'
        type: string
        required: true
      service:
        description: 'サービス名'
        type: string
        required: true
      image-path:
        description: 'Dockerfileのパス'
        type: string
        required: true
      image-tag:
        description: 'ECRイメージタグ'
        type: string
        required: false
        default: 'latest'

permissions:
  id-token: write
  contents: read

jobs:
  build_and_push:
    name: build and push
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Check out code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Setup AWS
      uses: ./.github/actions/setup-aws
      with:
        aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

    - name: Get ECR repository and image url
      id: get-ecr-url
      uses: ./.github/actions/generate-ecr-url
      with:
        ecr-registry: ${{ inputs.ecr-registry }}
        ecr-repository: ${{ inputs.ecr-repository }}
        image-tag: ${{ inputs.image-tag }}

    - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      id: cache
      with:
        path: |
          go-mod-cache
          go-build-cache
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - uses: reproducible-containers/buildkit-cache-dance@5b81f4d29dc8397a7d341dba3aeecc7ec54d6361 # v3.3.0
      with:
        cache-map: |
          {
            "go-mod-cache": "/go/pkg/mod",
            "go-build-cache": "/root/.cache/go-build"
          }
        skip-extraction: ${{ steps.cache.outputs.cache-hit }}

    - name: Build and push
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: .
        platforms: linux/arm64
        file: ${{ inputs.image-path }}
        build-args: SERVICE=${{ inputs.service }}
        tags: ${{ steps.get-ecr-url.outputs.ecr-image-url }}:${{ steps.get-ecr-url.outputs.ecr-image-tag }}
        push: true
        provenance: false
        cache-from: type=gha
        cache-to: type=gha,mode=max
